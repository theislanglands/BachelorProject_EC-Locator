var Vn = Object.defineProperty;
var An = (e, t, a) => t in e ? Vn(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a;
var me = (e, t, a) => (An(e, typeof t != "symbol" ? t + "" : t, a), a);
import { shallowRef as ll, watchEffect as Ze, readonly as Ht, unref as s, ref as U, isRef as tt, watch as ue, getCurrentScope as On, onScopeDispose as xn, getCurrentInstance as nl, onMounted as ke, nextTick as Ie, computed as i, reactive as Ne, inject as He, onBeforeUnmount as aa, toRef as o, onActivated as la, defineComponent as P, provide as at, openBlock as f, createElementBlock as y, normalizeClass as L, renderSlot as k, createBlock as z, resolveDynamicComponent as ee, withCtx as D, createElementVNode as R, withDirectives as Ge, createTextVNode as te, toDisplayString as W, createVNode as ce, Transition as ol, normalizeProps as Be, guardReactiveProps as _e, useSlots as Se, createCommentVNode as X, mergeProps as Y, resolveComponent as sl, withModifiers as Xe, Fragment as se, normalizeStyle as Fe, renderList as fe, withKeys as yt, vShow as na, isReactive as Pn, onUnmounted as In, h as le, useAttrs as rl, vModelCheckbox as Fn, vModelRadio as En, vModelSelect as Ln, Teleport as il, createSlots as ul } from "vue";
import { Collapse as zn, Popover as Mt, Tooltip as Lt, Dropdown as Nn } from "bootstrap";
const Dn = (e) => typeof e == "boolean" || e === "" || e === "true" || e === "false", dl = (e) => typeof e == "boolean" ? e : e === "" ? !0 : e === "true";
class De {
  constructor(t, a = {}) {
    me(this, "cancelable", !0);
    me(this, "componentId", null);
    me(this, "_defaultPrevented", !1);
    me(this, "eventType", "");
    me(this, "nativeEvent", null);
    me(this, "_preventDefault");
    me(this, "relatedTarget", null);
    me(this, "target", null);
    if (!t)
      throw new TypeError(
        `Failed to construct '${this.constructor.name}'. 1 argument required, ${arguments.length} given.`
      );
    Object.assign(this, De.Defaults, a, { eventType: t }), this._preventDefault = function() {
      this.cancelable && (this.defaultPrevented = !0);
    };
  }
  get defaultPrevented() {
    return this._defaultPrevented;
  }
  set defaultPrevented(t) {
    this._defaultPrevented = t;
  }
  get preventDefault() {
    return this._preventDefault;
  }
  set preventDefault(t) {
    this._preventDefault = t;
  }
  static get Defaults() {
    return {
      cancelable: !0,
      componentId: null,
      eventType: "",
      nativeEvent: null,
      relatedTarget: null,
      target: null
    };
  }
}
class oa extends De {
  constructor(a, l = {}) {
    super(a, l);
    me(this, "trigger", null);
    Object.assign(this, De.Defaults, l, { eventType: a });
  }
  static get Defaults() {
    return {
      ...super.Defaults,
      trigger: null
    };
  }
}
class cl extends De {
  constructor(a, l) {
    super(a, l);
    me(this, "from");
    me(this, "to");
    me(this, "direction");
    Object.assign(this, De.Defaults, l, { eventType: a });
    const { from: n, direction: r, to: d } = l;
    this.from = n, this.to = d, this.direction = r;
  }
  static get Defaults() {
    return {
      ...super.Defaults
    };
  }
}
const Rt = (e) => e !== null && typeof e == "object", fl = (e) => /^[0-9]*\.?[0-9]+$/.test(String(e)), Hn = (e) => Object.prototype.toString.call(e) === "[object Object]", ze = (e) => e === null, vl = /_/g, ml = /([a-z])([A-Z])/g, Mn = /(\s|^)(\w)/g, Rn = /(\s|^)(\w)/, pt = /\s+/, jn = /^#/, qn = /^#[A-Za-z]+[\w\-:.]*$/, Gn = /-u-.+/, Bt = (e, t = 2) => typeof e == "string" ? e : e == null ? "" : Array.isArray(e) || Hn(e) && e.toString === Object.prototype.toString ? JSON.stringify(e, null, t) : String(e), ma = (e) => e.replace(vl, " ").replace(ml, (t, a, l) => `${a} ${l}`).replace(Rn, (t, a, l) => a + l.toUpperCase()), pa = (e) => e.replace(vl, " ").replace(ml, (t, a, l) => `${a} ${l}`).replace(Mn, (t, a, l) => a + l.toUpperCase()), Un = (e) => {
  const t = e.trim();
  return t.charAt(0).toUpperCase() + t.slice(1);
}, zt = (e) => `\\${e}`, Wn = (e) => {
  const t = Bt(e), { length: a } = t, l = t.charCodeAt(0);
  return t.split("").reduce((n, r, d) => {
    const c = t.charCodeAt(d);
    return c === 0 ? `${n}\uFFFD` : c === 127 || c >= 1 && c <= 31 || d === 0 && c >= 48 && c <= 57 || d === 1 && c >= 48 && c <= 57 && l === 45 ? n + zt(`${c.toString(16)} `) : d === 0 && c === 45 && a === 1 ? n + zt(r) : c >= 128 || c === 45 || c === 95 || c >= 48 && c <= 57 || c >= 65 && c <= 90 || c >= 97 && c <= 122 ? n + r : n + zt(r);
  }, "");
}, pl = typeof window < "u", bl = typeof document < "u", Kn = typeof Element < "u", gl = typeof navigator < "u", Tt = pl && bl && gl, Ke = pl ? window : {}, Vt = bl ? document : {}, hl = gl ? navigator : {}, yl = (hl.userAgent || "").toLowerCase();
yl.indexOf("jsdom") > 0;
/msie|trident/.test(yl);
(() => {
  let e = !1;
  if (Tt)
    try {
      const t = {
        get passive() {
          return e = !0, e;
        }
      };
      Ke.addEventListener("test", t, t), Ke.removeEventListener("test", t, t);
    } catch {
      e = !1;
    }
  return e;
})();
Tt && ("ontouchstart" in Vt.documentElement || hl.maxTouchPoints > 0);
Tt && Boolean(Ke.PointerEvent || Ke.MSPointerEvent);
Tt && "IntersectionObserver" in Ke && "IntersectionObserverEntry" in Ke && "intersectionRatio" in Ke.IntersectionObserverEntry.prototype;
const sa = typeof window < "u", Xn = typeof document < "u", Jn = typeof navigator < "u", Bl = sa && Xn && Jn, ba = sa ? window : {}, Qn = (() => {
  let e = !1;
  if (Bl)
    try {
      const t = {
        get passive() {
          e = !0;
        }
      };
      ba.addEventListener("test", t, t), ba.removeEventListener("test", t, t);
    } catch {
      e = !1;
    }
  return e;
})(), Oe = Kn ? Element.prototype : void 0, Yn = (Oe == null ? void 0 : Oe.matches) || (Oe == null ? void 0 : Oe.msMatchesSelector) || (Oe == null ? void 0 : Oe.webkitMatchesSelector), Le = (e) => !!(e && e.nodeType === Node.ELEMENT_NODE), Zn = (e) => Le(e) ? e.getBoundingClientRect() : null, eo = (e = []) => {
  const { activeElement: t } = document;
  return t && !e.some((a) => a === t) ? t : null;
}, to = (e) => Le(e) && e === eo(), ao = (e, t = {}) => {
  try {
    e.focus(t);
  } catch (a) {
    console.error(a);
  }
  return to(e);
}, lo = (e, t) => t && Le(e) && e.getAttribute(t) || null, no = (e) => {
  if (lo(e, "display") === "none")
    return !1;
  const t = Zn(e);
  return !!(t && t.height > 0 && t.width > 0);
}, we = (e) => {
  var t;
  return ((t = e == null ? void 0 : e()) != null ? t : []).length === 0;
}, $l = (e, t) => (Le(t) ? t : Vt).querySelector(e) || null, oo = (e, t) => Array.from([(Le(t) ? t : Vt).querySelectorAll(e)]), ra = (e, t) => t && Le(e) ? e.getAttribute(t) : null, so = (e) => Vt.getElementById(/^#/.test(e) ? e.slice(1) : e) || null, ro = (e, t, a) => {
  t && Le(e) && e.setAttribute(t, a);
}, io = (e, t) => {
  t && Le(e) && e.removeAttribute(t);
}, uo = (e, t) => Bt(e).toLowerCase() === Bt(t).toLowerCase(), ft = sa ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.msRequestAnimationFrame || window.oRequestAnimationFrame || ((e) => setTimeout(e, 16)) : (e) => setTimeout(e, 0), kl = (e, t) => Le(e) ? Yn.call(e, t) : !1, co = (Oe == null ? void 0 : Oe.closest) || function(e) {
  let t = this;
  if (!t)
    return null;
  do {
    if (kl(t, e))
      return t;
    t = t.parentElement || t.parentNode;
  } while (t !== null && t.nodeType === Node.ELEMENT_NODE);
  return null;
}, ga = (e, t, a = !1) => {
  if (!Le(t))
    return null;
  const l = co.call(t, e);
  return a ? l : l === t ? null : l;
}, At = (e, t, a) => t.concat(["sm", "md", "lg", "xl", "xxl"]).reduce((l, n) => (l[e ? `${e}${n.charAt(0).toUpperCase() + n.slice(1)}` : n] = a, l), /* @__PURE__ */ Object.create(null)), Sl = (e, t, a, l = a) => Object.keys(t).reduce((n, r) => (e[r] && n.push(
  [l, r.replace(a, ""), e[r]].filter((d) => d && typeof d != "boolean").join("-").toLowerCase()
), n), []), Re = (e = "") => `__BVID__${Math.random().toString().slice(2, 8)}___BV_${e}__`, it = (e) => !!(e.href || e.to), Nt = (e) => !!e && typeof e == "object" && e.constructor === Object, jt = (e, t, a = !0) => {
  const l = e instanceof Date && typeof e.getMonth == "function" ? new Date(e.getTime()) : Object.assign({}, e);
  return Nt(e) && Nt(t) && Object.keys(t).forEach((n) => {
    Nt(t[n]) ? n in e ? l[n] = jt(e[n], t[n], a) : Object.assign(l, { [n]: t[n] }) : Array.isArray(t[n]) && Array.isArray(e[n]) ? Object.assign(l, {
      [n]: a ? e[n].concat(
        t[n].filter((r) => !e[n].includes(r))
      ) : t[n]
    }) : Object.assign(l, { [n]: t[n] });
  }), l;
}, Pe = (e, t = {}, a = {}) => {
  const l = [e];
  let n;
  for (let r = 0; r < l.length && !n; r++) {
    const d = l[r];
    n = a[d];
  }
  return n && typeof n == "function" ? n(t) : n;
}, je = (e, t = NaN) => Number.isInteger(e) ? e : t, ot = (e, t = NaN) => {
  const a = Number.parseInt(e, 10);
  return Number.isNaN(a) ? t : a;
}, rt = (e, t = NaN) => {
  const a = Number.parseFloat(e.toString());
  return Number.isNaN(a) ? t : a;
}, Ot = (e, t) => Object.keys(e).filter((a) => !t.includes(a)).reduce((a, l) => ({ ...a, [l]: e[l] }), {}), $t = (e) => Array.isArray(e) ? e.map((t) => $t(t)) : e instanceof Date ? new Date(e.getTime()) : e && typeof e == "object" ? Object.getOwnPropertyNames(e).reduce((t, a) => {
  var l;
  return Object.defineProperty(t, a, (l = Object.getOwnPropertyDescriptor(e, a)) != null ? l : {}), t[a] = $t(e[a]), t;
}, Object.create(Object.getPrototypeOf(e))) : e, qt = (e) => new Promise((t) => t($t(e))), ha = (e, t) => t + (e ? Un(e) : ""), ia = (e, t) => (Array.isArray(t) ? t.slice() : Object.keys(t)).reduce(
  (a, l) => (a[l] = e[l], a),
  {}
), xt = (e, t) => e === !0 || e === "true" || e === "" ? "true" : e === "grammar" || e === "spelling" ? e : t === !1 ? "true" : e === !1 || e === "false" ? "false" : void 0, Cl = Symbol(), wl = Symbol(), _l = Symbol(), Tl = Symbol(), Vl = Symbol(), Al = Symbol(), Ol = Symbol(), Gt = (e, t) => {
  var a;
  return ((a = e == null ? void 0 : e()) != null ? a : []).reduce((l, n) => (typeof n.type == "symbol" ? l = l.concat(n.children) : l.push(n), l), []).filter((l) => {
    var n;
    return ((n = l.type) == null ? void 0 : n.__name) === t;
  });
};
var fo = Object.defineProperty, vo = Object.defineProperties, mo = Object.getOwnPropertyDescriptors, ya = Object.getOwnPropertySymbols, po = Object.prototype.hasOwnProperty, bo = Object.prototype.propertyIsEnumerable, Ba = (e, t, a) => t in e ? fo(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a, go = (e, t) => {
  for (var a in t || (t = {}))
    po.call(t, a) && Ba(e, a, t[a]);
  if (ya)
    for (var a of ya(t))
      bo.call(t, a) && Ba(e, a, t[a]);
  return e;
}, ho = (e, t) => vo(e, mo(t));
function xl(e, t) {
  var a;
  const l = ll();
  return Ze(() => {
    l.value = e();
  }, ho(go({}, t), {
    flush: (a = t == null ? void 0 : t.flush) != null ? a : "sync"
  })), Ht(l);
}
var $a;
const kt = typeof window < "u", Pl = (e) => typeof e == "function", yo = (e) => typeof e == "string", Bo = () => {
};
kt && (($a = window == null ? void 0 : window.navigator) == null ? void 0 : $a.userAgent) && /iP(ad|hone|od)/.test(window.navigator.userAgent);
function We(e) {
  return typeof e == "function" ? e() : s(e);
}
function $o(e, t) {
  function a(...l) {
    return new Promise((n, r) => {
      Promise.resolve(e(() => t.apply(this, l), { fn: t, thisArg: this, args: l })).then(n).catch(r);
    });
  }
  return a;
}
const Il = (e) => e();
function ko(e = Il) {
  const t = U(!0);
  function a() {
    t.value = !1;
  }
  function l() {
    t.value = !0;
  }
  return { isActive: t, pause: a, resume: l, eventFilter: (...r) => {
    t.value && e(...r);
  } };
}
function So(e) {
  return e;
}
function St(e) {
  return On() ? (xn(e), !0) : !1;
}
function Co(e) {
  return typeof e == "function" ? i(e) : U(e);
}
function Fl(e, t = !0) {
  nl() ? ke(e) : t ? e() : Ie(e);
}
function El(e, t = 1e3, a = {}) {
  const {
    immediate: l = !0,
    immediateCallback: n = !1
  } = a;
  let r = null;
  const d = U(!1);
  function c() {
    r && (clearInterval(r), r = null);
  }
  function v() {
    d.value = !1, c();
  }
  function m() {
    s(t) <= 0 || (d.value = !0, n && e(), c(), r = setInterval(e, We(t)));
  }
  if (l && kt && m(), tt(t) || Pl(t)) {
    const C = ue(t, () => {
      d.value && kt && m();
    });
    St(C);
  }
  return St(v), {
    isActive: d,
    pause: v,
    resume: m
  };
}
var ka = Object.getOwnPropertySymbols, wo = Object.prototype.hasOwnProperty, _o = Object.prototype.propertyIsEnumerable, To = (e, t) => {
  var a = {};
  for (var l in e)
    wo.call(e, l) && t.indexOf(l) < 0 && (a[l] = e[l]);
  if (e != null && ka)
    for (var l of ka(e))
      t.indexOf(l) < 0 && _o.call(e, l) && (a[l] = e[l]);
  return a;
};
function Vo(e, t, a = {}) {
  const l = a, {
    eventFilter: n = Il
  } = l, r = To(l, [
    "eventFilter"
  ]);
  return ue(e, $o(n, t), r);
}
var Ao = Object.defineProperty, Oo = Object.defineProperties, xo = Object.getOwnPropertyDescriptors, Ct = Object.getOwnPropertySymbols, Ll = Object.prototype.hasOwnProperty, zl = Object.prototype.propertyIsEnumerable, Sa = (e, t, a) => t in e ? Ao(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a, Po = (e, t) => {
  for (var a in t || (t = {}))
    Ll.call(t, a) && Sa(e, a, t[a]);
  if (Ct)
    for (var a of Ct(t))
      zl.call(t, a) && Sa(e, a, t[a]);
  return e;
}, Io = (e, t) => Oo(e, xo(t)), Fo = (e, t) => {
  var a = {};
  for (var l in e)
    Ll.call(e, l) && t.indexOf(l) < 0 && (a[l] = e[l]);
  if (e != null && Ct)
    for (var l of Ct(e))
      t.indexOf(l) < 0 && zl.call(e, l) && (a[l] = e[l]);
  return a;
};
function Eo(e, t, a = {}) {
  const l = a, {
    eventFilter: n
  } = l, r = Fo(l, [
    "eventFilter"
  ]), { eventFilter: d, pause: c, resume: v, isActive: m } = ko(n);
  return { stop: Vo(e, t, Io(Po({}, r), {
    eventFilter: d
  })), pause: c, resume: v, isActive: m };
}
function Lo(e) {
  var t;
  const a = We(e);
  return (t = a == null ? void 0 : a.$el) != null ? t : a;
}
const ut = kt ? window : void 0;
function zo(...e) {
  let t, a, l, n;
  if (yo(e[0]) || Array.isArray(e[0]) ? ([a, l, n] = e, t = ut) : [t, a, l, n] = e, !t)
    return Bo;
  Array.isArray(a) || (a = [a]), Array.isArray(l) || (l = [l]);
  const r = [], d = () => {
    r.forEach((C) => C()), r.length = 0;
  }, c = (C, p, g) => (C.addEventListener(p, g, n), () => C.removeEventListener(p, g, n)), v = ue(() => Lo(t), (C) => {
    d(), C && r.push(...a.flatMap((p) => l.map((g) => c(C, p, g))));
  }, { immediate: !0, flush: "post" }), m = () => {
    v(), d();
  };
  return St(m), m;
}
function No(e, t = !1) {
  const a = U(), l = () => a.value = Boolean(e());
  return l(), Fl(l, t), a;
}
function Do(e, t = {}) {
  const { window: a = ut } = t, l = No(() => a && "matchMedia" in a && typeof a.matchMedia == "function");
  let n;
  const r = U(!1), d = () => {
    !n || ("removeEventListener" in n ? n.removeEventListener("change", c) : n.removeListener(c));
  }, c = () => {
    !l.value || (d(), n = a.matchMedia(Co(e).value), r.value = n.matches, "addEventListener" in n ? n.addEventListener("change", c) : n.addListener(c));
  };
  return Ze(c), St(() => d()), r;
}
const Ut = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {}, Wt = "__vueuse_ssr_handlers__";
Ut[Wt] = Ut[Wt] || {};
const Ho = Ut[Wt];
function Nl(e, t) {
  return Ho[e] || t;
}
function Mo(e) {
  return e == null ? "any" : e instanceof Set ? "set" : e instanceof Map ? "map" : e instanceof Date ? "date" : typeof e == "boolean" ? "boolean" : typeof e == "string" ? "string" : typeof e == "object" ? "object" : Number.isNaN(e) ? "any" : "number";
}
var Ro = Object.defineProperty, Ca = Object.getOwnPropertySymbols, jo = Object.prototype.hasOwnProperty, qo = Object.prototype.propertyIsEnumerable, wa = (e, t, a) => t in e ? Ro(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a, _a = (e, t) => {
  for (var a in t || (t = {}))
    jo.call(t, a) && wa(e, a, t[a]);
  if (Ca)
    for (var a of Ca(t))
      qo.call(t, a) && wa(e, a, t[a]);
  return e;
};
const Go = {
  boolean: {
    read: (e) => e === "true",
    write: (e) => String(e)
  },
  object: {
    read: (e) => JSON.parse(e),
    write: (e) => JSON.stringify(e)
  },
  number: {
    read: (e) => Number.parseFloat(e),
    write: (e) => String(e)
  },
  any: {
    read: (e) => e,
    write: (e) => String(e)
  },
  string: {
    read: (e) => e,
    write: (e) => String(e)
  },
  map: {
    read: (e) => new Map(JSON.parse(e)),
    write: (e) => JSON.stringify(Array.from(e.entries()))
  },
  set: {
    read: (e) => new Set(JSON.parse(e)),
    write: (e) => JSON.stringify(Array.from(e))
  },
  date: {
    read: (e) => new Date(e),
    write: (e) => e.toISOString()
  }
};
function Uo(e, t, a, l = {}) {
  var n;
  const {
    flush: r = "pre",
    deep: d = !0,
    listenToStorageChanges: c = !0,
    writeDefaults: v = !0,
    mergeDefaults: m = !1,
    shallow: C,
    window: p = ut,
    eventFilter: g,
    onError: A = (O) => {
      console.error(O);
    }
  } = l, w = (C ? ll : U)(t);
  if (!a)
    try {
      a = Nl("getDefaultStorage", () => {
        var O;
        return (O = ut) == null ? void 0 : O.localStorage;
      })();
    } catch (O) {
      A(O);
    }
  if (!a)
    return w;
  const B = We(t), S = Mo(B), h = (n = l.serializer) != null ? n : Go[S], { pause: $, resume: F } = Eo(w, () => I(w.value), { flush: r, deep: d, eventFilter: g });
  return p && c && zo(p, "storage", _), _(), w;
  function I(O) {
    try {
      if (O == null)
        a.removeItem(e);
      else {
        const b = h.write(O), x = a.getItem(e);
        x !== b && (a.setItem(e, b), p && (p == null || p.dispatchEvent(new StorageEvent("storage", {
          key: e,
          oldValue: x,
          newValue: b,
          storageArea: a
        }))));
      }
    } catch (b) {
      A(b);
    }
  }
  function V(O) {
    const b = O ? O.newValue : a.getItem(e);
    if (b == null)
      return v && B !== null && a.setItem(e, h.write(B)), B;
    if (!O && m) {
      const x = h.read(b);
      return Pl(m) ? m(x, B) : S === "object" && !Array.isArray(x) ? _a(_a({}, B), x) : x;
    } else
      return typeof b != "string" ? b : h.read(b);
  }
  function _(O) {
    if (!(O && O.storageArea !== a)) {
      if (O && O.key == null) {
        w.value = B;
        return;
      }
      if (!(O && O.key !== e)) {
        $();
        try {
          w.value = V(O);
        } catch (b) {
          A(b);
        } finally {
          O ? Ie(F) : F();
        }
      }
    }
  }
}
function Wo(e) {
  return Do("(prefers-color-scheme: dark)", e);
}
var Ko = Object.defineProperty, Ta = Object.getOwnPropertySymbols, Xo = Object.prototype.hasOwnProperty, Jo = Object.prototype.propertyIsEnumerable, Va = (e, t, a) => t in e ? Ko(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a, Qo = (e, t) => {
  for (var a in t || (t = {}))
    Xo.call(t, a) && Va(e, a, t[a]);
  if (Ta)
    for (var a of Ta(t))
      Jo.call(t, a) && Va(e, a, t[a]);
  return e;
};
function Yo(e = {}) {
  const {
    selector: t = "html",
    attribute: a = "class",
    initialValue: l = "auto",
    window: n = ut,
    storage: r,
    storageKey: d = "vueuse-color-scheme",
    listenToStorageChanges: c = !0,
    storageRef: v,
    emitAuto: m
  } = e, C = Qo({
    auto: "",
    light: "light",
    dark: "dark"
  }, e.modes || {}), p = Wo({ window: n }), g = i(() => p.value ? "dark" : "light"), A = v || (d == null ? U(l) : Uo(d, l, r, { window: n, listenToStorageChanges: c })), w = i({
    get() {
      return A.value === "auto" && !m ? g.value : A.value;
    },
    set($) {
      A.value = $;
    }
  }), B = Nl("updateHTMLAttrs", ($, F, I) => {
    const V = n == null ? void 0 : n.document.querySelector($);
    if (!!V)
      if (F === "class") {
        const _ = I.split(/\s/g);
        Object.values(C).flatMap((O) => (O || "").split(/\s/g)).filter(Boolean).forEach((O) => {
          _.includes(O) ? V.classList.add(O) : V.classList.remove(O);
        });
      } else
        V.setAttribute(F, I);
  });
  function S($) {
    var F;
    const I = $ === "auto" ? g.value : $;
    B(t, a, (F = C[I]) != null ? F : I);
  }
  function h($) {
    e.onChanged ? e.onChanged($, S) : S($);
  }
  return ue(w, h, { flush: "post", immediate: !0 }), m && ue(g, () => h(w.value), { flush: "post" }), Fl(() => h(w.value)), w;
}
var Aa;
(function(e) {
  e.UP = "UP", e.RIGHT = "RIGHT", e.DOWN = "DOWN", e.LEFT = "LEFT", e.NONE = "NONE";
})(Aa || (Aa = {}));
var Zo = Object.defineProperty, Oa = Object.getOwnPropertySymbols, es = Object.prototype.hasOwnProperty, ts = Object.prototype.propertyIsEnumerable, xa = (e, t, a) => t in e ? Zo(e, t, { enumerable: !0, configurable: !0, writable: !0, value: a }) : e[t] = a, as = (e, t) => {
  for (var a in t || (t = {}))
    es.call(t, a) && xa(e, a, t[a]);
  if (Oa)
    for (var a of Oa(t))
      ts.call(t, a) && xa(e, a, t[a]);
  return e;
};
const ls = {
  easeInSine: [0.12, 0, 0.39, 0],
  easeOutSine: [0.61, 1, 0.88, 1],
  easeInOutSine: [0.37, 0, 0.63, 1],
  easeInQuad: [0.11, 0, 0.5, 0],
  easeOutQuad: [0.5, 1, 0.89, 1],
  easeInOutQuad: [0.45, 0, 0.55, 1],
  easeInCubic: [0.32, 0, 0.67, 0],
  easeOutCubic: [0.33, 1, 0.68, 1],
  easeInOutCubic: [0.65, 0, 0.35, 1],
  easeInQuart: [0.5, 0, 0.75, 0],
  easeOutQuart: [0.25, 1, 0.5, 1],
  easeInOutQuart: [0.76, 0, 0.24, 1],
  easeInQuint: [0.64, 0, 0.78, 0],
  easeOutQuint: [0.22, 1, 0.36, 1],
  easeInOutQuint: [0.83, 0, 0.17, 1],
  easeInExpo: [0.7, 0, 0.84, 0],
  easeOutExpo: [0.16, 1, 0.3, 1],
  easeInOutExpo: [0.87, 0, 0.13, 1],
  easeInCirc: [0.55, 0, 1, 0.45],
  easeOutCirc: [0, 0.55, 0.45, 1],
  easeInOutCirc: [0.85, 0, 0.15, 1],
  easeInBack: [0.36, 0, 0.66, -0.56],
  easeOutBack: [0.34, 1.56, 0.64, 1],
  easeInOutBack: [0.68, -0.6, 0.32, 1.6]
};
as({
  linear: So
}, ls);
const dt = (e) => xl(() => e.value ? `justify-content-${e.value}` : "");
function u(e) {
  return xl(
    () => e.value === void 0 || e.value === null ? e.value : dl(e.value)
  );
}
const Dl = {
  items: Ne([]),
  reset() {
    this.items = Ne([]);
  }
}, ns = (e) => {
  e.provide(_l, Dl);
}, Hl = () => {
  var e;
  return (e = He(_l)) != null ? e : Dl;
}, qe = (e, t, a) => {
  ke(() => {
    var l;
    (l = e == null ? void 0 : e.value) == null || l.addEventListener(t, a);
  }), aa(() => {
    var l;
    (l = e == null ? void 0 : e.value) == null || l.removeEventListener(t, a);
  });
}, Ml = (e) => i(() => ({
  "form-check": e.plain === !1 && e.button === !1,
  "form-check-inline": e.inline === !0,
  "form-switch": e.switch === !0,
  [`form-control-${e.size}`]: e.size !== void 0 && e.size !== "md"
})), Rl = (e) => i(() => ({
  "form-check-input": e.plain === !1 && e.button === !1,
  "is-valid": e.state === !0,
  "is-invalid": e.state === !1,
  "btn-check": e.button === !0
})), jl = (e) => i(() => ({
  "form-check-label": e.plain === !1 && e.button === !1,
  btn: e.button === !0,
  [`btn-${e.buttonVariant}`]: e.button === !0 && e.buttonVariant !== void 0,
  [`btn-${e.size}`]: e.button && e.size && e.size !== "md"
})), ql = (e) => i(() => ({
  "aria-invalid": xt(e.ariaInvalid, e.state),
  "aria-required": e.required === !0 ? !0 : void 0
})), Gl = (e) => i(() => ({
  "was-validated": e.validated === !0,
  "btn-group": e.buttons === !0 && e.stacked === !1,
  "btn-group-vertical": e.stacked === !0,
  [`btn-group-${e.size}`]: e.size !== void 0
})), wt = (e, t, a) => e.reduce(
  (l, n) => n.type.toString() === "Symbol(Fragment)" ? l.concat(n.children) : l.concat([n]),
  []
).filter((l) => l.type.__name === t || l.type.name === t).map((l) => {
  const n = (l.children.default ? l.children.default() : []).find(
    (r) => r.type.toString() === "Symbol(Text)"
  );
  return {
    props: {
      disabled: a,
      ...l.props
    },
    text: n ? n.children : ""
  };
}), Ul = (e, t) => typeof e == "string" ? {
  props: {
    value: e,
    disabled: t.disabled
  },
  text: e
} : {
  props: {
    value: e[t.valueField],
    disabled: t.disabled || e[t.disabledField],
    ...e.props
  },
  text: e[t.textField],
  html: e[t.htmlField]
}, Wl = (e, t, a, l, n) => ({
  ...e,
  props: {
    "button-variant": a.buttonVariant,
    form: a.form,
    name: l.value,
    id: `${n.value}_option_${t}`,
    button: a.buttons,
    state: a.state,
    plain: a.plain,
    size: a.size,
    inline: !a.stacked,
    required: a.required,
    ...e.props
  }
}), $e = (e, t) => i(() => (e == null ? void 0 : e.value) || Re(t)), Kl = {
  ariaInvalid: {
    type: [Boolean, String],
    default: void 0
  },
  autocomplete: { type: String, required: !1 },
  autofocus: { type: Boolean, default: !1 },
  disabled: { type: Boolean, default: !1 },
  form: { type: String, required: !1 },
  formatter: { type: Function, required: !1 },
  id: { type: String, required: !1 },
  lazy: { type: Boolean, default: !1 },
  lazyFormatter: { type: Boolean, default: !1 },
  list: { type: String, required: !1 },
  modelValue: { type: [String, Number], default: "" },
  name: { type: String, required: !1 },
  number: { type: Boolean, default: !1 },
  placeholder: { type: String, required: !1 },
  plaintext: { type: Boolean, default: !1 },
  readonly: { type: Boolean, default: !1 },
  required: { type: Boolean, default: !1 },
  size: { type: String, required: !1 },
  state: { type: Boolean, default: null },
  trim: { type: Boolean, default: !1 }
}, Xl = (e, t) => {
  const a = U();
  let l = null, n = !0;
  const r = $e(o(e, "id"), "input"), d = (B, S, h = !1) => (B = String(B), typeof e.formatter == "function" && (!e.lazyFormatter || h) ? (n = !1, e.formatter(B, S)) : B), c = (B) => e.trim ? B.trim() : e.number ? Number.parseFloat(B) : B, v = () => {
    var B;
    e.autofocus && ((B = a.value) == null || B.focus());
  };
  ke(() => {
    a.value && (a.value.value = e.modelValue), Ie(() => {
      v();
    });
  }), la(() => {
    Ie(() => {
    });
  });
  const m = i(
    () => {
      var B;
      return xt(e.ariaInvalid, (B = e.state) != null ? B : void 0);
    }
  ), C = (B) => {
    const { value: S } = B.target, h = d(S, B);
    if (h === !1 || B.defaultPrevented) {
      B.preventDefault();
      return;
    }
    if (e.lazy)
      return;
    const $ = c(h);
    e.modelValue !== $ && (l = S, t("update:modelValue", $)), t("input", h);
  }, p = (B) => {
    const { value: S } = B.target, h = d(S, B);
    if (h === !1 || B.defaultPrevented) {
      B.preventDefault();
      return;
    }
    if (!e.lazy)
      return;
    l = S, t("update:modelValue", h);
    const $ = c(h);
    e.modelValue !== $ && t("change", h);
  }, g = (B) => {
    if (t("blur", B), !e.lazy && !e.lazyFormatter)
      return;
    const { value: S } = B.target, h = d(S, B, !0);
    l = S, t("update:modelValue", h);
  }, A = () => {
    var B;
    e.disabled || (B = a.value) == null || B.focus();
  }, w = () => {
    var B;
    e.disabled || (B = a.value) == null || B.blur();
  };
  return ue(
    () => e.modelValue,
    (B) => {
      !a.value || (a.value.value = l && n ? l : B, l = null, n = !0);
    }
  ), {
    input: a,
    computedId: r,
    computedAriaInvalid: m,
    onInput: C,
    onChange: p,
    onBlur: g,
    focus: A,
    blur: w
  };
}, Ye = (e, t) => {
  if (!e)
    return e;
  if (t in e)
    return e[t];
  const a = t.split(".");
  return Ye(e[a[0]], a.splice(1).join("."));
}, Dt = (e, t = null, a, l) => {
  if (Object.prototype.toString.call(e) === "[object Object]") {
    const n = Ye(e, l.valueField), r = Ye(e, l.textField), d = Ye(e, l.htmlField), c = Ye(e, l.disabledField), v = e[l.optionsField] || null;
    return v !== null ? {
      label: String(Ye(e, l.labelField) || r),
      options: ua(v, a, l)
    } : {
      value: typeof n > "u" ? t || r : n,
      text: String(typeof r > "u" ? t : r),
      html: d,
      disabled: Boolean(c)
    };
  }
  return {
    value: t || e,
    text: String(e),
    disabled: !1
  };
}, ua = (e, t, a) => Array.isArray(e) ? e.map((l) => Dt(l, null, t, a)) : Object.prototype.toString.call(e) === "[object Object]" ? (console.warn(
  `[BootstrapVue warn]: ${t} - Setting prop "options" to an object is deprecated. Use the array format instead.`
), Object.keys(e).map((l) => {
  const n = e[l];
  switch (typeof n) {
    case "object":
      return Dt(n.text, String(n.value), t, a);
    default:
      return Dt(n, String(l), t, a);
  }
})) : [], os = (e = !1, t = {}) => {
  var n, r;
  const a = "data-bs-theme", l = "body";
  return Yo({
    attribute: a,
    selector: l,
    storageKey: e ? `${(n = t.attribute) != null ? n : a}-${(r = t.selector) != null ? r : l}` : null,
    ...t
  });
}, ss = ["id"], rs = /* @__PURE__ */ P({
  __name: "BAccordion",
  props: {
    flush: { default: !1 },
    free: { default: !1 },
    id: null
  },
  setup(e) {
    const t = e, a = $e(o(t, "id"), "accordion"), l = u(o(t, "flush")), n = u(o(t, "free")), r = i(() => ({
      "accordion-flush": l.value
    }));
    return n.value || at(Ol, a.value), (d, c) => (f(), y("div", {
      id: s(a),
      class: L(["accordion", s(r)])
    }, [
      k(d.$slots, "default")
    ], 10, ss));
  }
}), Jl = /* @__PURE__ */ P({
  __name: "BCollapse",
  props: {
    accordion: null,
    id: null,
    modelValue: { default: !1 },
    tag: { default: "div" },
    toggle: { default: !1 },
    visible: { default: !1 },
    isNav: { default: !1 }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden"],
  setup(e, { emit: t }) {
    const a = e, l = u(o(a, "modelValue")), n = u(o(a, "toggle")), r = u(o(a, "visible")), d = u(o(a, "isNav")), c = $e(o(a, "id"), "collapse"), v = U(), m = U(), C = i(() => ({
      show: l.value,
      "navbar-collapse": d.value
    })), p = () => t("update:modelValue", !1);
    return ue(l, (g) => {
      var A, w;
      g ? (A = m.value) == null || A.show() : (w = m.value) == null || w.hide();
    }), ue(r, (g) => {
      var A, w;
      g ? (t("update:modelValue", !!g), (A = m.value) == null || A.show()) : (t("update:modelValue", !!g), (w = m.value) == null || w.hide());
    }), qe(v, "show.bs.collapse", () => {
      t("show"), t("update:modelValue", !0);
    }), qe(v, "hide.bs.collapse", () => {
      t("hide"), t("update:modelValue", !1);
    }), qe(v, "shown.bs.collapse", () => t("shown")), qe(v, "hidden.bs.collapse", () => t("hidden")), ke(() => {
      var g;
      m.value = new zn(v.value, {
        parent: a.accordion ? `#${a.accordion}` : void 0,
        toggle: n.value
      }), (r.value || l.value) && (t("update:modelValue", !0), (g = m.value) == null || g.show());
    }), (g, A) => (f(), z(ee(e.tag), {
      id: s(c),
      ref_key: "element",
      ref: v,
      class: L(["collapse", s(C)]),
      "data-bs-parent": e.accordion || null,
      "is-nav": s(d)
    }, {
      default: D(() => [
        k(g.$slots, "default", {
          visible: s(l),
          close: p
        })
      ]),
      _: 3
    }, 8, ["id", "class", "data-bs-parent", "is-nav"]));
  }
}), Pa = (e, t) => e.setAttribute("data-bs-theme", t), is = {
  mounted(e, t) {
    Pa(e, t.value);
  },
  updated(e, t) {
    Pa(e, t.value);
  }
}, us = {
  mounted(e, t) {
    const a = t.modifiers.left ? "left" : t.modifiers.right ? "right" : t.modifiers.bottom ? "bottom" : t.modifiers.top ? "top" : "right", l = [];
    t.modifiers.manual ? l.push("manual") : (t.modifiers.click && l.push("click"), t.modifiers.hover && l.push("hover"), t.modifiers.focus && l.push("focus")), e.setAttribute("data-bs-toggle", "popover"), new Mt(e, {
      trigger: l.length === 0 ? "click" : l.join(" "),
      placement: a,
      content: t.value,
      html: t.modifiers.html
    });
  },
  unmounted(e) {
    const t = Mt.getInstance(e);
    t !== null && t.dispose();
  }
}, ds = (e) => {
  if (e.classList.contains("offcanvas"))
    return "offcanvas";
  if (e.classList.contains("collapse"))
    return "collapse";
  throw Error("Couldn't resolve toggle type");
}, cs = (e, t) => {
  const { modifiers: a, arg: l, value: n } = e, r = Object.keys(a || {}), d = typeof n == "string" ? n.split(pt) : n;
  if (uo(t.tagName, "a")) {
    const c = ra(t, "href") || "";
    qn.test(c) && r.push(c.replace(jn, ""));
  }
  return Array.prototype.concat.apply([], [l, d]).forEach((c) => typeof c == "string" && r.push(c)), r.filter((c, v, m) => c && m.indexOf(c) === v);
}, da = {
  mounted(e, t) {
    const a = cs(t, e), l = [], n = e.tagName === "a" ? "href" : "data-bs-target";
    a.forEach((r) => {
      const d = document.getElementById(r);
      d !== null && (e.setAttribute("data-bs-toggle", ds(d)), l.push(`#${r}`));
    }), l.length > 0 && e.setAttribute(n, l.join(","));
  }
}, fs = (e, t) => {
  if (t != null && t.trigger)
    return t.trigger;
  if (e.manual)
    return "manual";
  const a = [];
  return e.click && a.push("click"), e.hover && a.push("hover"), e.focus && a.push("focus"), a.length > 0 ? a.join(" ") : "hover focus";
}, vs = (e, t) => t != null && t.placement ? t.placement : e.left ? "left" : e.right ? "right" : e.bottom ? "bottom" : "top", ms = (e) => e != null && e.delay ? e.delay : 0, Ia = (e) => typeof e > "u" ? (console.warn(
  "Review tooltip directive usage. Some uses are not defining a title in root component or a value like `v-b-tooltip='{title: \"my title\"}'` nor `v-b-tooltip=\"'my title'\"` to define a title"
), "") : typeof e == "object" ? e == null ? void 0 : e.title : e, ps = {
  beforeMount(e, t) {
    e.setAttribute("data-bs-toggle", "tooltip"), e.getAttribute("title") || e.setAttribute("title", Ia(t.value).toString());
    const a = /<("[^"]*"|'[^']*'|[^'">])*>/.test(e.title), l = fs(t.modifiers, t.value), n = vs(t.modifiers, t.value), r = ms(t.value), d = e.getAttribute("title");
    new Lt(e, {
      trigger: l,
      placement: n,
      delay: r,
      html: a
    }), d && e.setAttribute("data-bs-original-title", d);
  },
  updated(e, t) {
    e.getAttribute("title") || e.setAttribute("title", Ia(t.value).toString());
    const a = e.getAttribute("title"), l = e.getAttribute("data-bs-original-title"), n = Lt.getInstance(e);
    e.removeAttribute("title"), a && a !== l && (n == null || n.setContent({ ".tooltip-inner": a }), e.setAttribute("data-bs-original-title", a));
  },
  unmounted(e) {
    const t = Lt.getInstance(e);
    t !== null && t.dispose();
  }
}, bt = /* @__PURE__ */ new Map();
class bs {
  constructor(t, a, l, n, r) {
    me(this, "element");
    me(this, "margin");
    me(this, "once");
    me(this, "callback");
    me(this, "instance");
    me(this, "observer");
    me(this, "doneOnce");
    me(this, "visible");
    this.element = t, this.margin = a, this.once = l, this.callback = n, this.instance = r, this.createObserver();
  }
  createObserver() {
    if (this.observer && this.stop(), !(this.doneOnce || typeof this.callback != "function")) {
      try {
        this.observer = new IntersectionObserver(this.handler.bind(this), {
          root: null,
          rootMargin: this.margin,
          threshold: 0
        });
      } catch {
        console.error("Intersection Observer not supported"), this.doneOnce = !0, this.observer = void 0, this.callback(null);
        return;
      }
      this.instance.$nextTick(() => {
        this.observer && this.observer.observe(this.element);
      });
    }
  }
  handler(t) {
    const [a] = t, l = Boolean(a.isIntersecting || a.intersectionRatio > 0);
    l !== this.visible && (this.visible = l, this.callback(l), this.once && this.visible && (this.doneOnce = !0, this.stop()));
  }
  stop() {
    this.observer && this.observer.disconnect(), this.observer = null;
  }
}
const Ql = (e) => {
  if (bt.has(e)) {
    const t = bt.get(e);
    t && t.stop && t.stop(), bt.delete(e);
  }
}, Fa = (e, t) => {
  const a = {
    margin: "0px",
    once: !1,
    callback: t.value
  };
  Object.keys(t.modifiers).forEach((n) => {
    Number.isInteger(n) ? a.margin = `${n}px` : n.toLowerCase() === "once" && (a.once = !0);
  }), Ql(e);
  const l = new bs(
    e,
    a.margin,
    a.once,
    a.callback,
    t.instance
  );
  bt.set(e, l);
}, gs = {
  beforeMount(e, t) {
    Fa(e, t);
  },
  updated(e, t) {
    Fa(e, t);
  },
  unmounted(e) {
    Ql(e);
  }
}, hs = { class: "accordion-item" }, ys = ["id"], Bs = ["aria-expanded", "aria-controls"], $s = { class: "accordion-body" }, ks = /* @__PURE__ */ P({
  __name: "BAccordionItem",
  props: {
    id: null,
    title: null,
    visible: { default: !1 }
  },
  setup(e) {
    const t = e, a = He(Ol), l = $e(o(t, "id"), "accordion_item"), n = u(o(t, "visible"));
    return (r, d) => (f(), y("div", hs, [
      R("h2", {
        id: `${s(l)}heading`,
        class: "accordion-header"
      }, [
        Ge((f(), y("button", {
          class: L(["accordion-button", { collapsed: !s(n) }]),
          type: "button",
          "aria-expanded": s(n) ? "true" : "false",
          "aria-controls": s(l)
        }, [
          k(r.$slots, "title", {}, () => [
            te(W(e.title), 1)
          ])
        ], 10, Bs)), [
          [s(da), void 0, s(l)]
        ])
      ], 8, ys),
      ce(Jl, {
        id: s(l),
        class: "accordion-collapse",
        visible: e.visible,
        accordion: s(a),
        "aria-labelledby": `heading${s(l)}`
      }, {
        default: D(() => [
          R("div", $s, [
            k(r.$slots, "default")
          ])
        ]),
        _: 3
      }, 8, ["id", "visible", "accordion", "aria-labelledby"])
    ]));
  }
}), lt = /* @__PURE__ */ P({
  __name: "BTransition",
  props: {
    appear: { default: !1 },
    mode: null,
    noFade: { default: !1 },
    transProps: null
  },
  setup(e) {
    const t = e, a = u(o(t, "appear")), l = u(o(t, "noFade")), n = i(() => {
      const c = {
        name: "",
        enterActiveClass: "",
        enterToClass: "",
        leaveActiveClass: "",
        leaveToClass: "showing",
        enterFromClass: "showing",
        leaveFromClass: ""
      }, v = {
        ...c,
        enterActiveClass: "fade showing",
        leaveActiveClass: "fade showing"
      };
      return l.value ? c : v;
    }), r = i(() => ({ mode: t.mode, css: !0, ...n.value })), d = i(
      () => t.transProps !== void 0 ? {
        ...r.value,
        ...t.transProps
      } : a.value ? {
        ...r.value,
        appear: !0,
        appearActiveClass: n.value.enterActiveClass,
        appearToClass: n.value.enterToClass
      } : r.value
    );
    return (c, v) => (f(), z(ol, Be(_e(s(d))), {
      default: D(() => [
        k(c.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), Ss = ["type", "disabled", "aria-label"], nt = /* @__PURE__ */ P({
  __name: "BCloseButton",
  props: {
    ariaLabel: { default: "Close" },
    disabled: { default: !1 },
    white: { default: !1 },
    type: { default: "button" }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = u(o(a, "disabled")), n = u(o(a, "white")), r = i(() => ({
      "btn-close-white": n.value
    }));
    return (d, c) => (f(), y("button", {
      type: e.type,
      class: L(["btn-close", s(r)]),
      disabled: s(l),
      "aria-label": e.ariaLabel,
      onClick: c[0] || (c[0] = (v) => t("click", v))
    }, null, 10, Ss));
  }
}), Cs = {
  key: 0,
  class: "visually-hidden"
}, Pt = /* @__PURE__ */ P({
  __name: "BSpinner",
  props: {
    label: null,
    role: { default: "status" },
    small: { default: !1 },
    tag: { default: "span" },
    type: { default: "border" },
    variant: null
  },
  setup(e) {
    const t = e, a = Se(), l = u(o(t, "small")), n = i(() => ({
      "spinner-border": t.type === "border",
      "spinner-border-sm": t.type === "border" && l.value,
      "spinner-grow": t.type === "grow",
      "spinner-grow-sm": t.type === "grow" && l.value,
      [`text-${t.variant}`]: t.variant !== void 0
    })), r = i(() => !we(a.label));
    return (d, c) => (f(), z(ee(e.tag), {
      class: L(s(n)),
      role: e.label || s(r) ? e.role : null,
      "aria-hidden": e.label || s(r) ? null : !0
    }, {
      default: D(() => [
        e.label || s(r) ? (f(), y("span", Cs, [
          k(d.$slots, "label", {}, () => [
            te(W(e.label), 1)
          ])
        ])) : X("", !0)
      ]),
      _: 3
    }, 8, ["class", "role", "aria-hidden"]));
  }
}), Je = {
  active: { type: [Boolean, String], default: !1 },
  activeClass: { type: String, default: "router-link-active" },
  append: { type: [Boolean, String], default: !1 },
  disabled: { type: [Boolean, String], default: !1 },
  event: { type: [String, Array], default: "click" },
  exact: { type: [Boolean, String], default: !1 },
  exactActiveClass: { type: String, default: "router-link-exact-active" },
  href: { type: String },
  rel: { type: String, default: null },
  replace: { type: [Boolean, String], default: !1 },
  routerComponentName: { type: String, default: "router-link" },
  routerTag: { type: String, default: "a" },
  target: { type: String, default: "_self" },
  to: { type: [String, Object], default: null }
}, ws = P({
  props: Je,
  emits: ["click"],
  setup(e, { emit: t, attrs: a }) {
    const l = u(o(e, "active")), n = u(o(e, "append")), r = u(o(e, "disabled")), d = u(o(e, "exact")), c = u(o(e, "replace")), v = nl(), m = U(null), C = i(() => {
      const B = e.routerComponentName.split("-").map((h) => h.charAt(0).toUpperCase() + h.slice(1)).join("");
      return !((v == null ? void 0 : v.appContext.app.component(B)) !== void 0) || r.value || !e.to ? "a" : e.routerComponentName;
    }), p = i(() => {
      const B = "#";
      if (e.href)
        return e.href;
      if (typeof e.to == "string")
        return e.to || B;
      const S = e.to;
      if (Object.prototype.toString.call(S) === "[object Object]" && (S.path || S.query || S.hash)) {
        const h = S.path || "", $ = S.query ? `?${Object.keys(S.query).map((I) => `${I}=${S.query[I]}`).join("=")}` : "", F = !S.hash || S.hash.charAt(0) === "#" ? S.hash || "" : `#${S.hash}`;
        return `${h}${$}${F}` || B;
      }
      return B;
    }), g = i(() => ({
      to: e.to,
      href: p.value,
      target: e.target,
      rel: e.target === "_blank" && e.rel === null ? "noopener" : e.rel || null,
      tabindex: r.value ? "-1" : typeof a.tabindex > "u" ? null : a.tabindex,
      "aria-disabled": r.value ? "true" : null
    }));
    return {
      computedLinkClasses: i(() => ({
        active: l.value,
        disabled: r.value
      })),
      tag: C,
      routerAttr: g,
      link: m,
      clicked: (B) => {
        if (r.value) {
          B.preventDefault(), B.stopImmediatePropagation();
          return;
        }
        t("click", B);
      },
      activeBoolean: l,
      appendBoolean: n,
      disabledBoolean: r,
      replaceBoolean: c,
      exactBoolean: d
    };
  }
}), Te = (e, t) => {
  const a = e.__vccOpts || e;
  for (const [l, n] of t)
    a[l] = n;
  return a;
};
function _s(e, t, a, l, n, r) {
  return e.tag === "router-link" ? (f(), z(ee(e.tag), Y({ key: 0 }, e.routerAttr, { custom: "" }), {
    default: D(({ href: d, navigate: c, isActive: v, isExactActive: m }) => [
      (f(), z(ee(e.routerTag), Y({
        ref: "link",
        href: d,
        class: [
          (v || e.activeBoolean) && e.activeClass,
          (m || e.exactBoolean) && e.exactActiveClass
        ]
      }, e.$attrs, { onClick: c }), {
        default: D(() => [
          k(e.$slots, "default")
        ]),
        _: 2
      }, 1040, ["href", "class", "onClick"]))
    ]),
    _: 3
  }, 16)) : (f(), z(ee(e.tag), Y({
    key: 1,
    ref: "link",
    class: e.computedLinkClasses
  }, e.routerAttr, { onClick: e.clicked }), {
    default: D(() => [
      k(e.$slots, "default")
    ]),
    _: 3
  }, 16, ["class", "onClick"]));
}
const Ve = /* @__PURE__ */ Te(ws, [["render", _s]]), Ts = P({
  components: { BLink: Ve, BSpinner: Pt },
  props: {
    ...Je,
    active: { type: [Boolean, String], default: !1 },
    disabled: { type: [Boolean, String], default: !1 },
    href: { type: String, required: !1 },
    pill: { type: [Boolean, String], default: !1 },
    pressed: { type: [Boolean, String], default: !1 },
    rel: { type: String, default: void 0 },
    size: { type: String, default: "md" },
    squared: { type: [Boolean, String], default: !1 },
    tag: { type: String, default: "button" },
    target: { type: String, default: "_self" },
    type: { type: String, default: "button" },
    variant: { type: String, default: "secondary" },
    loading: { type: [Boolean, String], default: !1 },
    loadingMode: { type: String, default: "inline" }
  },
  emits: ["click", "update:pressed"],
  setup(e, { emit: t }) {
    const a = u(o(e, "active")), l = u(o(e, "disabled")), n = u(o(e, "pill")), r = u(o(e, "pressed")), d = u(o(e, "squared")), c = u(o(e, "loading")), v = i(() => r.value === !0), m = i(
      () => e.tag === "button" && e.href === void 0 && e.to === null
    ), C = i(() => it(e)), p = i(() => e.to !== null), g = i(
      () => e.href !== void 0 ? !1 : !m.value
    ), A = i(() => [
      [`btn-${e.variant}`],
      [`btn-${e.size}`],
      {
        active: a.value || r.value,
        "rounded-pill": n.value,
        "rounded-0": d.value,
        disabled: l.value
      }
    ]), w = i(() => ({
      "aria-disabled": g.value ? l.value : null,
      "aria-pressed": v.value ? r.value : null,
      autocomplete: v.value ? "off" : null,
      disabled: m.value ? l.value : null,
      href: e.href,
      rel: C.value ? e.rel : null,
      role: g.value || C.value ? "button" : null,
      target: C.value ? e.target : null,
      type: m.value ? e.type : null,
      to: m.value ? null : e.to,
      append: C.value ? e.append : null,
      activeClass: p.value ? e.activeClass : null,
      event: p.value ? e.event : null,
      exact: p.value ? e.exact : null,
      exactActiveClass: p.value ? e.exactActiveClass : null,
      replace: p.value ? e.replace : null,
      routerComponentName: p.value ? e.routerComponentName : null,
      routerTag: p.value ? e.routerTag : null
    })), B = i(
      () => p.value ? Ve : e.href ? "a" : e.tag
    );
    return {
      computedClasses: A,
      computedAttrs: w,
      computedTag: B,
      clicked: (h) => {
        if (l.value) {
          h.preventDefault(), h.stopPropagation();
          return;
        }
        t("click", h), v.value && t("update:pressed", !r.value);
      },
      loadingBoolean: c
    };
  }
});
function Vs(e, t, a, l, n, r) {
  const d = sl("b-spinner");
  return f(), z(ee(e.computedTag), Y({
    class: ["btn", e.computedClasses]
  }, e.computedAttrs, { onClick: e.clicked }), {
    default: D(() => [
      e.loadingBoolean ? (f(), y("div", {
        key: 0,
        class: L(["btn-loading", { "mode-fill": e.loadingMode === "fill", "mode-inline": e.loadingMode === "inline" }])
      }, [
        k(e.$slots, "loading", {}, () => [
          ce(d, {
            class: "btn-spinner",
            small: e.size !== "lg"
          }, null, 8, ["small"])
        ])
      ], 2)) : X("", !0),
      R("div", {
        class: L(["btn-content", { "btn-loading-fill": e.loadingBoolean && e.loadingMode === "fill" }])
      }, [
        k(e.$slots, "default")
      ], 2)
    ]),
    _: 3
  }, 16, ["class", "onClick"]);
}
const et = /* @__PURE__ */ Te(Ts, [["render", Vs]]), As = (e, t = U(1e3), a = {}) => {
  const l = U(!1), n = U(0), r = U(We(e)), d = U(We(t)), c = i(() => Math.ceil(r.value / d.value)), v = i(
    () => p.value || l.value ? Math.round(r.value - n.value * d.value) : 0
  ), { pause: m, resume: C, isActive: p } = El(
    () => n.value = n.value + 1,
    t,
    a
  ), g = () => {
    l.value = !1, n.value = 0, C();
  }, A = () => {
    l.value = !1, n.value = c.value;
  };
  Ze(() => {
    const S = We(e), h = r.value;
    S !== h && (r.value = S, A(), g());
  }), Ze(() => {
    const S = We(t), h = d.value;
    S !== h && (d.value = S, A(), g());
  }), Ze(() => {
    n.value > c.value && (n.value = c.value), n.value === c.value && m();
  });
  const w = () => {
    p.value !== !1 && (l.value = !0, m());
  }, B = () => {
    n.value !== c.value && (l.value = !1, C());
  };
  return {
    isActive: Ht(p),
    isPaused: Ht(l),
    restart: g,
    stop: A,
    pause: w,
    resume: B,
    value: v
  };
}, Os = ["onMouseenter"], xs = /* @__PURE__ */ P({
  __name: "BAlert",
  props: {
    noHoverPause: { default: !1 },
    dismissLabel: { default: "Close" },
    dismissible: { default: !1 },
    fade: { default: !1 },
    modelValue: { type: [Boolean, Number], default: !1 },
    variant: { default: "info" },
    closeContent: null,
    immediate: { default: !0 },
    interval: { default: 1e3 },
    showOnPause: { default: !0 }
  },
  emits: ["closed", "close-countdown", "update:modelValue"],
  setup(e, { expose: t, emit: a }) {
    const l = e, n = u(o(l, "dismissible")), r = u(o(l, "fade")), d = u(o(l, "immediate")), c = u(o(l, "showOnPause")), v = u(o(l, "noHoverPause")), m = Se(), C = i(() => !we(m.close)), p = i(() => [
      [`alert-${l.variant}`],
      {
        "alert-dismissible": n.value
      }
    ]), {
      isActive: g,
      pause: A,
      restart: w,
      resume: B,
      stop: S,
      isPaused: h,
      value: $
    } = As(
      typeof l.modelValue == "boolean" ? 0 : o(l, "modelValue"),
      o(l, "interval"),
      {
        immediate: typeof l.modelValue == "number" && d.value
      }
    ), F = i(
      () => typeof l.modelValue == "boolean" ? l.modelValue : g.value || c.value && h.value
    );
    Ze(() => a("close-countdown", $.value));
    const I = () => {
      typeof l.modelValue == "boolean" ? a("update:modelValue", !1) : (a("update:modelValue", 0), S()), a("closed");
    }, V = () => {
      v.value || A();
    };
    return aa(S), t({ pause: A, resume: B, restart: w, stop: S }), (_, O) => (f(), z(lt, {
      "no-fade": !s(r),
      "trans-props": { enterToClass: "show" }
    }, {
      default: D(() => [
        s(F) ? (f(), y("div", {
          key: 0,
          class: L(["alert", s(p)]),
          role: "alert",
          "aria-live": "polite",
          "aria-atomic": "true",
          onMouseenter: Xe(V, ["stop"]),
          onMouseleave: O[0] || (O[0] = Xe(
            (...b) => s(B) && s(B)(...b),
            ["stop"]
          ))
        }, [
          k(_.$slots, "default"),
          s(n) ? (f(), y(se, { key: 0 }, [
            s(C) || e.closeContent ? (f(), z(et, {
              key: 0,
              type: "button",
              onClick: I
            }, {
              default: D(() => [
                k(_.$slots, "close", {}, () => [
                  te(W(e.closeContent), 1)
                ])
              ]),
              _: 3
            })) : (f(), z(nt, {
              key: 1,
              "aria-label": e.dismissLabel,
              onClick: I
            }, null, 8, ["aria-label"]))
          ], 64)) : X("", !0)
        ], 42, Os)) : X("", !0)
      ]),
      _: 3
    }, 8, ["no-fade"]));
  }
}), Ps = {
  key: 0,
  class: "b-avatar-custom"
}, Is = {
  key: 1,
  class: "b-avatar-img"
}, Fs = ["src", "alt"], Kt = (e) => {
  const t = typeof e == "string" && fl(e) ? rt(e, 0) : e;
  return typeof t == "number" ? `${t}px` : t || null;
}, Es = /* @__PURE__ */ P({
  __name: "BAvatar",
  props: {
    alt: { default: "avatar" },
    ariaLabel: null,
    badge: { type: [Boolean, String], default: !1 },
    badgeLeft: { default: !1 },
    badgeOffset: null,
    badgeTop: { default: !1 },
    badgeVariant: { default: "primary" },
    button: { default: !1 },
    buttonType: { default: "button" },
    disabled: { default: !1 },
    icon: null,
    rounded: { type: [Boolean, String], default: "circle" },
    size: null,
    square: { default: !1 },
    src: null,
    text: null,
    textVariant: null,
    variant: { default: "secondary" }
  },
  emits: ["click", "img-error"],
  setup(e, { emit: t }) {
    const a = e, l = Se(), n = He(Al), r = ["sm", null, "lg"], d = 0.4, c = d * 0.7, v = u(o(a, "badgeLeft")), m = u(o(a, "badgeTop")), C = u(o(a, "button")), p = u(o(a, "disabled")), g = u(o(a, "square")), A = i(() => !we(l.default)), w = i(() => !we(l.badge)), B = i(() => !!a.badge || a.badge === "" || w.value), S = i(
      () => n != null && n.size ? n.size : Kt(a.size)
    ), h = i(
      () => n != null && n.variant ? n.variant : a.variant
    ), $ = i(
      () => n != null && n.rounded ? n.rounded : a.rounded
    ), F = i(() => ({
      type: C.value ? a.buttonType : void 0,
      "aria-label": a.ariaLabel || null,
      disabled: p.value || null
    })), I = i(() => [`bg-${a.badgeVariant}`]), V = i(() => a.badge === !0 ? "" : a.badge), _ = i(() => [[`text-${oe(a.badgeVariant)}`]]), O = i(() => ({
      [`b-avatar-${a.size}`]: !!a.size && r.indexOf(Kt(a.size)) !== -1,
      [`bg-${h.value}`]: !!h.value,
      badge: !C.value && h.value && A.value,
      rounded: $.value === "" || $.value === !0,
      ["rounded-circle"]: !g.value && $.value === "circle",
      ["rounded-0"]: g.value || $.value === "0",
      ["rounded-1"]: !g.value && $.value === "sm",
      ["rounded-3"]: !g.value && $.value === "lg",
      ["rounded-top"]: !g.value && $.value === "top",
      ["rounded-bottom"]: !g.value && $.value === "bottom",
      ["rounded-start"]: !g.value && $.value === "left",
      ["rounded-end"]: !g.value && $.value === "right",
      btn: C.value,
      [`btn-${h.value}`]: C.value ? !!h.value : !1
    })), b = i(() => [
      [`text-${a.textVariant || oe(h.value)}`]
    ]), x = i(() => {
      const ae = a.badgeOffset || "0px";
      return {
        fontSize: (r.indexOf(S.value || null) === -1 ? `calc(${S.value} * ${c})` : "") || "",
        top: m.value ? ae : "",
        bottom: m.value ? "" : ae,
        left: v.value ? ae : "",
        right: v.value ? "" : ae
      };
    }), H = i(() => {
      const ae = r.indexOf(S.value || null) === -1 ? `calc(${S.value} * ${d})` : null;
      return ae ? { fontSize: ae } : {};
    }), j = i(() => {
      var ye;
      const ae = ((ye = n == null ? void 0 : n.overlapScale) == null ? void 0 : ye.value) || 0, pe = S.value && ae ? `calc(${S.value} * -${ae})` : null;
      return pe ? { marginLeft: pe, marginRight: pe } : {};
    }), q = i(() => C.value ? "button" : "span"), K = i(() => ({
      ...j.value,
      width: S.value,
      height: S.value
    })), oe = (ae) => ae === "light" || ae === "warning" ? "dark" : "light", Z = (ae) => {
      !p.value && C.value && t("click", ae);
    }, ge = (ae) => t("img-error", ae);
    return (ae, pe) => (f(), z(ee(s(q)), Y({
      class: ["b-avatar", s(O)],
      style: s(K)
    }, s(F), { onClick: Z }), {
      default: D(() => [
        s(A) ? (f(), y("span", Ps, [
          k(ae.$slots, "default")
        ])) : e.src ? (f(), y("span", Is, [
          R("img", {
            src: e.src,
            alt: e.alt,
            onError: ge
          }, null, 40, Fs)
        ])) : e.text ? (f(), y("span", {
          key: 2,
          class: L(["b-avatar-text", s(b)]),
          style: Fe(s(H))
        }, W(e.text), 7)) : X("", !0),
        s(B) ? (f(), y("span", {
          key: 3,
          class: L(["b-avatar-badge", s(I)]),
          style: Fe(s(x))
        }, [
          s(w) ? k(ae.$slots, "badge", { key: 0 }) : (f(), y("span", {
            key: 1,
            class: L(s(_))
          }, W(s(V)), 3))
        ], 6)) : X("", !0)
      ]),
      _: 3
    }, 16, ["class", "style"]));
  }
}), Ls = /* @__PURE__ */ P({
  __name: "BAvatarGroup",
  props: {
    overlap: { default: 0.3 },
    rounded: { type: [Boolean, String], default: !1 },
    size: null,
    square: { default: !1 },
    tag: { default: "div" },
    variant: null
  },
  setup(e) {
    const t = e, a = u(o(t, "square")), l = i(() => Kt(t.size)), n = i(
      () => Math.min(Math.max(d(t.overlap), 0), 1) / 2
    ), r = i(() => {
      const c = l.value ? `calc(${l.value} * ${n.value})` : null;
      return c ? { paddingLeft: c, paddingRight: c } : {};
    }), d = (c) => typeof c == "string" && fl(c) ? rt(c, 0) : c || 0;
    return at(Al, {
      overlapScale: n,
      size: t.size,
      square: a.value,
      rounded: t.rounded,
      variant: t.variant
    }), (c, v) => (f(), z(ee(e.tag), {
      class: "b-avatar-group",
      role: "group"
    }, {
      default: D(() => [
        R("div", {
          class: "b-avatar-group-inner",
          style: Fe(s(r))
        }, [
          k(c.$slots, "default")
        ], 4)
      ]),
      _: 3
    }));
  }
}), Ea = Ot(Je, ["event", "routerTag"]), zs = P({
  components: { BLink: Ve },
  props: {
    pill: { type: [Boolean, String], default: !1 },
    tag: { type: String, default: "span" },
    variant: { type: String, default: "secondary" },
    textIndicator: { type: [Boolean, String], default: !1 },
    dotIndicator: { type: [Boolean, String], default: !1 },
    ...Ea
  },
  setup(e) {
    const t = u(o(e, "pill")), a = u(o(e, "textIndicator")), l = u(o(e, "dotIndicator")), n = u(o(e, "active")), r = u(o(e, "disabled")), d = i(() => it(e)), c = i(
      () => d.value ? Ve : e.tag
    ), v = i(() => [
      [`bg-${e.variant}`],
      {
        active: n.value,
        disabled: r.value,
        "text-dark": ["warning", "info", "light"].includes(e.variant),
        "rounded-pill": t.value,
        "position-absolute top-0 start-100 translate-middle": a.value || l.value,
        "p-2 border border-light rounded-circle": l.value,
        "text-decoration-none": d.value
      }
    ]), m = i(
      () => d.value ? ia(e, Ea) : {}
    );
    return {
      computedClasses: v,
      computedLinkProps: m,
      computedTag: c
    };
  }
});
function Ns(e, t, a, l, n, r) {
  return f(), z(ee(e.computedTag), Y({
    class: ["badge", e.computedClasses]
  }, e.computedLinkProps), {
    default: D(() => [
      k(e.$slots, "default")
    ]),
    _: 3
  }, 16, ["class"]);
}
const Ds = /* @__PURE__ */ Te(zs, [["render", Ns]]), La = Ot(Je, ["event", "routerTag"]), Hs = P({
  components: { BLink: Ve },
  props: {
    ...La,
    active: { type: [Boolean, String], default: !1 },
    ariaCurrent: { type: String, default: "location" },
    disabled: { type: [Boolean, String], default: !1 },
    text: { type: String, required: !1 }
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = u(o(e, "active")), l = u(o(e, "disabled")), n = i(() => ({
      active: a.value
    })), r = i(
      () => a.value ? "span" : Ve
    ), d = i(
      () => a.value ? e.ariaCurrent : void 0
    );
    return {
      computedLinkProps: i(
        () => r.value !== "span" ? ia(e, La) : {}
      ),
      computedClasses: n,
      computedTag: r,
      computedAriaCurrent: d,
      clicked: (m) => {
        if (l.value || a.value) {
          m.preventDefault(), m.stopImmediatePropagation();
          return;
        }
        l.value || t("click", m);
      }
    };
  }
});
function Ms(e, t, a, l, n, r) {
  return f(), y("li", {
    class: L(["breadcrumb-item", e.computedClasses])
  }, [
    (f(), z(ee(e.computedTag), Y({ "aria-current": e.computedAriaCurrent }, e.computedLinkProps, { onClick: e.clicked }), {
      default: D(() => [
        k(e.$slots, "default", {}, () => [
          te(W(e.text), 1)
        ])
      ]),
      _: 3
    }, 16, ["aria-current", "onClick"]))
  ], 2);
}
const Yl = /* @__PURE__ */ Te(Hs, [["render", Ms]]), Rs = { "aria-label": "breadcrumb" }, js = { class: "breadcrumb" }, qs = /* @__PURE__ */ P({
  __name: "BBreadcrumb",
  props: {
    items: null
  },
  setup(e) {
    const t = e, a = Hl(), l = i(() => {
      const n = t.items || (a == null ? void 0 : a.items) || [];
      let r = !1;
      return n.map((c, v) => (typeof c == "string" && (c = { text: c }, v < n.length - 1 && (c.href = "#")), c.active && (r = !0), !c.active && !r && (c.active = v + 1 === n.length), c));
    });
    return (n, r) => (f(), y("nav", Rs, [
      R("ol", js, [
        k(n.$slots, "prepend"),
        (f(!0), y(se, null, fe(s(l), (d, c) => (f(), z(Yl, Y({ key: c }, d), {
          default: D(() => [
            te(W(d.text), 1)
          ]),
          _: 2
        }, 1040))), 128)),
        k(n.$slots, "default"),
        k(n.$slots, "append")
      ])
    ]));
  }
}), Gs = /* @__PURE__ */ P({
  __name: "BButtonGroup",
  props: {
    ariaLabel: { default: "Group" },
    size: null,
    tag: { default: "div" },
    vertical: { default: !1 }
  },
  setup(e) {
    const t = e, a = u(o(t, "vertical")), l = i(() => ({
      "btn-group": !a.value,
      [`btn-group-${t.size}`]: t.size !== void 0,
      "btn-group-vertical": a.value
    }));
    return (n, r) => (f(), z(ee(e.tag), {
      class: L(s(l)),
      role: "group",
      "aria-label": e.ariaLabel
    }, {
      default: D(() => [
        k(n.$slots, "default")
      ]),
      _: 3
    }, 8, ["class", "aria-label"]));
  }
}), Us = ["role", "aria-label"], Ws = /* @__PURE__ */ P({
  __name: "BButtonToolbar",
  props: {
    ariaLabel: { default: "Group" },
    justify: { default: !1 },
    role: { default: "toolbar" }
  },
  setup(e) {
    const a = u(o(e, "justify")), l = i(() => ({
      "justify-content-between": a.value
    }));
    return (n, r) => (f(), y("div", {
      class: L([s(l), "btn-toolbar"]),
      role: e.role,
      "aria-label": e.ariaLabel
    }, [
      k(n.$slots, "default")
    ], 10, Us));
  }
}), ca = /* @__PURE__ */ P({
  __name: "BImg",
  props: {
    alt: null,
    blank: { default: !1 },
    blankColor: { default: "transparent" },
    block: { default: !1 },
    center: { default: !1 },
    fluid: { default: !1 },
    lazy: { default: !1 },
    fluidGrow: { default: !1 },
    height: null,
    left: { default: !1 },
    start: { default: !1 },
    right: { default: !1 },
    end: { default: !1 },
    rounded: { type: [Boolean, String], default: !1 },
    sizes: null,
    src: null,
    srcset: null,
    thumbnail: { default: !1 },
    width: null
  },
  emits: ["load"],
  setup(e, { emit: t }) {
    const a = e, l = '<svg width="%{w}" height="%{h}" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 %{w} %{h}" preserveAspectRatio="none"><rect width="100%" height="100%" style="fill:%{f};"></rect></svg>', n = u(o(a, "lazy")), r = u(o(a, "blank")), d = u(o(a, "block")), c = u(o(a, "center")), v = u(o(a, "fluid")), m = u(o(a, "fluidGrow")), C = u(o(a, "left")), p = u(o(a, "start")), g = u(o(a, "right")), A = u(o(a, "end")), w = u(o(a, "thumbnail")), B = i(
      () => typeof a.srcset == "string" ? a.srcset.split(",").filter((O) => O).join(",") : Array.isArray(a.srcset) ? a.srcset.filter((O) => O).join(",") : void 0
    ), S = i(
      () => typeof a.sizes == "string" ? a.sizes.split(",").filter((O) => O).join(",") : Array.isArray(a.sizes) ? a.sizes.filter((O) => O).join(",") : void 0
    ), h = i(() => {
      const O = (H) => H === void 0 ? void 0 : typeof H == "number" ? H : Number.parseInt(H, 10) || void 0, b = O(a.width), x = O(a.height);
      if (r.value) {
        if (b !== void 0 && x === void 0)
          return { height: b, width: b };
        if (b === void 0 && x !== void 0)
          return { height: x, width: x };
        if (b === void 0 && x === void 0)
          return { height: 1, width: 1 };
      }
      return {
        width: b,
        height: x
      };
    }), $ = i(
      () => _(h.value.width, h.value.height, a.blankColor)
    ), F = i(() => ({
      src: r.value ? $.value : a.src,
      alt: a.alt,
      width: h.value.width || void 0,
      height: h.value.height || void 0,
      srcset: r.value ? void 0 : B.value,
      sizes: r.value ? void 0 : S.value,
      loading: n.value ? "lazy" : "eager"
    })), I = i(
      () => C.value || p.value ? "float-start" : g.value || A.value ? "float-end" : c.value ? "mx-auto" : void 0
    ), V = i(() => ({
      "img-thumbnail": w.value,
      "img-fluid": v.value || m.value,
      "w-100": m.value,
      rounded: a.rounded === "" || a.rounded === !0,
      [`rounded-${a.rounded}`]: typeof a.rounded == "string" && a.rounded !== "",
      [`${I.value}`]: I.value !== void 0,
      "d-block": d.value || c.value
    })), _ = (O, b, x) => `data:image/svg+xml;charset=UTF-8,${encodeURIComponent(
      l.replace("%{w}", String(O)).replace("%{h}", String(b)).replace("%{f}", x)
    )}`;
    return (O, b) => (f(), y("img", Y({ class: s(V) }, s(F), {
      onLoad: b[0] || (b[0] = (x) => t("load", x))
    }), null, 16));
  }
}), _t = /* @__PURE__ */ P({
  __name: "BCardImg",
  props: {
    alt: null,
    blank: { default: !1 },
    blankColor: null,
    bottom: { default: !1 },
    lazy: { default: !1 },
    height: null,
    left: { default: !1 },
    start: { default: !1 },
    right: { default: !1 },
    end: { default: !1 },
    sizes: null,
    src: null,
    srcset: null,
    top: { default: !1 },
    width: null
  },
  emits: ["load"],
  setup(e, { emit: t }) {
    const a = e, l = u(o(a, "bottom")), n = u(o(a, "end")), r = u(o(a, "left")), d = u(o(a, "right")), c = u(o(a, "start")), v = u(o(a, "top")), m = i(
      () => v.value ? "card-img-top" : d.value || n.value ? "card-img-right" : l.value ? "card-img-bottom" : r.value || c.value ? "card-img-left" : "card-img"
    ), C = i(() => ({
      alt: a.alt,
      height: a.height,
      src: a.src,
      lazy: a.lazy,
      width: a.width,
      blank: a.blank,
      blankColor: a.blankColor,
      sizes: a.sizes,
      srcset: a.srcset
    }));
    return (p, g) => (f(), z(ca, Y({ class: s(m) }, s(C), {
      onLoad: g[0] || (g[0] = (A) => t("load", A))
    }), null, 16, ["class"]));
  }
}), Ks = ["innerHTML"], Zl = /* @__PURE__ */ P({
  __name: "BCardHeadFoot",
  props: {
    text: null,
    bgVariant: null,
    borderVariant: null,
    html: null,
    tag: { default: "div" },
    textVariant: null
  },
  setup(e) {
    const t = e, a = i(() => ({
      [`text-${t.textVariant}`]: t.textVariant !== void 0,
      [`bg-${t.bgVariant}`]: t.bgVariant !== void 0,
      [`border-${t.borderVariant}`]: t.borderVariant !== void 0
    }));
    return (l, n) => (f(), z(ee(e.tag), {
      class: L(s(a))
    }, {
      default: D(() => [
        e.html ? (f(), y("div", {
          key: 0,
          innerHTML: e.html
        }, null, 8, Ks)) : k(l.$slots, "default", { key: 1 }, () => [
          te(W(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), en = /* @__PURE__ */ P({
  __name: "BCardHeader",
  props: {
    text: null,
    bgVariant: null,
    borderVariant: null,
    html: null,
    tag: { default: "div" },
    textVariant: null
  },
  setup(e) {
    const t = e;
    return (a, l) => (f(), z(Zl, Y({ class: "card-header" }, t), {
      default: D(() => [
        k(a.$slots, "default")
      ]),
      _: 3
    }, 16));
  }
}), tn = /* @__PURE__ */ P({
  __name: "BCardTitle",
  props: {
    text: null,
    tag: { default: "h4" }
  },
  setup(e) {
    return (t, a) => (f(), z(ee(e.tag), { class: "card-title" }, {
      default: D(() => [
        k(t.$slots, "default", {}, () => [
          te(W(e.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), an = /* @__PURE__ */ P({
  __name: "BCardSubtitle",
  props: {
    text: null,
    tag: { default: "h6" },
    textVariant: { default: "muted" }
  },
  setup(e) {
    const t = e, a = i(() => [`text-${t.textVariant}`]);
    return (l, n) => (f(), z(ee(e.tag), {
      class: L(["card-subtitle mb-2", s(a)])
    }, {
      default: D(() => [
        k(l.$slots, "default", {}, () => [
          te(W(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), ln = /* @__PURE__ */ P({
  __name: "BCardBody",
  props: {
    bodyBgVariant: null,
    bodyTag: { default: "div" },
    bodyTextVariant: null,
    overlay: { default: !1 },
    subtitle: null,
    subtitleTag: { default: "h4" },
    subtitleTextVariant: null,
    title: null,
    titleTag: { default: "h4" },
    text: null
  },
  setup(e) {
    const t = e, a = Se(), l = u(o(t, "overlay")), n = i(() => !we(a.title)), r = i(() => !we(a.subtitle)), d = i(() => ({
      "card-img-overlay": l.value,
      [`text-${t.bodyTextVariant}`]: t.bodyTextVariant !== void 0,
      [`bg-${t.bodyBgVariant}`]: t.bodyBgVariant !== void 0
    }));
    return (c, v) => (f(), z(ee(e.bodyTag), {
      class: L(["card-body", s(d)])
    }, {
      default: D(() => [
        !!e.title || s(n) ? (f(), z(tn, {
          key: 0,
          tag: e.titleTag
        }, {
          default: D(() => [
            k(c.$slots, "title", {}, () => [
              te(W(e.title), 1)
            ])
          ]),
          _: 3
        }, 8, ["tag"])) : X("", !0),
        !!e.subtitle || s(r) ? (f(), z(an, {
          key: 1,
          tag: e.subtitleTag,
          "text-variant": e.subtitleTextVariant
        }, {
          default: D(() => [
            k(c.$slots, "subtitle", {}, () => [
              te(W(e.subtitle), 1)
            ])
          ]),
          _: 3
        }, 8, ["tag", "text-variant"])) : X("", !0),
        k(c.$slots, "default", {}, () => [
          te(W(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), nn = /* @__PURE__ */ P({
  __name: "BCardFooter",
  props: {
    text: null,
    bgVariant: null,
    borderVariant: null,
    html: null,
    tag: { default: "div" },
    textVariant: null
  },
  setup(e) {
    const t = e;
    return (a, l) => (f(), z(Zl, Y({ class: "card-footer" }, t), {
      default: D(() => [
        k(a.$slots, "default", {}, () => [
          te(W(e.text), 1)
        ])
      ]),
      _: 3
    }, 16));
  }
}), on = /* @__PURE__ */ P({
  __name: "BCard",
  props: {
    align: null,
    bgVariant: null,
    bodyBgVariant: null,
    bodyClass: null,
    bodyTag: { default: "div" },
    bodyTextVariant: null,
    borderVariant: null,
    footer: null,
    footerBgVariant: null,
    footerBorderVariant: null,
    footerClass: null,
    footerHtml: { default: "" },
    footerTag: { default: "div" },
    footerTextVariant: null,
    header: null,
    headerBgVariant: null,
    headerBorderVariant: null,
    headerClass: null,
    headerHtml: { default: "" },
    headerTag: { default: "div" },
    headerTextVariant: null,
    imgAlt: null,
    imgBottom: { default: !1 },
    imgEnd: { default: !1 },
    imgHeight: null,
    imgLeft: { default: !1 },
    imgRight: { default: !1 },
    imgSrc: null,
    imgStart: { default: !1 },
    imgTop: { default: !1 },
    imgWidth: null,
    noBody: { default: !1 },
    overlay: { default: !1 },
    subtitle: null,
    subtitleTag: { default: "h6" },
    subtitleTextVariant: { default: "muted" },
    tag: { default: "div" },
    textVariant: null,
    title: null,
    titleTag: { default: "h4" },
    bodyText: { default: "" }
  },
  setup(e) {
    const t = e, a = Se(), l = u(o(t, "imgBottom")), n = u(o(t, "imgEnd")), r = u(o(t, "imgLeft")), d = u(o(t, "imgRight")), c = u(o(t, "imgStart")), v = u(o(t, "noBody")), m = i(() => !we(a.header)), C = i(() => !we(a.footer)), p = i(() => ({
      [`text-${t.align}`]: t.align !== void 0,
      [`text-${t.textVariant}`]: t.textVariant !== void 0,
      [`bg-${t.bgVariant}`]: t.bgVariant !== void 0,
      [`border-${t.borderVariant}`]: t.borderVariant !== void 0,
      "flex-row": r.value || c.value,
      "flex-row-reverse": n.value || d.value
    })), g = i(() => ({
      bgVariant: t.headerBgVariant,
      borderVariant: t.headerBorderVariant,
      html: t.headerHtml,
      tag: t.headerTag,
      textVariant: t.headerTextVariant
    })), A = i(() => ({
      overlay: t.overlay,
      bodyBgVariant: t.bodyBgVariant,
      bodyTag: t.bodyTag,
      bodyTextVariant: t.bodyTextVariant,
      subtitle: t.subtitle,
      subtitleTag: t.subtitleTag,
      subtitleTextVariant: t.subtitleTextVariant,
      title: t.title,
      titleTag: t.titleTag
    })), w = i(() => ({
      bgVariant: t.footerBgVariant,
      borderVariant: t.footerBorderVariant,
      html: t.footerHtml,
      tag: t.footerTag,
      textVariant: t.footerTextVariant
    })), B = i(() => ({
      src: t.imgSrc,
      alt: t.imgAlt,
      height: t.imgHeight,
      width: t.imgWidth,
      bottom: t.imgBottom,
      end: t.imgEnd,
      left: t.imgLeft,
      right: t.imgRight,
      start: t.imgStart,
      top: t.imgTop
    }));
    return (S, h) => (f(), z(ee(e.tag), {
      class: L(["card", s(p)])
    }, {
      default: D(() => [
        s(l) ? X("", !0) : k(S.$slots, "img", { key: 0 }, () => [
          e.imgSrc ? (f(), z(_t, Be(Y({ key: 0 }, s(B))), null, 16)) : X("", !0)
        ]),
        e.header || s(m) || e.headerHtml ? (f(), z(en, Y({ key: 1 }, s(g), { class: e.headerClass }), {
          default: D(() => [
            k(S.$slots, "header", {}, () => [
              te(W(e.header), 1)
            ])
          ]),
          _: 3
        }, 16, ["class"])) : X("", !0),
        s(v) ? k(S.$slots, "default", { key: 3 }, () => [
          te(W(e.bodyText), 1)
        ]) : (f(), z(ln, Y({ key: 2 }, s(A), { class: e.bodyClass }), {
          default: D(() => [
            k(S.$slots, "default", {}, () => [
              te(W(e.bodyText), 1)
            ])
          ]),
          _: 3
        }, 16, ["class"])),
        e.footer || s(C) || e.footerHtml ? (f(), z(nn, Y({ key: 4 }, s(w), { class: e.footerClass }), {
          default: D(() => [
            k(S.$slots, "footer", {}, () => [
              te(W(e.footer), 1)
            ])
          ]),
          _: 3
        }, 16, ["class"])) : X("", !0),
        s(l) ? k(S.$slots, "img", { key: 5 }, () => [
          e.imgSrc ? (f(), z(_t, Be(Y({ key: 0 }, s(B))), null, 16)) : X("", !0)
        ]) : X("", !0)
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Xs = /* @__PURE__ */ P({
  __name: "BCardGroup",
  props: {
    columns: { default: !1 },
    deck: { default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = u(o(t, "columns")), l = u(o(t, "deck")), n = i(
      () => l.value ? "card-deck" : a.value ? "card-columns" : "card-group"
    ), r = i(() => [n.value]);
    return (d, c) => (f(), z(ee(e.tag), {
      class: L(s(r))
    }, {
      default: D(() => [
        k(d.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Js = /* @__PURE__ */ P({
  __name: "BCardText",
  props: {
    text: null,
    tag: { default: "p" }
  },
  setup(e) {
    return (t, a) => (f(), z(ee(e.tag), { class: "card-text" }, {
      default: D(() => [
        k(t.$slots, "default", {}, () => [
          te(W(e.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), Qs = ["id", "onMouseenter", "onMouseleave"], Ys = {
  key: 0,
  class: "carousel-indicators"
}, Zs = ["aria-current", "aria-label", "onClick"], er = { class: "carousel-inner" }, tr = /* @__PURE__ */ R("span", {
  class: "carousel-control-prev-icon",
  "aria-hidden": "true"
}, null, -1), ar = { class: "visually-hidden" }, lr = /* @__PURE__ */ R("span", {
  class: "carousel-control-next-icon",
  "aria-hidden": "true"
}, null, -1), nr = { class: "visually-hidden" }, or = /* @__PURE__ */ P({
  __name: "BCarousel",
  props: {
    ride: { type: [Boolean, String], default: !1 },
    noHoverPause: { default: !1 },
    rideReverse: { default: !1 },
    fade: { default: !1 },
    id: null,
    imgHeight: null,
    imgWidth: null,
    background: null,
    modelValue: { default: 0 },
    controls: { default: !1 },
    indicators: { default: !1 },
    interval: { default: 5e3 },
    noTouch: { default: !1 },
    noWrap: { default: !1 },
    controlsPrevText: { default: "Previous" },
    controlsNextText: { default: "Next" },
    indicatorsButtonLabel: { default: "Slide" },
    keyboard: { default: !0 }
  },
  emits: ["slid", "slide", "update:modelValue"],
  setup(e, { expose: t, emit: a }) {
    const l = e, n = Se(), r = $e(o(l, "id"), "carousel"), d = u(o(l, "keyboard")), c = u(o(l, "rideReverse")), v = u(o(l, "noHoverPause")), m = u(o(l, "fade")), C = u(o(l, "controls")), p = u(o(l, "indicators")), g = u(o(l, "noTouch")), A = u(o(l, "noWrap"));
    let w = null, B = null;
    const S = U(!1), h = U(!1), $ = U(!0), F = U(null), I = U(null), V = i(
      () => Dn(l.ride) ? dl(l.ride) : l.ride
    ), { pause: _, resume: O } = El(
      () => {
        c.value ? K() : oe();
      },
      o(l, "interval"),
      { immediate: V.value === "carousel" }
    ), b = i(
      () => V.value === !0 && h.value === !0 || V.value === "carousel"
    ), x = i(() => Gt(n.default, "BCarouselSlide")), H = i(() => [
      "carousel",
      "slide",
      "pointer-event",
      { "carousel-fade": m.value }
    ]), j = (E, N) => {
      var J, Q;
      return new cl(E, {
        componentId: r.value,
        cancelable: !1,
        target: I.value,
        direction: $.value ? "right" : "left",
        from: N,
        to: l.modelValue,
        relatedTarget: (Q = (J = F.value) == null ? void 0 : J.children[l.modelValue]) != null ? Q : null
      });
    }, q = (E) => {
      if (S.value !== !0) {
        if (V.value === !0 && (h.value = !0), b.value === !0 && O(), $.value = !(E < l.modelValue), E >= x.value.length) {
          if (A.value)
            return;
          a("update:modelValue", 0);
          return;
        }
        if (E < 0) {
          if (A.value)
            return;
          a("update:modelValue", x.value.length - 1);
          return;
        }
        a("update:modelValue", E);
      }
    }, K = () => q(l.modelValue - 1), oe = () => q(l.modelValue + 1), Z = (E) => {
      d.value !== !1 && E();
    }, ge = () => {
      v.value || _();
    }, ae = () => {
      !b.value || O();
    }, pe = (E) => {
      g.value || (w = E.touches[0].clientX, B = E.touches[0].clientY, _());
    }, ye = (E) => {
      if (!w || !B)
        return;
      const N = E.touches[0].clientX, J = E.touches[0].clientY, Q = w - N, be = B - J;
      Math.abs(Q) > Math.abs(be) && (Q > 0 ? oe() : K()), w = null, B = null, b.value !== !1 && O();
    }, he = (E) => {
      a("slide", j("slide", E)), S.value = !0;
    }, re = (E) => {
      a("slid", j("slid", E)), S.value = !1;
    };
    return ue(
      () => l.ride,
      () => h.value = !1
    ), t({ pause: _, resume: O, prev: K, next: oe }), at(Cl, {
      background: l.background,
      width: l.imgWidth,
      height: l.imgHeight
    }), (E, N) => (f(), y("div", {
      id: s(r),
      ref_key: "target",
      ref: I,
      class: L(s(H)),
      onKeydown: [
        N[0] || (N[0] = yt((J) => Z(K), ["left"])),
        N[1] || (N[1] = yt((J) => Z(oe), ["right"]))
      ],
      onMouseenter: Xe(ge, ["stop"]),
      onMouseleave: Xe(ae, ["stop"]),
      onTouchstartPassive: pe,
      onTouchendPassive: ye
    }, [
      s(p) ? (f(), y("div", Ys, [
        (f(!0), y(se, null, fe(s(x).length, (J, Q) => (f(), y("button", {
          key: Q,
          type: "button",
          "data-bs-target": "",
          class: L(Q === e.modelValue ? "active" : ""),
          "aria-current": Q === e.modelValue ? "true" : void 0,
          "aria-label": `${e.indicatorsButtonLabel} ${Q}`,
          onClick: (be) => q(Q)
        }, null, 10, Zs))), 128))
      ])) : X("", !0),
      R("div", {
        ref_key: "relatedTarget",
        ref: F,
        class: "carousel-inner"
      }, [
        (f(!0), y(se, null, fe(s(x), (J, Q) => (f(), z(ol, {
          key: Q,
          "enter-from-class": `carousel-item-next carousel-item-${$.value ? "end" : "start"}`,
          "leave-active-class": "active",
          "leave-to-class": `carousel-item-prev carousel-item-${$.value ? "start" : "end"}`,
          onBeforeLeave: he,
          onAfterLeave: re
        }, {
          default: D(() => [
            Ge((f(), z(ee(J), {
              class: L({ active: Q === e.modelValue })
            }, null, 8, ["class"])), [
              [na, Q === e.modelValue]
            ])
          ]),
          _: 2
        }, 1032, ["enter-from-class", "leave-to-class"]))), 128))
      ], 512),
      R("div", er, [
        k(E.$slots, "default")
      ]),
      s(C) ? (f(), y(se, { key: 1 }, [
        R("button", {
          class: "carousel-control-prev",
          type: "button",
          onClick: K
        }, [
          tr,
          R("span", ar, W(e.controlsPrevText), 1)
        ]),
        R("button", {
          class: "carousel-control-next",
          type: "button",
          onClick: oe
        }, [
          lr,
          R("span", nr, W(e.controlsNextText), 1)
        ])
      ], 64)) : X("", !0)
    ], 42, Qs));
  }
}), sr = ["innerHTML"], rr = { key: 1 }, ir = ["innerHTML"], ur = { key: 1 }, dr = /* @__PURE__ */ P({
  __name: "BCarouselSlide",
  props: {
    imgSrc: null,
    imgHeight: null,
    imgWidth: null,
    interval: null,
    background: null,
    caption: null,
    captionHtml: null,
    captionTag: { default: "h3" },
    contentTag: { default: "div" },
    contentVisibleUp: null,
    id: null,
    imgAlt: null,
    imgBlank: { default: !1 },
    imgBlankColor: { default: "transparent" },
    text: null,
    textHtml: null,
    textTag: { default: "p" }
  },
  setup(e) {
    const t = e, a = Se(), l = He(Cl), n = i(() => t.text || t.textHtml || !we(a.text)), r = i(() => t.caption || t.captionHtml || !we(a.caption)), d = i(() => n.value || r.value || !we(a.default)), c = i(() => ({
      background: `${t.background || (l == null ? void 0 : l.background) || "rgb(171, 171, 171)"} none repeat scroll 0% 0%`
    })), v = i(() => ({
      "d-none": t.contentVisibleUp !== void 0,
      [`d-${t.contentVisibleUp}-block`]: t.contentVisibleUp !== void 0
    }));
    return (m, C) => (f(), y("div", {
      class: "carousel-item",
      style: Fe(s(c))
    }, [
      k(m.$slots, "img", {}, () => {
        var p, g;
        return [
          ce(ca, {
            class: "d-block w-100",
            alt: e.imgAlt,
            src: e.imgSrc,
            width: e.imgWidth || ((p = s(l)) == null ? void 0 : p.width),
            height: e.imgHeight || ((g = s(l)) == null ? void 0 : g.height),
            blank: e.imgBlank,
            "blank-color": e.imgBlankColor
          }, null, 8, ["alt", "src", "width", "height", "blank", "blank-color"])
        ];
      }),
      s(d) ? (f(), z(ee(e.contentTag), {
        key: 0,
        class: L(["carousel-caption", s(v)])
      }, {
        default: D(() => [
          s(r) ? (f(), z(ee(e.captionTag), { key: 0 }, {
            default: D(() => [
              k(m.$slots, "caption", {}, () => [
                e.captionHtml ? (f(), y("span", {
                  key: 0,
                  innerHTML: e.captionHtml
                }, null, 8, sr)) : (f(), y("span", rr, W(e.caption), 1))
              ])
            ]),
            _: 3
          })) : X("", !0),
          s(n) ? (f(), z(ee(e.textTag), { key: 1 }, {
            default: D(() => [
              k(m.$slots, "text", {}, () => [
                e.textHtml ? (f(), y("span", {
                  key: 0,
                  innerHTML: e.textHtml
                }, null, 8, ir)) : (f(), y("span", ur, W(e.text), 1))
              ])
            ]),
            _: 3
          })) : X("", !0),
          k(m.$slots, "default")
        ]),
        _: 3
      }, 8, ["class"])) : X("", !0)
    ], 4));
  }
}), za = At("", [], { type: [Boolean, String, Number], default: !1 }), Na = At("offset", [""], { type: [String, Number], default: null }), Da = At("order", [""], { type: [String, Number], default: null }), cr = P({
  name: "BCol",
  props: {
    col: { type: [Boolean, String], default: !1 },
    cols: { type: [String, Number], default: null },
    ...za,
    offset: { type: [String, Number], default: null },
    ...Na,
    order: { type: [String, Number], default: null },
    ...Da,
    alignSelf: { type: String, default: null },
    tag: { type: String, default: "div" }
  },
  setup(e) {
    const t = [
      { content: za, propPrefix: "cols", classPrefix: "col" },
      { content: Na, propPrefix: "offset" },
      { content: Da, propPrefix: "order" }
    ], a = u(o(e, "col")), l = i(
      () => t.flatMap((r) => Sl(e, r.content, r.propPrefix, r.classPrefix))
    );
    return {
      computedClasses: i(() => [
        l.value,
        {
          col: a.value || !l.value.some((r) => /^col-/.test(r)) && !e.cols,
          [`col-${e.cols}`]: !!e.cols,
          [`offset-${e.offset}`]: !!e.offset,
          [`order-${e.order}`]: !!e.order,
          [`align-self-${e.alignSelf}`]: !!e.alignSelf
        }
      ])
    };
  }
});
function fr(e, t, a, l, n, r) {
  return f(), z(ee(e.tag), {
    class: L(e.computedClasses)
  }, {
    default: D(() => [
      k(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["class"]);
}
const st = /* @__PURE__ */ Te(cr, [["render", fr]]), Qe = {
  autoHide: !0,
  delay: 5e3,
  noCloseButton: !1,
  pos: "top-right",
  value: !0
};
class Ha {
  constructor(t) {
    me(this, "vm");
    me(this, "containerPositions");
    Pn(t) ? this.vm = t : this.vm = Ne(t), this.containerPositions = i(() => {
      const a = /* @__PURE__ */ new Set([]);
      return this.vm.toasts.map((l) => {
        l.options.pos && a.add(l.options.pos);
      }), a;
    });
  }
  toasts(t) {
    return t ? i(
      () => this.vm.toasts.filter((a) => {
        if (a.options.pos === t && a.options.value)
          return a;
      })
    ) : i(() => this.vm.toasts);
  }
  remove(...t) {
    this.vm.toasts = this.vm.toasts.filter((a) => {
      if (a.options.id && !t.includes(a.options.id))
        return a;
    });
  }
  isRoot() {
    var t;
    return (t = this.vm.root) != null ? t : !1;
  }
  show(t, a = Qe) {
    const l = { id: Re(), ...Qe, ...a }, n = {
      options: Ne(l),
      content: t
    };
    return this.vm.toasts.push(n), n;
  }
  info(t, a = Qe) {
    return this.show(t, { variant: "info", ...a });
  }
  danger(t, a = Qe) {
    return this.show(t, { variant: "danger", ...a });
  }
  warning(t, a = Qe) {
    return this.show(t, { variant: "warning", ...a });
  }
  success(t, a = Qe) {
    return this.show(t, { variant: "success", ...a });
  }
  hide() {
  }
}
class vr {
  constructor() {
    me(this, "vms");
    me(this, "rootInstance");
    me(this, "useToast", rn);
    this.vms = {};
  }
  getOrCreateViewModel(t) {
    if (!t) {
      if (this.rootInstance)
        return this.vms[this.rootInstance];
      const a = { root: !0, toasts: [], container: void 0, id: Symbol("toast") };
      return this.rootInstance = a.id, this.vms[a.id] = a, a;
    }
    if (t.root) {
      if (this.rootInstance)
        return this.vms[this.rootInstance];
      this.rootInstance = t.id;
    }
    return this.vms[t.id] = t, t;
  }
  getVM(t) {
    if (!t && this.rootInstance)
      return this.vms[this.rootInstance];
    if (t)
      return this.vms[t];
  }
}
const Xt = Symbol(), sn = Symbol(), mr = {
  container: void 0,
  toasts: [],
  root: !1
};
function pr() {
  return He(sn);
}
function rn(e, t = Xt) {
  const a = He(pr());
  if (!e)
    return new Ha(a.getOrCreateViewModel());
  const l = { id: Symbol("toastInstance") }, n = { ...mr, ...l, ...e }, r = a.getOrCreateViewModel(n);
  return new Ha(r);
}
const br = {
  install: (e, t = {}) => {
    var a, l, n, r;
    e.provide(sn, (l = (a = t == null ? void 0 : t.BToast) == null ? void 0 : a.injectkey) != null ? l : Xt), e.provide((r = (n = t == null ? void 0 : t.BToast) == null ? void 0 : n.injectkey) != null ? r : Xt, new vr());
  }
}, gr = "toast-title", Ma = 1e3, un = P({
  components: { BLink: Ve },
  props: {
    ...Je,
    delay: { type: Number, default: 5e3 },
    bodyClass: { type: String },
    body: { type: [Object, String] },
    headerClass: { type: String },
    headerTag: { type: String, default: "div" },
    animation: { type: [Boolean, String], default: !0 },
    id: { type: String },
    isStatus: { type: [Boolean, String], default: !1 },
    autoHide: { type: [Boolean, String], default: !0 },
    noCloseButton: { type: [Boolean, String], default: !1 },
    noFade: { type: [Boolean, String], default: !1 },
    noHoverPause: { type: [Boolean, String], default: !1 },
    solid: { type: [Boolean, String], default: !1 },
    static: { type: [Boolean, String], default: !1 },
    title: { type: String },
    modelValue: { type: [Boolean, String], default: !1 },
    toastClass: { type: Array },
    variant: { type: String }
  },
  emits: ["destroyed", "update:modelValue"],
  setup(e, { emit: t, slots: a }) {
    u(o(e, "animation"));
    const l = u(o(e, "isStatus")), n = u(o(e, "autoHide")), r = u(o(e, "noCloseButton")), d = u(o(e, "noFade")), c = u(o(e, "noHoverPause"));
    u(o(e, "solid")), u(o(e, "static"));
    const v = u(o(e, "modelValue")), m = U(!1), C = U(!1), p = U(!1), g = i(() => ({
      [`b-toast-${e.variant}`]: e.variant !== void 0,
      show: p.value || m.value
    }));
    let A, w, B;
    const S = () => {
      typeof A > "u" || (clearTimeout(A), A = void 0);
    }, h = i(
      () => Math.max(je(e.delay, 0), Ma)
    ), $ = () => {
      v.value && (w = B = 0, S(), C.value = !0, ft(() => {
        p.value = !1;
      }));
    }, F = () => {
      S(), t("update:modelValue", !0), w = B = 0, C.value = !1, Ie(() => {
        ft(() => {
          p.value = !0;
        });
      });
    }, I = () => {
      if (!n.value || c.value || !A || B)
        return;
      const q = Date.now() - w;
      q > 0 && (S(), B = Math.max(h.value - q, Ma));
    }, V = () => {
      (!n.value || c.value || !B) && (B = w = 0), _();
    };
    ue(v, (q) => {
      q ? F() : $();
    });
    const _ = () => {
      S(), n.value && (A = setTimeout($, B || h.value), w = Date.now(), B = 0);
    }, O = () => {
      m.value = !0, t("update:modelValue", !0);
    }, b = () => {
      m.value = !1, _();
    }, x = () => {
      m.value = !0;
    }, H = () => {
      m.value = !1, B = w = 0, t("update:modelValue", !1);
    };
    In(() => {
      S(), n.value && t("destroyed", e.id);
    }), ke(() => {
      Ie(() => {
        v.value && ft(() => {
          F();
        });
      });
    });
    const j = () => {
      Ie(() => {
        ft(() => {
          $();
        });
      });
    };
    return () => {
      const q = () => {
        const K = [], oe = Pe(gr, { hide: $ }, a);
        oe ? K.push(le(oe)) : e.title && K.push(le("strong", { class: "me-auto" }, e.title)), !r.value && K.length !== 0 && K.push(
          le(nt, {
            class: ["btn-close"],
            onClick: () => {
              $();
            }
          })
        );
        const Z = [];
        if (K.length > 0 && Z.push(
          le(
            e.headerTag,
            {
              class: "toast-header"
            },
            { default: () => K }
          )
        ), Pe("default", { hide: $ }, a) || e.body) {
          const ge = le(
            it(e) ? "b-link" : "div",
            {
              class: ["toast-body", e.bodyClass],
              onClick: it(e) ? { click: j } : {}
            },
            Pe("default", { hide: $ }, a) || e.body
          );
          Z.push(ge);
        }
        return le(
          "div",
          {
            class: ["toast", e.toastClass, g.value],
            tabindex: "0"
          },
          Z
        );
      };
      return le(
        "div",
        {
          class: ["b-toast"],
          id: e.id,
          role: C.value ? null : l.value ? "status" : "alert",
          "aria-live": C.value ? null : l.value ? "polite" : "assertive",
          "aria-atomic": C.value ? null : "true",
          onmouseenter: I,
          onmouseleave: V
        },
        [
          le(
            lt,
            {
              noFade: d.value,
              onAfterEnter: b,
              onBeforeEnter: O,
              onAfterLeave: H,
              onBeforeLeave: x
            },
            () => [p.value ? q() : ""]
          )
        ]
      );
    };
  }
}), Jt = /* @__PURE__ */ P({
  __name: "BToaster",
  props: {
    position: { default: "top-right" },
    instance: null
  },
  setup(e) {
    const t = e, a = {
      "top-left": "top-0 start-0",
      "top-center": "top-0 start-50 translate-middle-x",
      "top-right": "top-0 end-0",
      "middle-left": "top-50 start-0 translate-middle-y",
      "middle-center": "top-50 start-50 translate-middle",
      "middle-right": "top-50 end-0 translate-middle-y",
      "bottom-left": "bottom-0 start-0",
      "bottom-center": "bottom-0 start-50 translate-middle-x",
      "bottom-right": "bottom-0 end-0"
    }, l = i(() => a[t.position]), n = (r) => {
      var d;
      (d = t.instance) == null || d.remove(r);
    };
    return (r, d) => {
      var c;
      return f(), y("div", {
        class: L([[s(l)], "b-toaster position-fixed p-3"]),
        style: { "z-index": "11" }
      }, [
        (f(!0), y(se, null, fe((c = e.instance) == null ? void 0 : c.toasts(e.position).value, (v) => (f(), z(un, {
          id: v.options.id,
          key: v.options.id,
          modelValue: v.options.value,
          "onUpdate:modelValue": (m) => v.options.value = m,
          "auto-hide": v.options.autoHide,
          delay: v.options.delay,
          "no-close-button": v.options.noCloseButton,
          title: v.content.title,
          body: v.content.body,
          component: v.content.body,
          variant: v.options.variant,
          onDestroyed: n
        }, null, 8, ["id", "modelValue", "onUpdate:modelValue", "auto-hide", "delay", "no-close-button", "title", "body", "component", "variant"]))), 128))
      ], 2);
    };
  }
}), hr = P({
  props: {
    gutterX: { type: String, default: null },
    gutterY: { type: String, default: null },
    fluid: { type: [Boolean, String], default: !1 },
    toast: { type: Object },
    position: { type: String, required: !1 }
  },
  setup(e, { slots: t, expose: a }) {
    const l = U();
    let n;
    const r = i(() => ({
      container: !e.fluid,
      ["container-fluid"]: typeof e.fluid == "boolean" && e.fluid,
      [`container-${e.fluid}`]: typeof e.fluid == "string",
      [`gx-${e.gutterX}`]: e.gutterX !== null,
      [`gy-${e.gutterY}`]: e.gutterY !== null
    }));
    return ke(() => {
      e.toast;
    }), e.toast && (n = rn({ container: l, root: e.toast.root }), a({})), () => {
      var c;
      const d = [];
      return n == null || n.containerPositions.value.forEach((v) => {
        d.push(le(Jt, { key: v, instance: n, position: v }));
      }), le("div", { class: [r.value, e.position], ref: l }, [
        ...d,
        (c = t.default) == null ? void 0 : c.call(t)
      ]);
    };
  },
  methods: {}
}), yr = { class: "visually-hidden" }, Br = ["aria-labelledby", "role"], dn = /* @__PURE__ */ P({
  __name: "BDropdown",
  props: {
    id: null,
    menuClass: null,
    size: null,
    splitClass: null,
    splitVariant: null,
    text: null,
    toggleClass: null,
    autoClose: { type: [Boolean, String], default: !0 },
    block: { default: !1 },
    boundary: { default: "clippingParents" },
    dark: { default: !1 },
    disabled: { default: !1 },
    isNav: { default: !1 },
    dropup: { default: !1 },
    dropright: { default: !1 },
    dropleft: { default: !1 },
    noFlip: { default: !1 },
    offset: { default: 0 },
    popperOpts: { default: () => ({}) },
    right: { default: !1 },
    role: { default: "menu" },
    split: { default: !1 },
    splitButtonType: { default: "button" },
    splitHref: { default: void 0 },
    noCaret: { default: !1 },
    toggleText: { default: "Toggle dropdown" },
    variant: { default: "secondary" }
  },
  emits: ["show", "shown", "hide", "hidden", "click", "toggle"],
  setup(e, { expose: t, emit: a }) {
    const l = e, n = $e(o(l, "id"), "dropdown"), r = u(o(l, "block")), d = u(o(l, "dark")), c = u(o(l, "dropup")), v = u(o(l, "dropright")), m = u(o(l, "isNav")), C = u(o(l, "dropleft")), p = u(o(l, "right")), g = u(o(l, "split")), A = u(o(l, "noCaret")), w = U(), B = U(), S = U(), h = i(() => ({
      "d-grid": r.value,
      "d-flex": r.value && g.value
    })), $ = i(() => [
      g.value ? l.splitClass : l.toggleClass,
      {
        "nav-link": m.value,
        "dropdown-toggle": !g.value,
        "dropdown-toggle-no-caret": A.value && !g.value,
        "w-100": g.value && r.value
      }
    ]), F = i(() => [
      l.menuClass,
      {
        "dropdown-menu-dark": d.value,
        "dropdown-menu-end": p.value
      }
    ]), I = i(() => ({
      "data-bs-toggle": g.value ? void 0 : "dropdown",
      "aria-expanded": g.value ? void 0 : !1,
      ref: g.value ? void 0 : B,
      href: g.value ? l.splitHref : void 0
    })), V = i(() => ({
      ref: g.value ? B : void 0
    })), _ = () => {
      var b;
      (b = S.value) == null || b.hide();
    }, O = (b) => {
      g.value && a("click", b);
    };
    return qe(w, "show.bs.dropdown", () => a("show")), qe(w, "shown.bs.dropdown", () => a("shown")), qe(w, "hide.bs.dropdown", () => a("hide")), qe(w, "hidden.bs.dropdown", () => a("hidden")), ke(() => {
      var b;
      S.value = new Nn((b = B.value) == null ? void 0 : b.$el, {
        autoClose: l.autoClose,
        boundary: l.boundary,
        offset: l.offset ? l.offset.toString() : "",
        reference: l.offset || g.value ? "parent" : "toggle",
        popperConfig: (x) => {
          const H = {
            placement: "bottom-start",
            modifiers: l.noFlip ? [
              {
                name: "flip",
                options: {
                  fallbackPlacements: []
                }
              }
            ] : []
          };
          return c.value ? H.placement = p.value ? "top-end" : "top-start" : v.value ? H.placement = "right-start" : C.value ? H.placement = "left-start" : p.value && (H.placement = "bottom-end"), jt(x, jt(H, l.popperOpts));
        }
      });
    }), t({
      hide: _
    }), (b, x) => (f(), y("div", {
      ref_key: "parent",
      ref: w,
      class: L([s(h), "btn-group"])
    }, [
      ce(et, Y({
        id: s(n),
        variant: e.splitVariant || e.variant,
        size: e.size,
        class: s($),
        disabled: e.disabled,
        type: e.splitButtonType
      }, s(I), { onClick: O }), {
        default: D(() => [
          k(b.$slots, "button-content", {}, () => [
            te(W(e.text), 1)
          ])
        ]),
        _: 3
      }, 16, ["id", "variant", "size", "class", "disabled", "type"]),
      s(g) ? (f(), z(et, Y({
        key: 0,
        variant: e.variant,
        size: e.size,
        disabled: e.disabled
      }, s(V), {
        class: [e.toggleClass, "dropdown-toggle-split dropdown-toggle"],
        "data-bs-toggle": "dropdown",
        "aria-expanded": "false",
        onClick: x[0] || (x[0] = (H) => a("toggle"))
      }), {
        default: D(() => [
          R("span", yr, [
            k(b.$slots, "toggle-text", {}, () => [
              te(W(e.toggleText), 1)
            ])
          ])
        ]),
        _: 3
      }, 16, ["variant", "size", "disabled", "class"])) : X("", !0),
      R("ul", {
        class: L(["dropdown-menu", s(F)]),
        "aria-labelledby": s(n),
        role: e.role
      }, [
        k(b.$slots, "default")
      ], 10, Br)
    ], 2));
  }
}), $r = { role: "presentation" }, kr = /* @__PURE__ */ P({
  __name: "BDropdownDivider",
  props: {
    tag: { default: "hr" }
  },
  setup(e) {
    return (t, a) => (f(), y("li", $r, [
      (f(), z(ee(e.tag), {
        class: "dropdown-divider",
        role: "separator",
        "aria-orientation": "horizontal"
      }))
    ]));
  }
}), Sr = {}, Cr = { role: "presentation" }, wr = { class: "px-4 py-3" };
function _r(e, t) {
  return f(), y("li", Cr, [
    R("form", wr, [
      k(e.$slots, "default")
    ])
  ]);
}
const Tr = /* @__PURE__ */ Te(Sr, [["render", _r]]), Vr = { role: "presentation" }, Ar = ["id", "aria-describedby"], Or = {
  inheritAttrs: !1
}, xr = /* @__PURE__ */ P({
  ...Or,
  __name: "BDropdownGroup",
  props: {
    id: null,
    ariaDescribedby: null,
    header: null,
    headerClass: null,
    headerTag: { default: "header" },
    headerVariant: null
  },
  setup(e) {
    const t = e, a = i(
      () => t.id ? `${t.id}_group_dd_header` : void 0
    ), l = i(
      () => t.headerTag === "header" ? void 0 : "heading"
    ), n = i(() => [
      t.headerClass,
      {
        [`text-${t.headerVariant}`]: t.headerVariant !== void 0
      }
    ]);
    return (r, d) => (f(), y("li", Vr, [
      (f(), z(ee(e.headerTag), {
        id: s(a),
        class: L(["dropdown-header", s(n)]),
        role: s(l)
      }, {
        default: D(() => [
          k(r.$slots, "header", {}, () => [
            te(W(e.header), 1)
          ])
        ]),
        _: 3
      }, 8, ["id", "class", "role"])),
      R("ul", Y({
        id: e.id,
        role: "group",
        class: "list-unstyled"
      }, r.$attrs, {
        "aria-describedby": e.ariaDescribedby || s(a)
      }), [
        k(r.$slots, "default")
      ], 16, Ar)
    ]));
  }
}), Pr = {}, Ir = { class: "dropdown-header" };
function Fr(e, t) {
  return f(), y("li", null, [
    R("h6", Ir, [
      k(e.$slots, "default")
    ])
  ]);
}
const Er = /* @__PURE__ */ Te(Pr, [["render", Fr]]), Lr = {
  inheritAttrs: !1
}, zr = /* @__PURE__ */ P({
  ...Lr,
  __name: "BDropdownItem",
  props: {
    href: null,
    linkClass: null,
    active: { default: !1 },
    disabled: { default: !1 },
    rel: { default: void 0 },
    target: { default: "_self" },
    variant: null
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = u(o(a, "active")), n = u(o(a, "disabled")), r = rl(), d = i(() => [
      a.linkClass,
      {
        active: l.value,
        disabled: n.value,
        [`text-${a.variant}`]: a.variant !== void 0
      }
    ]), c = i(
      () => a.href ? "a" : r.to ? Ve : "button"
    ), v = i(() => ({
      disabled: n.value,
      "aria-current": l.value ? "true" : null,
      href: c.value === "a" ? a.href : null,
      rel: a.rel,
      type: c.value === "button" ? "button" : null,
      target: a.target,
      ...r.to ? { activeClass: "active", ...r } : {}
    })), m = (C) => t("click", C);
    return (C, p) => (f(), y("li", {
      role: "presentation",
      class: L(C.$attrs.class)
    }, [
      (f(), z(ee(s(c)), Y({
        class: ["dropdown-item", s(d)]
      }, s(v), { onClick: m }), {
        default: D(() => [
          k(C.$slots, "default")
        ]),
        _: 3
      }, 16, ["class"]))
    ], 2));
  }
}), Nr = ["disabled"], Dr = {
  inheritAttrs: !1
}, Hr = /* @__PURE__ */ P({
  ...Dr,
  __name: "BDropdownItemButton",
  props: {
    buttonClass: null,
    active: { default: !1 },
    activeClass: { default: "active" },
    disabled: { default: !1 },
    variant: null
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = u(o(a, "active")), n = u(o(a, "disabled")), r = i(() => [
      a.buttonClass,
      {
        [a.activeClass]: l.value,
        disabled: n.value,
        [`text-${a.variant}`]: a.variant !== void 0
      }
    ]), d = (c) => t("click", c);
    return (c, v) => (f(), y("li", {
      role: "presentation",
      class: L(c.$attrs.class)
    }, [
      R("button", {
        role: "menu",
        type: "button",
        class: L(["dropdown-item", s(r)]),
        disabled: s(n),
        onClick: d
      }, [
        k(c.$slots, "default")
      ], 10, Nr)
    ], 2));
  }
}), Mr = { role: "presentation" }, Rr = { class: "px-4 py-1 mb-0 text-muted" }, jr = /* @__PURE__ */ P({
  __name: "BDropdownText",
  props: {
    text: { default: "" }
  },
  setup(e) {
    return (t, a) => (f(), y("li", Mr, [
      R("p", Rr, [
        k(t.$slots, "default", {}, () => [
          te(W(e.text), 1)
        ])
      ])
    ]));
  }
}), qr = ["id", "novalidate", "onSubmit"], cn = /* @__PURE__ */ P({
  __name: "BForm",
  props: {
    id: null,
    floating: { default: !1 },
    novalidate: { default: !1 },
    validated: { default: !1 }
  },
  emits: ["submit"],
  setup(e, { emit: t }) {
    const a = e, l = u(o(a, "floating")), n = u(o(a, "novalidate")), r = u(o(a, "validated")), d = i(() => ({
      "form-floating": l.value,
      "was-validated": r.value
    })), c = (v) => t("submit", v);
    return (v, m) => (f(), y("form", {
      id: e.id,
      novalidate: s(n),
      class: L(s(d)),
      onSubmit: Xe(c, ["prevent"])
    }, [
      k(v.$slots, "default")
    ], 42, qr));
  }
}), Gr = { class: "form-floating" }, Ur = ["for"], Wr = /* @__PURE__ */ P({
  __name: "BFormFloatingLabel",
  props: {
    labelFor: null,
    label: null,
    text: null
  },
  setup(e) {
    return (t, a) => (f(), y("div", Gr, [
      k(t.$slots, "default", {}, () => [
        te(W(e.text), 1)
      ]),
      R("label", { for: e.labelFor }, [
        k(t.$slots, "label", {}, () => [
          te(W(e.label), 1)
        ])
      ], 8, Ur)
    ]));
  }
}), Qt = /* @__PURE__ */ P({
  __name: "BFormInvalidFeedback",
  props: {
    ariaLive: null,
    forceShow: { default: !1 },
    id: null,
    text: null,
    role: null,
    state: { default: void 0 },
    tag: { default: "div" },
    tooltip: { default: !1 }
  },
  setup(e) {
    const t = e, a = u(o(t, "forceShow")), l = u(o(t, "state")), n = u(o(t, "tooltip")), r = i(
      () => a.value === !0 || l.value === !1
    ), d = i(() => ({
      "d-block": r.value,
      "invalid-feedback": !n.value,
      "invalid-tooltip": n.value
    })), c = i(() => ({
      id: t.id,
      role: t.role,
      "aria-live": t.ariaLive,
      "aria-atomic": t.ariaLive ? "true" : void 0
    }));
    return (v, m) => (f(), z(ee(e.tag), Y({ class: s(d) }, s(c)), {
      default: D(() => [
        k(v.$slots, "default", {}, () => [
          te(W(e.text), 1)
        ])
      ]),
      _: 3
    }, 16, ["class"]));
  }
}), gt = /* @__PURE__ */ P({
  __name: "BFormRow",
  props: {
    tag: { default: "div" }
  },
  setup(e) {
    return (t, a) => (f(), z(ee(e.tag), { class: "row d-flex flex-wrap" }, {
      default: D(() => [
        k(t.$slots, "default")
      ]),
      _: 3
    }));
  }
}), Yt = /* @__PURE__ */ P({
  __name: "BFormText",
  props: {
    id: null,
    inline: { default: !1 },
    tag: { default: "small" },
    text: null,
    textVariant: { default: "muted" }
  },
  setup(e) {
    const t = e, a = u(o(t, "inline")), l = i(() => [
      [`text-${t.textVariant}`],
      {
        "form-text": !a.value
      }
    ]);
    return (n, r) => (f(), z(ee(e.tag), {
      id: e.id,
      class: L(s(l))
    }, {
      default: D(() => [
        k(n.$slots, "default", {}, () => [
          te(W(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Zt = /* @__PURE__ */ P({
  __name: "BFormValidFeedback",
  props: {
    ariaLive: null,
    forceShow: { default: !1 },
    id: null,
    role: null,
    text: null,
    state: { default: void 0 },
    tag: { default: "div" },
    tooltip: { default: !1 }
  },
  setup(e) {
    const t = e, a = u(o(t, "forceShow")), l = u(o(t, "state")), n = u(o(t, "tooltip")), r = i(
      () => a.value === !0 || l.value === !0
    ), d = i(() => ({
      "d-block": r.value,
      "valid-feedback": !n.value,
      "valid-tooltip": n.value
    })), c = i(() => t.ariaLive ? "true" : void 0);
    return (v, m) => (f(), z(ee(e.tag), {
      id: e.id,
      role: e.role,
      "aria-live": e.ariaLive,
      "aria-atomic": s(c),
      class: L(s(d))
    }, {
      default: D(() => [
        k(v.$slots, "default", {}, () => [
          te(W(e.text), 1)
        ])
      ]),
      _: 3
    }, 8, ["id", "role", "aria-live", "aria-atomic", "class"]));
  }
}), Kr = ["id", "disabled", "required", "name", "form", "aria-label", "aria-labelledby", "aria-required", "value", "indeterminate"], Xr = ["for"], Jr = {
  inheritAttrs: !1
}, fn = /* @__PURE__ */ P({
  ...Jr,
  __name: "BFormCheckbox",
  props: {
    ariaLabel: null,
    ariaLabelledBy: null,
    form: null,
    indeterminate: null,
    name: null,
    id: { default: void 0 },
    autofocus: { default: !1 },
    plain: { default: !1 },
    button: { default: !1 },
    switch: { default: !1 },
    disabled: { default: !1 },
    buttonVariant: { default: "secondary" },
    inline: { default: !1 },
    required: { default: void 0 },
    size: { default: "md" },
    state: { default: void 0 },
    uncheckedValue: { type: [Array, Set, Boolean, String, Object, Number], default: !1 },
    value: { type: [Array, Set, Boolean, String, Object, Number], default: !0 },
    modelValue: { type: [Array, Set, Boolean, String, Object, Number], default: void 0 }
  },
  emits: ["update:modelValue", "input", "change"],
  setup(e, { emit: t }) {
    const a = e, l = Se(), n = $e(o(a, "id"), "form-check"), r = u(o(a, "indeterminate")), d = u(o(a, "autofocus")), c = u(o(a, "plain")), v = u(o(a, "button")), m = u(o(a, "switch")), C = u(o(a, "disabled")), p = u(o(a, "inline")), g = u(o(a, "required")), A = u(o(a, "state")), w = U(null), B = U(!1), S = i(() => !we(l.default)), h = i({
      get: () => a.uncheckedValue ? Array.isArray(a.modelValue) ? a.modelValue.indexOf(a.value) > -1 : a.modelValue === a.value : a.modelValue,
      set: (O) => {
        let b = O;
        Array.isArray(a.modelValue) ? a.uncheckedValue && (b = a.modelValue, O ? (b.indexOf(a.uncheckedValue) > -1 && b.splice(b.indexOf(a.uncheckedValue), 1), b.push(a.value)) : (b.indexOf(a.value) > -1 && b.splice(b.indexOf(a.value), 1), b.push(a.uncheckedValue))) : b = O ? a.value : a.uncheckedValue, t("input", b), t("update:modelValue", b), t("change", b);
      }
    }), $ = i(() => Array.isArray(a.modelValue) ? a.modelValue.indexOf(a.value) > -1 : JSON.stringify(a.modelValue) === JSON.stringify(a.value)), F = Ne({
      plain: o(c, "value"),
      button: o(v, "value"),
      inline: o(p, "value"),
      switch: o(m, "value"),
      size: o(a, "size"),
      state: o(A, "value"),
      buttonVariant: o(a, "buttonVariant")
    }), I = Ml(F), V = Rl(F), _ = jl(F);
    return ke(() => {
      d.value && w.value.focus();
    }), (O, b) => (f(), y("div", {
      class: L(s(I))
    }, [
      Ge(R("input", Y({ id: s(n) }, O.$attrs, {
        ref_key: "input",
        ref: w,
        "onUpdate:modelValue": b[0] || (b[0] = (x) => tt(h) ? h.value = x : null),
        class: s(V),
        type: "checkbox",
        disabled: s(C),
        required: !!e.name && !!s(g),
        name: e.name,
        form: e.form,
        "aria-label": e.ariaLabel,
        "aria-labelledby": e.ariaLabelledBy,
        "aria-required": e.name && s(g) ? "true" : void 0,
        value: e.value,
        indeterminate: s(r),
        onFocus: b[1] || (b[1] = (x) => B.value = !0),
        onBlur: b[2] || (b[2] = (x) => B.value = !1)
      }), null, 16, Kr), [
        [Fn, s(h)]
      ]),
      s(S) || !s(c) ? (f(), y("label", {
        key: 0,
        for: s(n),
        class: L([s(_), { active: s($), focus: B.value }])
      }, [
        k(O.$slots, "default")
      ], 10, Xr)) : X("", !0)
    ], 2));
  }
}), Qr = ["id"], Yr = ["innerHTML"], Zr = ["textContent"], ei = /* @__PURE__ */ P({
  __name: "BFormCheckboxGroup",
  props: {
    id: null,
    form: null,
    modelValue: { default: () => [] },
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    buttonVariant: { default: "secondary" },
    buttons: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    name: null,
    options: { default: () => [] },
    plain: { default: !1 },
    required: { default: !1 },
    size: null,
    stacked: { default: !1 },
    state: { default: void 0 },
    switches: { default: !1 },
    textField: { default: "text" },
    validated: { default: !1 },
    valueField: { default: "value" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = e, l = Se(), n = "BFormCheckbox", r = $e(o(a, "id"), "checkbox"), d = $e(o(a, "name"), "checkbox");
    u(o(a, "autofocus"));
    const c = u(o(a, "buttons")), v = u(o(a, "disabled"));
    u(o(a, "plain"));
    const m = u(o(a, "required")), C = u(o(a, "stacked")), p = u(o(a, "state")), g = u(o(a, "switches")), A = u(o(a, "validated")), w = i({
      get: () => a.modelValue,
      set: (F) => {
        if (JSON.stringify(F) === JSON.stringify(a.modelValue))
          return;
        const I = a.options.filter(
          (V) => F.map((_) => JSON.stringify(_)).includes(JSON.stringify(typeof V == "string" ? V : V[a.valueField]))
        ).map((V) => typeof V == "string" ? V : V[a.valueField]);
        t("input", I), t("update:modelValue", I), t("change", I);
      }
    }), B = i(
      () => (l.first ? wt(l.first(), n, v.value) : []).concat(a.options.map((F) => Ul(F, a))).concat(l.default ? wt(l.default(), n, v.value) : []).map((F, I) => Wl(F, I, a, d, r)).map((F) => ({
        ...F,
        props: {
          switch: g.value,
          ...F.props
        }
      }))
    ), S = Ne({
      required: o(m, "value"),
      ariaInvalid: o(a, "ariaInvalid"),
      state: o(p, "value"),
      validated: o(A, "value"),
      buttons: o(c, "value"),
      stacked: o(C, "value"),
      size: o(a, "size")
    }), h = ql(S), $ = Gl(S);
    return (F, I) => (f(), y("div", Y(s(h), {
      id: s(r),
      role: "group",
      class: [s($), "bv-no-focus-ring"],
      tabindex: "-1"
    }), [
      (f(!0), y(se, null, fe(s(B), (V, _) => (f(), z(fn, Y({
        key: _,
        modelValue: s(w),
        "onUpdate:modelValue": I[0] || (I[0] = (O) => tt(w) ? w.value = O : null)
      }, V.props), {
        default: D(() => [
          V.html ? (f(), y("span", {
            key: 0,
            innerHTML: V.html
          }, null, 8, Yr)) : (f(), y("span", {
            key: 1,
            textContent: W(V.text)
          }, null, 8, Zr))
        ]),
        _: 2
      }, 1040, ["modelValue"]))), 128))
    ], 16, Qr));
  }
}), vn = ["input", "select", "textarea"], ti = vn.map((e) => `${e}:not([disabled])`).join(), ai = [...vn, "a", "button", "label"], li = "label", ni = "invalid-feedback", oi = "valid-feedback", si = "description", ri = "default", ii = P({
  components: { BCol: st, BFormInvalidFeedback: Qt, BFormRow: gt, BFormText: Yt, BFormValidFeedback: Zt },
  props: {
    contentCols: { type: [Boolean, String, Number], required: !1 },
    contentColsLg: { type: [Boolean, String, Number], required: !1 },
    contentColsMd: { type: [Boolean, String, Number], required: !1 },
    contentColsSm: { type: [Boolean, String, Number], required: !1 },
    contentColsXl: { type: [Boolean, String, Number], required: !1 },
    description: { type: [String], required: !1 },
    disabled: { type: [Boolean, String], default: !1 },
    feedbackAriaLive: { type: String, default: "assertive" },
    id: { type: String, required: !1 },
    invalidFeedback: { type: String, required: !1 },
    label: { type: String, required: !1 },
    labelAlign: { type: [Boolean, String, Number], required: !1 },
    labelAlignLg: { type: [Boolean, String, Number], required: !1 },
    labelAlignMd: { type: [Boolean, String, Number], required: !1 },
    labelAlignSm: { type: [Boolean, String, Number], required: !1 },
    labelAlignXl: { type: [Boolean, String, Number], required: !1 },
    labelClass: { type: [Array, Object, String], required: !1 },
    labelCols: { type: [Boolean, String, Number], required: !1 },
    labelColsLg: { type: [Boolean, String, Number], required: !1 },
    labelColsMd: { type: [Boolean, String, Number], required: !1 },
    labelColsSm: { type: [Boolean, String, Number], required: !1 },
    labelColsXl: { type: [Boolean, String, Number], required: !1 },
    labelFor: { type: String, required: !1 },
    labelSize: { type: String, required: !1 },
    labelSrOnly: { type: [Boolean, String], default: !1 },
    state: { type: [Boolean, String], default: null },
    tooltip: { type: [Boolean, String], default: !1 },
    validFeedback: { type: String, required: !1 },
    validated: { type: [Boolean, String], default: !1 },
    floating: { type: [Boolean, String], default: !1 }
  },
  setup(e, { attrs: t }) {
    const a = u(o(e, "disabled")), l = u(o(e, "labelSrOnly")), n = u(o(e, "state")), r = u(o(e, "tooltip")), d = u(o(e, "validated")), c = u(o(e, "floating")), v = null, m = ["xs", "sm", "md", "lg", "xl"], C = (_, O) => m.reduce((b, x) => {
      const H = ha(x === "xs" ? "" : x, `${O}Align`), j = _[H] || null;
      return j && (x === "xs" ? b.push(`text-${j}`) : b.push(`text-${x}-${j}`)), b;
    }, []), p = (_, O) => m.reduce((b, x) => {
      const H = ha(x === "xs" ? "" : x, `${O}Cols`);
      let j = _[H];
      return j = j === "" ? !0 : j || !1, typeof j != "boolean" && j !== "auto" && (j = ot(j, 0), j = j > 0 ? j : !1), j && (x === "xs" ? b.cols = j : b[x || (typeof j == "boolean" ? "col" : "cols")] = j), b;
    }, {}), g = U(), A = (_, O = null) => {
      if (Bl && e.labelFor) {
        const b = $l(`#${Wn(e.labelFor)}`, g);
        if (b) {
          const x = "aria-describedby", H = (_ || "").split(pt), j = (O || "").split(pt), q = (ra(b, x) || "").split(pt).filter((K) => !j.includes(K)).concat(H).filter((K, oe, Z) => Z.indexOf(K) === oe).filter((K) => K).join(" ").trim();
          q ? ro(b, x, q) : io(b, x);
        }
      }
    }, w = i(() => p(e, "content")), B = i(() => C(e, "label")), S = i(() => p(e, "label")), h = i(
      () => Object.keys(w.value).length > 0 || Object.keys(S.value).length > 0
    ), $ = i(
      () => typeof n.value == "boolean" ? n.value : null
    ), F = i(() => {
      const _ = $.value;
      return _ === !0 ? "is-valid" : _ === !1 ? "is-invalid" : null;
    }), I = i(
      () => xt(t.ariaInvalid, n.value)
    );
    return ue(
      () => v,
      (_, O) => {
        _ !== O && A(_, O);
      }
    ), ke(() => {
      Ie(() => {
        A(v);
      });
    }), {
      disabledBoolean: a,
      labelSrOnlyBoolean: l,
      stateBoolean: n,
      tooltipBoolean: r,
      validatedBoolean: d,
      floatingBoolean: c,
      ariaDescribedby: v,
      computedAriaInvalid: I,
      contentColProps: w,
      isHorizontal: h,
      labelAlignClasses: B,
      labelColProps: S,
      onLegendClick: (_) => {
        if (e.labelFor)
          return;
        const { target: O } = _, b = O ? O.tagName : "";
        if (ai.indexOf(b) !== -1)
          return;
        const x = oo(ti, g).filter(no);
        x.length === 1 && ao(x[0]);
      },
      stateClass: F
    };
  },
  render() {
    const e = this.$props, t = this.$slots, a = $e(), l = !e.labelFor;
    let n = null;
    const r = Pe(li, {}, t) || e.label, d = r ? Re("_BV_label_") : null;
    if (r || this.isHorizontal) {
      const I = l ? "legend" : "label";
      if (this.labelSrOnlyBoolean)
        r && (n = le(
          I,
          {
            class: "visually-hidden",
            id: d,
            for: e.labelFor || null
          },
          r
        )), this.isHorizontal ? n = le(st, this.labelColProps, { default: () => n }) : n = le("div", {}, [n]);
      else {
        const V = {
          onClick: l ? this.onLegendClick : null,
          ...this.isHorizontal ? this.labelColProps : {},
          tag: this.isHorizontal ? I : null,
          id: d,
          for: e.labelFor || null,
          tabIndex: l ? "-1" : null,
          class: [
            this.isHorizontal ? "col-form-label" : "form-label",
            {
              "bv-no-focus-ring": l,
              "col-form-label": this.isHorizontal || l,
              "pt-0": !this.isHorizontal && l,
              "d-block": !this.isHorizontal && !l,
              [`col-form-label-${e.labelSize}`]: !!e.labelSize
            },
            this.labelAlignClasses,
            e.labelClass
          ]
        };
        this.isHorizontal ? n = le(st, V, { default: () => r }) : n = le(I, V, r);
      }
    }
    let c = null;
    const v = Pe(ni, {}, t) || this.invalidFeedback, m = v ? Re("_BV_feedback_invalid_") : void 0;
    v && (c = le(
      Qt,
      {
        ariaLive: e.feedbackAriaLive,
        id: m,
        state: this.stateBoolean,
        tooltip: this.tooltipBoolean
      },
      { default: () => v }
    ));
    let C = null;
    const p = Pe(oi, {}, t) || this.validFeedback, g = p ? Re("_BV_feedback_valid_") : void 0;
    p && (C = le(
      Zt,
      {
        ariaLive: e.feedbackAriaLive,
        id: g,
        state: this.stateBoolean,
        tooltip: this.tooltipBoolean
      },
      { default: () => p }
    ));
    let A = null;
    const w = Pe(si, {}, t) || this.description, B = w ? Re("_BV_description_") : void 0;
    w && (A = le(
      Yt,
      {
        id: B
      },
      { default: () => w }
    ));
    const S = this.ariaDescribedby = [
      B,
      this.stateBoolean === !1 ? m : null,
      this.stateBoolean === !0 ? g : null
    ].filter((I) => I).join(" ") || null, h = [
      Pe(ri, { ariaDescribedby: S, descriptionId: B, id: a, labelId: d }, t) || "",
      c,
      C,
      A
    ];
    !this.isHorizontal && this.floatingBoolean && h.push(n);
    let $ = le(
      "div",
      {
        ref: "content",
        class: [
          {
            "form-floating": !this.isHorizontal && this.floatingBoolean
          }
        ]
      },
      h
    );
    this.isHorizontal && ($ = le(st, { ref: "content", ...this.contentColProps }, { default: () => h }));
    const F = {
      class: [
        "mb-3",
        this.stateClass,
        {
          "was-validated": this.validatedBoolean
        }
      ],
      id: $e(o(e, "id")).value,
      disabled: l ? this.disabledBoolean : null,
      role: l ? null : "group",
      "aria-invalid": this.computedAriaInvalid,
      "aria-labelledby": l && this.isHorizontal ? d : null
    };
    return this.isHorizontal && !l ? le(gt, F, { default: () => [n, $] }) : le(
      l ? "fieldset" : "div",
      F,
      this.isHorizontal && l ? [le(gt, null, { default: () => [n, $] })] : this.isHorizontal || !this.floatingBoolean ? [n, $] : [$]
    );
  }
}), Ra = [
  "text",
  "number",
  "email",
  "password",
  "search",
  "url",
  "tel",
  "date",
  "time",
  "range",
  "color"
], ui = P({
  props: {
    ...Kl,
    max: { type: [String, Number], required: !1 },
    min: { type: [String, Number], required: !1 },
    step: { type: [String, Number], required: !1 },
    type: {
      type: String,
      default: "text",
      validator: (e) => Ra.includes(e)
    }
  },
  emits: ["update:modelValue", "change", "blur", "input"],
  setup(e, { emit: t }) {
    const { input: a, computedId: l, computedAriaInvalid: n, onInput: r, onChange: d, onBlur: c, focus: v, blur: m } = Xl(e, t), C = U(!1), p = i(() => {
      const w = e.type === "range", B = e.type === "color";
      return {
        "form-control-highlighted": C.value,
        "form-range": w,
        "form-control": B || !e.plaintext && !w,
        "form-control-color": B,
        "form-control-plaintext": e.plaintext && !w && !B,
        [`form-control-${e.size}`]: !!e.size,
        "is-valid": e.state === !0,
        "is-invalid": e.state === !1
      };
    }), g = i(
      () => Ra.includes(e.type) ? e.type : "text"
    );
    return {
      computedClasses: p,
      localType: g,
      input: a,
      computedId: l,
      computedAriaInvalid: n,
      onInput: r,
      onChange: d,
      onBlur: c,
      focus: v,
      blur: m,
      highlight: () => {
        C.value !== !0 && (C.value = !0, setTimeout(() => {
          C.value = !1;
        }, 2e3));
      }
    };
  }
}), di = ["id", "name", "form", "type", "disabled", "placeholder", "required", "autocomplete", "readonly", "min", "max", "step", "list", "aria-required", "aria-invalid"];
function ci(e, t, a, l, n, r) {
  return f(), y("input", Y({
    id: e.computedId,
    ref: "input",
    class: e.computedClasses,
    name: e.name || void 0,
    form: e.form || void 0,
    type: e.localType,
    disabled: e.disabled,
    placeholder: e.placeholder,
    required: e.required,
    autocomplete: e.autocomplete || void 0,
    readonly: e.readonly || e.plaintext,
    min: e.min,
    max: e.max,
    step: e.step,
    list: e.type !== "password" ? e.list : void 0,
    "aria-required": e.required ? "true" : void 0,
    "aria-invalid": e.computedAriaInvalid
  }, e.$attrs, {
    onInput: t[0] || (t[0] = (d) => e.onInput(d)),
    onChange: t[1] || (t[1] = (d) => e.onChange(d)),
    onBlur: t[2] || (t[2] = (d) => e.onBlur(d))
  }), null, 16, di);
}
const fi = /* @__PURE__ */ Te(ui, [["render", ci]]), vi = ["id", "disabled", "required", "name", "form", "aria-label", "aria-labelledby", "value", "aria-required"], mi = ["for"], mn = /* @__PURE__ */ P({
  __name: "BFormRadio",
  props: {
    ariaLabel: null,
    ariaLabelledby: null,
    form: null,
    id: null,
    name: null,
    size: null,
    autofocus: { default: !1 },
    modelValue: { type: [Boolean, String, Array, Object, Number], default: void 0 },
    plain: { default: !1 },
    button: { default: !1 },
    switch: { default: !1 },
    disabled: { default: !1 },
    buttonVariant: { default: "secondary" },
    inline: { default: !1 },
    required: { default: !1 },
    state: { default: void 0 },
    value: { type: [String, Boolean, Object, Number], default: !0 }
  },
  emits: ["input", "change", "update:modelValue"],
  setup(e, { emit: t }) {
    const a = e, l = Se(), n = $e(o(a, "id"), "form-check"), r = u(o(a, "autofocus")), d = u(o(a, "plain")), c = u(o(a, "button")), v = u(o(a, "switch")), m = u(o(a, "disabled")), C = u(o(a, "inline")), p = u(o(a, "required")), g = u(o(a, "state")), A = U(null), w = U(!1), B = i({
      get: () => Array.isArray(a.modelValue) ? a.modelValue[0] : a.modelValue,
      set: (_) => {
        const O = _ ? a.value : !1, b = Array.isArray(a.modelValue) ? [O] : O;
        t("input", b), t("change", b), t("update:modelValue", b);
      }
    }), S = i(() => Array.isArray(a.modelValue) ? (a.modelValue || []).find((_) => _ === a.value) : JSON.stringify(a.modelValue) === JSON.stringify(a.value)), h = i(() => !we(l.default)), $ = Ne({
      plain: o(d, "value"),
      button: o(c, "value"),
      inline: o(C, "value"),
      switch: o(v, "value"),
      size: o(a, "size"),
      state: o(g, "value"),
      buttonVariant: o(a, "buttonVariant")
    }), F = Ml($), I = Rl($), V = jl($);
    return ke(() => {
      r.value && A.value !== null && A.value.focus();
    }), (_, O) => (f(), y("div", {
      class: L(s(F))
    }, [
      Ge(R("input", Y({ id: s(n) }, _.$attrs, {
        ref_key: "input",
        ref: A,
        "onUpdate:modelValue": O[0] || (O[0] = (b) => tt(B) ? B.value = b : null),
        class: s(I),
        type: "radio",
        disabled: s(m),
        required: !!e.name && s(p),
        name: e.name,
        form: e.form,
        "aria-label": e.ariaLabel,
        "aria-labelledby": e.ariaLabelledby,
        value: e.value,
        "aria-required": !!e.name && s(p) ? !0 : void 0,
        onFocus: O[1] || (O[1] = (b) => w.value = !0),
        onBlur: O[2] || (O[2] = (b) => w.value = !1)
      }), null, 16, vi), [
        [En, s(B)]
      ]),
      s(h) || s(d) === !1 ? (f(), y("label", {
        key: 0,
        for: s(n),
        class: L([s(V), { active: s(S), focus: w.value }])
      }, [
        k(_.$slots, "default")
      ], 10, mi)) : X("", !0)
    ], 2));
  }
}), pi = ["id"], bi = ["innerHTML"], gi = ["textContent"], hi = /* @__PURE__ */ P({
  __name: "BFormRadioGroup",
  props: {
    size: null,
    form: null,
    id: null,
    name: null,
    modelValue: { type: [String, Boolean, Array, Object, Number], default: "" },
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    buttonVariant: { default: "secondary" },
    buttons: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    options: { default: () => [] },
    plain: { default: !1 },
    required: { default: !1 },
    stacked: { default: !1 },
    state: { default: void 0 },
    textField: { default: "text" },
    validated: { default: !1 },
    valueField: { default: "value" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = e, l = Se(), n = "BFormRadio", r = $e(o(a, "id"), "radio"), d = $e(o(a, "name"), "checkbox");
    u(o(a, "autofocus"));
    const c = u(o(a, "buttons")), v = u(o(a, "disabled"));
    u(o(a, "plain"));
    const m = u(o(a, "required")), C = u(o(a, "stacked")), p = u(o(a, "state")), g = u(o(a, "validated")), A = i({
      get: () => a.modelValue,
      set: ($) => {
        t("input", $), t("update:modelValue", $), t("change", $);
      }
    }), w = i(
      () => (l.first ? wt(l.first(), n, v.value) : []).concat(a.options.map(($) => Ul($, a))).concat(l.default ? wt(l.default(), n, v.value) : []).map(($, F) => Wl($, F, a, d, r)).map(($) => ({
        ...$
      }))
    ), B = Ne({
      required: o(m, "value"),
      ariaInvalid: o(a, "ariaInvalid"),
      state: o(p, "value"),
      validated: o(g, "value"),
      buttons: o(c, "value"),
      stacked: o(C, "value"),
      size: o(a, "size")
    }), S = ql(B), h = Gl(B);
    return ($, F) => (f(), y("div", Y(s(S), {
      id: s(r),
      role: "radiogroup",
      class: [s(h), "bv-no-focus-ring"],
      tabindex: "-1"
    }), [
      (f(!0), y(se, null, fe(s(w), (I, V) => (f(), z(mn, Y({
        key: V,
        modelValue: s(A),
        "onUpdate:modelValue": F[0] || (F[0] = (_) => tt(A) ? A.value = _ : null)
      }, I.props), {
        default: D(() => [
          I.html ? (f(), y("span", {
            key: 0,
            innerHTML: I.html
          }, null, 8, bi)) : (f(), y("span", {
            key: 1,
            textContent: W(I.text)
          }, null, 8, gi))
        ]),
        _: 2
      }, 1040, ["modelValue"]))), 128))
    ], 16, pi));
  }
}), yi = ["value", "disabled"], fa = /* @__PURE__ */ P({
  __name: "BFormSelectOption",
  props: {
    value: null,
    disabled: { default: !1 }
  },
  setup(e) {
    const a = u(o(e, "disabled"));
    return (l, n) => (f(), y("option", {
      value: e.value,
      disabled: s(a)
    }, [
      k(l.$slots, "default")
    ], 8, yi));
  }
}), Bi = ["label"], pn = /* @__PURE__ */ P({
  __name: "BFormSelectOptionGroup",
  props: {
    label: null,
    disabledField: { default: "disabled" },
    htmlField: { default: "html" },
    options: { default: () => [] },
    textField: { default: "text" },
    valueField: { default: "value" }
  },
  setup(e) {
    const t = e, a = i(
      () => ua(t.options, "BFormSelectOptionGroup", t)
    );
    return (l, n) => (f(), y("optgroup", { label: e.label }, [
      k(l.$slots, "first"),
      (f(!0), y(se, null, fe(s(a), (r, d) => (f(), z(fa, Y({
        key: d,
        value: r.value,
        disabled: r.disabled
      }, l.$attrs, {
        innerHTML: r.html || r.text
      }), null, 16, ["value", "disabled", "innerHTML"]))), 128)),
      k(l.$slots, "default")
    ], 8, Bi));
  }
}), $i = ["id", "name", "form", "multiple", "size", "disabled", "required", "aria-required", "aria-invalid"], ki = /* @__PURE__ */ P({
  __name: "BFormSelect",
  props: {
    ariaInvalid: { default: void 0 },
    autofocus: { default: !1 },
    disabled: { default: !1 },
    disabledField: { default: "disabled" },
    form: null,
    htmlField: { default: "html" },
    id: null,
    labelField: { default: "label" },
    multiple: { default: !1 },
    name: null,
    options: { default: () => [] },
    optionsField: { default: "options" },
    plain: { default: !1 },
    required: { default: !1 },
    selectSize: { default: 0 },
    size: null,
    state: { default: void 0 },
    textField: { default: "text" },
    valueField: { default: "value" },
    modelValue: { default: "" }
  },
  emits: ["input", "update:modelValue", "change"],
  setup(e, { expose: t, emit: a }) {
    const l = e, n = $e(o(l, "id"), "input"), r = u(o(l, "autofocus")), d = u(o(l, "disabled")), c = u(o(l, "multiple")), v = u(o(l, "plain")), m = u(o(l, "required")), C = u(o(l, "state")), p = U(), g = i(() => ({
      "form-control": v.value,
      [`form-control-${l.size}`]: l.size && v.value,
      "form-select": !v.value,
      [`form-select-${l.size}`]: l.size && !v.value,
      "is-valid": C.value === !0,
      "is-invalid": C.value === !1
    })), A = i(() => {
      if (l.selectSize || v.value)
        return l.selectSize;
    }), w = i(
      () => xt(l.ariaInvalid, C.value)
    ), B = i(
      () => ua(l.options, "BFormSelect", l)
    ), S = i({
      get() {
        return l.modelValue;
      },
      set(I) {
        a("change", I), a("update:modelValue", I), a("input", I);
      }
    }), h = () => {
      var I;
      d.value || (I = p.value) == null || I.focus();
    }, $ = () => {
      var I;
      d.value || (I = p.value) == null || I.blur();
    }, F = () => {
      var I;
      r.value && ((I = p.value) == null || I.focus());
    };
    return ke(() => {
      Ie(() => {
        F();
      });
    }), la(() => {
      Ie(() => {
        F();
      });
    }), t({
      blur: $,
      focus: h
    }), (I, V) => Ge((f(), y("select", Y({
      id: s(n),
      ref_key: "input",
      ref: p
    }, I.$attrs, {
      "onUpdate:modelValue": V[0] || (V[0] = (_) => tt(S) ? S.value = _ : null),
      class: s(g),
      name: e.name,
      form: e.form || void 0,
      multiple: s(c) || void 0,
      size: s(A),
      disabled: s(d),
      required: s(m),
      "aria-required": s(m) ? !0 : void 0,
      "aria-invalid": s(w)
    }), [
      k(I.$slots, "first"),
      (f(!0), y(se, null, fe(s(B), (_, O) => (f(), y(se, { key: O }, [
        Array.isArray(_.options) ? (f(), z(pn, {
          key: 0,
          label: _.label,
          options: _.options
        }, null, 8, ["label", "options"])) : (f(), z(fa, {
          key: 1,
          value: _.value,
          disabled: _.disabled,
          innerHTML: _.html || _.text
        }, null, 8, ["value", "disabled", "innerHTML"]))
      ], 64))), 128)),
      k(I.$slots, "default")
    ], 16, $i)), [
      [Ln, s(S)]
    ]);
  }
}), Si = ["id"], bn = /* @__PURE__ */ P({
  __name: "BFormTag",
  props: {
    id: null,
    title: null,
    disabled: { default: !1 },
    noRemove: { default: !1 },
    pill: { default: !1 },
    removeLabel: { default: "Remove tag" },
    tag: { default: "span" },
    variant: { default: "secondary" }
  },
  emits: ["remove"],
  setup(e, { emit: t }) {
    const a = e, l = Se(), n = $e(o(a, "id")), r = u(o(a, "disabled")), d = u(o(a, "noRemove")), c = u(o(a, "pill")), v = i(
      () => {
        var p, g, A;
        return (A = ((g = (p = l.default) == null ? void 0 : p.call(l)[0].children) != null ? g : "").toString() || a.title) != null ? A : "";
      }
    ), m = i(() => `${n.value}taglabel__`), C = i(() => [
      `bg-${a.variant}`,
      {
        "text-dark": ["warning", "info", "light"].includes(a.variant),
        "rounded-pill": c.value,
        disabled: r.value
      }
    ]);
    return (p, g) => (f(), z(ee(e.tag), {
      id: s(n),
      title: s(v),
      class: L(["badge b-form-tag d-inline-flex align-items-center mw-100", s(C)]),
      "aria-labelledby": s(m)
    }, {
      default: D(() => [
        R("span", {
          id: s(m),
          class: "b-form-tag-content flex-grow-1 text-truncate"
        }, [
          k(p.$slots, "default", {}, () => [
            te(W(s(v)), 1)
          ])
        ], 8, Si),
        !s(r) && !s(d) ? (f(), z(nt, {
          key: 0,
          "aria-keyshortcuts": "Delete",
          "aria-label": e.removeLabel,
          class: "b-form-tag-remove",
          white: !["warning", "info", "light"].includes(e.variant),
          "aria-describedby": s(m),
          "aria-controls": e.id,
          onClick: g[0] || (g[0] = (A) => t("remove", s(v)))
        }, null, 8, ["aria-label", "white", "aria-describedby", "aria-controls"])) : X("", !0)
      ]),
      _: 3
    }, 8, ["id", "title", "class", "aria-labelledby"]));
  }
}), Ci = ["id"], wi = ["id", "for", "aria-live"], _i = ["id", "aria-live"], Ti = ["id"], Vi = ["aria-controls"], Ai = {
  role: "group",
  class: "d-flex"
}, Oi = ["id", "disabled", "value", "type", "placeholder", "form", "required"], xi = ["disabled"], Pi = {
  "aria-live": "polite",
  "aria-atomic": "true"
}, Ii = {
  key: 0,
  class: "d-block invalid-feedback"
}, Fi = {
  key: 1,
  class: "form-text text-muted"
}, Ei = {
  key: 2,
  class: "form-text text-muted"
}, Li = ["name", "value"], zi = /* @__PURE__ */ P({
  __name: "BFormTags",
  props: {
    addButtonText: { default: "Add" },
    addButtonVariant: { default: "outline-secondary" },
    addOnChange: { default: !1 },
    autofocus: { default: !1 },
    disabled: { default: !1 },
    duplicateTagText: { default: "Duplicate tag(s)" },
    inputAttrs: null,
    inputClass: null,
    inputId: null,
    inputType: { default: "text" },
    invalidTagText: { default: "Invalid tag(s)" },
    form: null,
    limit: null,
    limitTagsText: { default: "Tag limit reached" },
    modelValue: { default: () => [] },
    name: null,
    noAddOnEnter: { default: !1 },
    noOuterFocus: { default: !1 },
    noTagRemove: { default: !1 },
    placeholder: { default: "Add tag..." },
    removeOnDelete: { default: !1 },
    required: { default: !1 },
    separator: null,
    state: { default: void 0 },
    size: null,
    tagClass: null,
    tagPills: { default: !1 },
    tagRemoveLabel: null,
    tagRemovedLabel: { default: "Tag removed" },
    tagValidator: { type: Function, default: () => !0 },
    tagVariant: { default: "secondary" }
  },
  emits: ["update:modelValue", "input", "tag-state", "focus", "focusin", "focusout", "blur"],
  setup(e, { emit: t }) {
    const a = e, l = $e(), n = u(o(a, "addOnChange")), r = u(o(a, "autofocus")), d = u(o(a, "disabled")), c = u(o(a, "noAddOnEnter")), v = u(o(a, "noOuterFocus")), m = u(o(a, "noTagRemove")), C = u(o(a, "removeOnDelete")), p = u(o(a, "required")), g = u(o(a, "state")), A = u(o(a, "tagPills")), w = U(null), B = i(() => a.inputId || `${l.value}input__`), S = U(a.modelValue), h = U(""), $ = U(!1), F = U(!1), I = U(""), V = U([]), _ = U([]), O = U([]), b = i(() => ({
      [`form-control-${a.size}`]: a.size !== void 0,
      disabled: d.value,
      focus: F.value,
      "is-invalid": g.value === !1,
      "is-valid": g.value === !0
    })), x = i(() => S.value.includes(h.value)), H = i(
      () => h.value === "" ? !1 : !a.tagValidator(h.value)
    ), j = i(() => S.value.length === a.limit), q = i(() => !H.value && !x.value), K = i(() => ({
      addButtonText: a.addButtonText,
      addButtonVariant: a.addButtonVariant,
      addTag: re,
      disableAddButton: q.value,
      disabled: d.value,
      duplicateTagText: a.duplicateTagText,
      duplicateTags: O.value,
      form: a.form,
      inputAttrs: {
        ...a.inputAttrs,
        disabled: d.value,
        form: a.form,
        id: B,
        value: h
      },
      inputHandlers: {
        input: pe,
        keydown: he,
        change: ye
      },
      inputId: B,
      inputType: a.inputType,
      invalidTagText: a.invalidTagText,
      invalidTags: _.value,
      isDuplicate: x.value,
      isInvalid: H.value,
      isLimitReached: j.value,
      limitTagsText: a.limitTagsText,
      limit: a.limit,
      noTagRemove: m.value,
      placeholder: a.placeholder,
      removeTag: E,
      required: p.value,
      separator: a.separator,
      size: a.size,
      state: g.value,
      tagClass: a.tagClass,
      tagPills: A.value,
      tagRemoveLabel: a.tagRemoveLabel,
      tagVariant: a.tagVariant,
      tags: S.value
    }));
    ue(
      () => a.modelValue,
      (N) => {
        S.value = N;
      }
    );
    const oe = () => {
      var N;
      r.value && ((N = w.value) == null || N.focus());
    }, Z = (N) => {
      if (d.value) {
        N.target.blur();
        return;
      }
      t("focusin", N);
    }, ge = (N) => {
      d.value || v.value || (F.value = !0, t("focus", N));
    }, ae = (N) => {
      F.value = !1, t("blur", N);
    }, pe = (N) => {
      var Q, be;
      const J = typeof N == "string" ? N : N.target.value;
      if ($.value = !1, ((Q = a.separator) == null ? void 0 : Q.includes(J.charAt(0))) && J.length > 0) {
        w.value && (w.value.value = "");
        return;
      }
      if (h.value = J, (be = a.separator) != null && be.includes(J.charAt(J.length - 1))) {
        re(J.slice(0, J.length - 1));
        return;
      }
      V.value = a.tagValidator(J) && !x.value ? [J] : [], _.value = a.tagValidator(J) ? [] : [J], O.value = x.value ? [J] : [], t("tag-state", V.value, _.value, O.value);
    }, ye = (N) => {
      n.value && (pe(N), x.value || re(h.value));
    }, he = (N) => {
      if (N.key === "Enter" && !c.value) {
        re(h.value);
        return;
      }
      (N.key === "Backspace" || N.key === "Delete") && C.value && h.value === "" && $.value && S.value.length > 0 ? E(S.value[S.value.length - 1]) : $.value = !0;
    }, re = (N) => {
      var Q;
      if (N = (N || h.value).trim(), N === "" || x.value || !a.tagValidator(N) || a.limit && j.value)
        return;
      const J = [...a.modelValue, N];
      h.value = "", $.value = !0, t("update:modelValue", J), t("input", J), (Q = w.value) == null || Q.focus();
    }, E = (N) => {
      var Q;
      const J = S.value.indexOf((Q = N == null ? void 0 : N.toString()) != null ? Q : "");
      I.value = S.value.splice(J, 1).toString(), t("update:modelValue", S.value);
    };
    return ke(() => {
      oe(), a.modelValue.length > 0 && ($.value = !0);
    }), la(oe), (N, J) => (f(), y("div", {
      id: s(l),
      class: L(["b-form-tags form-control h-auto", s(b)]),
      role: "group",
      tabindex: "-1",
      onFocusin: Z,
      onFocusout: J[1] || (J[1] = (Q) => t("focusout", Q))
    }, [
      R("output", {
        id: `${s(l)}selected_tags__`,
        class: "visually-hidden",
        role: "status",
        for: s(B),
        "aria-live": F.value ? "polite" : "off",
        "aria-atomic": "true",
        "aria-relevant": "additions text"
      }, W(S.value.join(", ")), 9, wi),
      R("div", {
        id: `${s(l)}removed_tags__`,
        role: "status",
        "aria-live": F.value ? "assertive" : "off",
        "aria-atomic": "true",
        class: "visually-hidden"
      }, " (" + W(e.tagRemovedLabel) + ") " + W(I.value), 9, _i),
      k(N.$slots, "default", Be(_e(s(K))), () => [
        R("ul", {
          id: `${s(l)}tag_list__`,
          class: "b-form-tags-list list-unstyled mb-0 d-flex flex-wrap align-items-center"
        }, [
          (f(!0), y(se, null, fe(S.value, (Q, be) => k(N.$slots, "tag", Be(Y({ key: be }, { tag: Q, tagClass: e.tagClass, tagVariant: e.tagVariant, tagPills: s(A), removeTag: E })), () => [
            ce(bn, {
              class: L(e.tagClass),
              tag: "li",
              variant: e.tagVariant,
              pill: e.tagPills,
              onRemove: E
            }, {
              default: D(() => [
                te(W(Q), 1)
              ]),
              _: 2
            }, 1032, ["class", "variant", "pill"])
          ])), 128)),
          R("li", {
            role: "none",
            "aria-live": "off",
            class: "b-from-tags-field flex-grow-1",
            "aria-controls": `${s(l)}tag_list__`
          }, [
            R("div", Ai, [
              R("input", Y({
                id: s(B),
                ref_key: "input",
                ref: w,
                disabled: s(d),
                value: h.value,
                type: e.inputType,
                placeholder: e.placeholder,
                class: "b-form-tags-input w-100 flex-grow-1 p-0 m-0 bg-transparent border-0",
                style: { outline: "currentcolor none 0px", "min-width": "5rem" }
              }, e.inputAttrs, {
                form: e.form,
                required: s(p),
                onInput: pe,
                onChange: ye,
                onKeydown: he,
                onFocus: ge,
                onBlur: ae
              }), null, 16, Oi),
              s(q) ? (f(), y("button", {
                key: 0,
                type: "button",
                class: L(["btn b-form-tags-button py-0", [
                  `btn-${e.addButtonVariant}`,
                  {
                    "disabled invisible": h.value.length === 0
                  },
                  e.inputClass
                ]]),
                style: { "font-size": "90%" },
                disabled: s(d) || h.value.length === 0 || s(j),
                onClick: J[0] || (J[0] = (Q) => re(h.value))
              }, [
                k(N.$slots, "add-button-text", {}, () => [
                  te(W(e.addButtonText), 1)
                ])
              ], 10, xi)) : X("", !0)
            ])
          ], 8, Vi)
        ], 8, Ti),
        R("div", Pi, [
          s(H) ? (f(), y("div", Ii, W(e.invalidTagText) + ": " + W(h.value), 1)) : X("", !0),
          s(x) ? (f(), y("small", Fi, W(e.duplicateTagText) + ": " + W(h.value), 1)) : X("", !0),
          S.value.length === e.limit ? (f(), y("small", Ei, "Tag limit reached")) : X("", !0)
        ])
      ]),
      e.name ? (f(!0), y(se, { key: 0 }, fe(S.value, (Q, be) => (f(), y("input", {
        key: be,
        type: "hidden",
        name: e.name,
        value: Q
      }, null, 8, Li))), 128)) : X("", !0)
    ], 42, Ci));
  }
}), Ni = P({
  props: {
    ...Kl,
    noResize: { type: [Boolean, String], default: !1 },
    rows: { type: [String, Number], required: !1, default: 2 },
    wrap: { type: String, default: "soft" }
  },
  emits: ["update:modelValue", "change", "blur", "input"],
  setup(e, { emit: t }) {
    const { input: a, computedId: l, computedAriaInvalid: n, onInput: r, onChange: d, onBlur: c, focus: v, blur: m } = Xl(e, t), C = u(o(e, "noResize")), p = i(() => ({
      "form-control": !e.plaintext,
      "form-control-plaintext": e.plaintext,
      [`form-control-${e.size}`]: !!e.size,
      "is-valid": e.state === !0,
      "is-invalid": e.state === !1
    })), g = i(
      () => C.value ? { resize: "none" } : void 0
    );
    return {
      input: a,
      computedId: l,
      computedAriaInvalid: n,
      onInput: r,
      onChange: d,
      onBlur: c,
      focus: v,
      blur: m,
      computedClasses: p,
      computedStyles: g
    };
  }
}), Di = ["id", "name", "form", "disabled", "placeholder", "required", "autocomplete", "readonly", "aria-required", "aria-invalid", "rows", "wrap"];
function Hi(e, t, a, l, n, r) {
  return f(), y("textarea", Y({
    id: e.computedId,
    ref: "input",
    class: e.computedClasses,
    name: e.name || void 0,
    form: e.form || void 0,
    disabled: e.disabled,
    placeholder: e.placeholder,
    required: e.required,
    autocomplete: e.autocomplete || void 0,
    readonly: e.readonly || e.plaintext,
    "aria-required": e.required ? "true" : void 0,
    "aria-invalid": e.computedAriaInvalid,
    rows: e.rows,
    style: e.computedStyles,
    wrap: e.wrap || void 0
  }, e.$attrs, {
    onInput: t[0] || (t[0] = (d) => e.onInput(d)),
    onChange: t[1] || (t[1] = (d) => e.onChange(d)),
    onBlur: t[2] || (t[2] = (d) => e.onBlur(d))
  }), null, 16, Di);
}
const Mi = /* @__PURE__ */ Te(Ni, [["render", Hi]]), Ri = {
  key: 0,
  class: "input-group-text"
}, ji = ["innerHTML"], qi = { key: 1 }, Gi = {
  key: 0,
  class: "input-group-text"
}, Ui = ["innerHTML"], Wi = { key: 1 }, Ki = /* @__PURE__ */ P({
  __name: "BInputGroup",
  props: {
    append: null,
    appendHtml: null,
    id: null,
    prepend: null,
    prependHtml: null,
    size: null,
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = i(() => ({
      "input-group-sm": t.size === "sm",
      "input-group-lg": t.size === "lg"
    })), l = i(() => !!t.append || !!t.appendHtml), n = i(() => !!t.prepend || !!t.prependHtml);
    return (r, d) => (f(), z(ee(e.tag), {
      id: e.id,
      class: L(["input-group", s(a)]),
      role: "group"
    }, {
      default: D(() => [
        k(r.$slots, "prepend", {}, () => [
          s(n) ? (f(), y("span", Ri, [
            e.prependHtml ? (f(), y("span", {
              key: 0,
              innerHTML: e.prependHtml
            }, null, 8, ji)) : (f(), y("span", qi, W(e.prepend), 1))
          ])) : X("", !0)
        ]),
        k(r.$slots, "default"),
        k(r.$slots, "append", {}, () => [
          s(l) ? (f(), y("span", Gi, [
            e.appendHtml ? (f(), y("span", {
              key: 0,
              innerHTML: e.appendHtml
            }, null, 8, Ui)) : (f(), y("span", Wi, W(e.append), 1))
          ])) : X("", !0)
        ])
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), gn = /* @__PURE__ */ P({
  __name: "BInputGroupText",
  props: {
    tag: { default: "div" },
    text: null
  },
  setup(e) {
    return (t, a) => (f(), z(ee(e.tag), { class: "input-group-text" }, {
      default: D(() => [
        k(t.$slots, "default", {}, () => [
          te(W(e.text), 1)
        ])
      ]),
      _: 3
    }));
  }
}), va = /* @__PURE__ */ P({
  __name: "BInputGroupAddon",
  props: {
    isText: { default: !1 }
  },
  setup(e) {
    const a = u(o(e, "isText"));
    return (l, n) => s(a) ? (f(), z(gn, { key: 0 }, {
      default: D(() => [
        k(l.$slots, "default")
      ]),
      _: 3
    })) : k(l.$slots, "default", { key: 1 });
  }
}), Xi = /* @__PURE__ */ P({
  __name: "BInputGroupAppend",
  props: {
    isText: { default: !1 }
  },
  setup(e) {
    return (t, a) => (f(), z(va, { "is-text": e.isText }, {
      default: D(() => [
        k(t.$slots, "default")
      ]),
      _: 3
    }, 8, ["is-text"]));
  }
}), Ji = /* @__PURE__ */ P({
  __name: "BInputGroupPrepend",
  props: {
    isText: { default: !1 }
  },
  setup(e) {
    return (t, a) => (f(), z(va, { "is-text": e.isText }, {
      default: D(() => [
        k(t.$slots, "default")
      ]),
      _: 3
    }, 8, ["is-text"]));
  }
}), Qi = /* @__PURE__ */ P({
  __name: "BListGroup",
  props: {
    flush: { default: !1 },
    horizontal: { type: [Boolean, String], default: !1 },
    numbered: { default: !1 },
    tag: { default: "div" }
  },
  setup(e) {
    const t = e, a = u(o(t, "flush")), l = u(o(t, "numbered")), n = i(() => {
      const d = a.value ? !1 : t.horizontal;
      return {
        "list-group-flush": a.value,
        "list-group-horizontal": d === !0,
        [`list-group-horizontal-${d}`]: typeof d == "string",
        "list-group-numbered": l.value
      };
    }), r = i(() => l.value === !0 ? "ol" : t.tag);
    return at(Vl, {
      numbered: l.value
    }), (d, c) => (f(), z(ee(s(r)), {
      class: L(["list-group", s(n)])
    }, {
      default: D(() => [
        k(d.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), Yi = /* @__PURE__ */ P({
  __name: "BListGroupItem",
  props: {
    action: { default: !1 },
    active: { default: !1 },
    button: { default: !1 },
    disabled: { default: !1 },
    href: null,
    tag: { default: "div" },
    target: { default: "_self" },
    to: null,
    variant: null
  },
  setup(e) {
    const t = e, a = rl(), l = He(Vl), n = u(o(t, "action")), r = u(o(t, "active")), d = u(o(t, "button")), c = u(o(t, "disabled")), v = i(() => !d.value && (!!t.href || !!t.to)), m = i(
      () => l != null && l.numbered ? "li" : d.value ? "button" : v.value ? Ve : t.tag
    ), C = i(
      () => n.value || v.value || d.value || ["a", "router-link", "button", "b-link"].includes(t.tag)
    ), p = i(() => ({
      [`list-group-item-${t.variant}`]: t.variant !== void 0,
      "list-group-item-action": C.value,
      active: r.value,
      disabled: c.value
    })), g = i(() => {
      const A = {};
      return d.value && ((!a || !a.type) && (A.type = "button"), c.value && (A.disabled = !0)), A;
    });
    return (A, w) => (f(), z(ee(s(m)), Y({
      class: ["list-group-item", s(p)],
      "aria-current": s(r) ? !0 : void 0,
      "aria-disabled": s(c) ? !0 : void 0,
      target: s(v) ? e.target : void 0,
      href: s(d) ? void 0 : e.href,
      to: s(d) ? void 0 : e.to
    }, s(g)), {
      default: D(() => [
        k(A.$slots, "default")
      ]),
      _: 3
    }, 16, ["class", "aria-current", "aria-disabled", "target", "href", "to"]));
  }
}), Zi = ["id", "aria-labelledby", "aria-describedby"], eu = ["id"], tu = {
  inheritAttrs: !1
}, au = /* @__PURE__ */ P({
  ...tu,
  __name: "BModal",
  props: {
    bodyBgVariant: null,
    bodyClass: null,
    bodyTextVariant: null,
    busy: { default: !1 },
    lazy: { default: !1 },
    buttonSize: { default: "md" },
    cancelDisabled: { default: !1 },
    cancelTitle: { default: "Cancel" },
    cancelVariant: { default: "secondary" },
    centered: { default: !1 },
    contentClass: null,
    dialogClass: null,
    footerBgVariant: null,
    footerBorderVariant: null,
    footerClass: null,
    footerTextVariant: null,
    fullscreen: { type: [Boolean, String], default: !1 },
    headerBgVariant: null,
    headerBorderVariant: null,
    headerClass: null,
    headerCloseLabel: { default: "Close" },
    headerCloseWhite: { default: !1 },
    headerTextVariant: null,
    hideBackdrop: { default: !1 },
    hideFooter: { default: !1 },
    hideHeader: { default: !1 },
    hideHeaderClose: { default: !1 },
    id: null,
    modalClass: null,
    modelValue: { default: !1 },
    noCloseOnBackdrop: { default: !1 },
    noCloseOnEsc: { default: !1 },
    noFade: { default: !1 },
    noFocus: { default: !1 },
    okDisabled: { default: !1 },
    okOnly: { default: !1 },
    okTitle: { default: "Ok" },
    okVariant: { default: "primary" },
    scrollable: { default: !1 },
    show: { default: !1 },
    size: null,
    title: null,
    titleClass: null,
    titleSrOnly: { default: !1 },
    titleTag: { default: "h5" },
    static: { default: !1 }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden", "hide-prevented", "show-prevented", "ok", "cancel", "close"],
  setup(e, { emit: t }) {
    const a = e, l = Se(), n = $e(o(a, "id"), "modal"), r = u(o(a, "busy")), d = u(o(a, "lazy")), c = u(o(a, "cancelDisabled")), v = u(o(a, "centered")), m = u(o(a, "hideBackdrop")), C = u(o(a, "hideFooter")), p = u(o(a, "hideHeader")), g = u(o(a, "hideHeaderClose")), A = u(o(a, "modelValue")), w = u(o(a, "noCloseOnBackdrop")), B = u(o(a, "noCloseOnEsc")), S = u(o(a, "noFade")), h = u(o(a, "noFocus")), $ = u(o(a, "okDisabled")), F = u(o(a, "okOnly")), I = u(o(a, "scrollable")), V = u(o(a, "titleSrOnly")), _ = u(o(a, "static")), O = U(!1), b = U(null), x = U(!1), H = i(() => [
      a.modalClass,
      {
        fade: !S.value,
        show: O.value
      }
    ]), j = i(
      () => d.value === !1 || d.value === !0 && x.value === !0 || d.value === !0 && A.value === !0
    ), q = i(() => !we(l["header-close"])), K = i(() => [
      a.dialogClass,
      {
        "modal-fullscreen": a.fullscreen === !0,
        [`modal-fullscreen-${a.fullscreen}-down`]: typeof a.fullscreen == "string",
        [`modal-${a.size}`]: a.size !== void 0,
        "modal-dialog-centered": v.value,
        "modal-dialog-scrollable": I.value
      }
    ]), oe = i(() => [
      a.bodyClass,
      {
        [`bg-${a.bodyBgVariant}`]: a.bodyBgVariant !== void 0,
        [`text-${a.bodyTextVariant}`]: a.bodyTextVariant !== void 0
      }
    ]), Z = i(() => [
      a.headerClass,
      {
        [`bg-${a.headerBgVariant}`]: a.headerBgVariant !== void 0,
        [`border-${a.headerBorderVariant}`]: a.headerBorderVariant !== void 0,
        [`text-${a.headerTextVariant}`]: a.headerTextVariant !== void 0
      }
    ]), ge = i(() => [
      a.footerClass,
      {
        [`bg-${a.footerBgVariant}`]: a.footerBgVariant !== void 0,
        [`border-${a.footerBorderVariant}`]: a.footerBorderVariant !== void 0,
        [`text-${a.footerTextVariant}`]: a.footerTextVariant !== void 0
      }
    ]), ae = i(() => [
      a.titleClass,
      {
        ["visually-hidden"]: V.value
      }
    ]), pe = i(() => c.value || r.value), ye = i(() => $.value || r.value), he = (ne, ie = {}) => new oa(ne, {
      cancelable: !1,
      target: b.value || null,
      relatedTarget: null,
      trigger: null,
      ...ie,
      componentId: n.value
    }), re = (ne = "") => {
      const ie = he("hide", { cancelable: ne !== "", trigger: ne });
      if (ne === "ok" && t(ne, ie), ne === "cancel" && t(ne, ie), ne === "close" && t(ne, ie), t("hide", ie), ie.defaultPrevented || ne === "backdrop" && w.value || ne === "esc" && B.value) {
        t("update:modelValue", !0), t("hide-prevented");
        return;
      }
      t("update:modelValue", !1);
    }, E = () => {
      const ne = he("show", { cancelable: !0 });
      if (t("show", ne), ne.defaultPrevented) {
        t("update:modelValue", !1), t("show-prevented");
        return;
      }
      t("update:modelValue", !0);
    }, N = () => E(), J = () => {
      O.value = !0, t("shown", he("shown")), d.value === !0 && (x.value = !0);
    }, Q = () => O.value = !1, be = () => {
      t("hidden", he("hidden")), d.value === !0 && (x.value = !1);
    };
    return ue(
      A,
      (ne) => {
        ne === !0 && !h.value && b.value !== null && b.value.focus();
      },
      { flush: "post" }
    ), (ne, ie) => (f(), z(il, {
      to: "body",
      disabled: s(_)
    }, [
      ce(lt, {
        "no-fade": !0,
        "trans-props": { enterToClass: "show" },
        onBeforeEnter: N,
        onAfterEnter: J,
        onLeave: Q,
        onAfterLeave: be
      }, {
        default: D(() => [
          Ge(R("div", Y({
            id: s(n),
            ref_key: "element",
            ref: b,
            class: ["modal", s(H)],
            role: "dialog",
            "aria-labelledby": `${s(n)}-label`,
            "aria-describedby": `${s(n)}-body`,
            tabindex: "-1"
          }, ne.$attrs, {
            onKeyup: ie[5] || (ie[5] = yt((Ae) => re("esc"), ["esc"]))
          }), [
            R("div", {
              class: L(["modal-dialog", s(K)])
            }, [
              s(j) ? (f(), y("div", {
                key: 0,
                class: L(["modal-content", e.contentClass])
              }, [
                s(p) ? X("", !0) : (f(), y("div", {
                  key: 0,
                  class: L(["modal-header", s(Z)])
                }, [
                  k(ne.$slots, "header", {}, () => [
                    (f(), z(ee(e.titleTag), {
                      id: `${s(n)}-label`,
                      class: L(["modal-title", s(ae)])
                    }, {
                      default: D(() => [
                        k(ne.$slots, "title", {}, () => [
                          te(W(e.title), 1)
                        ], !0)
                      ]),
                      _: 3
                    }, 8, ["id", "class"])),
                    s(g) ? X("", !0) : (f(), y(se, { key: 0 }, [
                      s(q) ? (f(), y("button", {
                        key: 0,
                        type: "button",
                        onClick: ie[0] || (ie[0] = (Ae) => re("close"))
                      }, [
                        k(ne.$slots, "header-close", {}, void 0, !0)
                      ])) : (f(), z(nt, {
                        key: 1,
                        "aria-label": e.headerCloseLabel,
                        white: e.headerCloseWhite,
                        onClick: ie[1] || (ie[1] = (Ae) => re("close"))
                      }, null, 8, ["aria-label", "white"]))
                    ], 64))
                  ], !0)
                ], 2)),
                R("div", {
                  id: `${s(n)}-body`,
                  class: L(["modal-body", s(oe)])
                }, [
                  k(ne.$slots, "default", {}, void 0, !0)
                ], 10, eu),
                s(C) ? X("", !0) : (f(), y("div", {
                  key: 1,
                  class: L(["modal-footer", s(ge)])
                }, [
                  k(ne.$slots, "footer", {}, () => [
                    k(ne.$slots, "cancel", {}, () => [
                      s(F) ? X("", !0) : (f(), z(et, {
                        key: 0,
                        type: "button",
                        class: "btn",
                        disabled: s(pe),
                        size: e.buttonSize,
                        variant: e.cancelVariant,
                        onClick: ie[2] || (ie[2] = (Ae) => re("cancel"))
                      }, {
                        default: D(() => [
                          te(W(e.cancelTitle), 1)
                        ]),
                        _: 1
                      }, 8, ["disabled", "size", "variant"]))
                    ], !0),
                    k(ne.$slots, "ok", {}, () => [
                      ce(et, {
                        type: "button",
                        class: "btn",
                        disabled: s(ye),
                        size: e.buttonSize,
                        variant: e.okVariant,
                        onClick: ie[3] || (ie[3] = (Ae) => re("ok"))
                      }, {
                        default: D(() => [
                          te(W(e.okTitle), 1)
                        ]),
                        _: 1
                      }, 8, ["disabled", "size", "variant"])
                    ], !0)
                  ], !0)
                ], 2))
              ], 2)) : X("", !0)
            ], 2),
            s(m) ? X("", !0) : k(ne.$slots, "backdrop", { key: 0 }, () => [
              R("div", {
                class: "modal-backdrop fade show",
                onClick: ie[4] || (ie[4] = (Ae) => re("backdrop"))
              })
            ], !0)
          ], 16, Zi), [
            [na, s(A)]
          ])
        ]),
        _: 3
      })
    ], 8, ["disabled"]));
  }
});
const lu = /* @__PURE__ */ Te(au, [["__scopeId", "data-v-8331ea82"]]), nu = /* @__PURE__ */ P({
  __name: "BNav",
  props: {
    align: null,
    cardHeader: { default: !1 },
    fill: { default: !1 },
    justified: { default: !1 },
    pills: { default: !1 },
    small: { default: !1 },
    tabs: { default: !1 },
    tag: { default: "ul" },
    vertical: { default: !1 }
  },
  setup(e) {
    const t = e, a = u(o(t, "cardHeader")), l = u(o(t, "fill")), n = u(o(t, "justified")), r = u(o(t, "pills")), d = u(o(t, "small")), c = u(o(t, "tabs")), v = u(o(t, "vertical")), m = dt(o(t, "align")), C = i(() => ({
      "nav-tabs": c.value,
      "nav-pills": r.value && !c.value,
      "card-header-tabs": !v.value && a.value && c.value,
      "card-header-pills": !v.value && a.value && r.value && !c.value,
      "flex-column": v.value,
      "nav-fill": !v.value && l.value,
      "nav-justified": !v.value && n.value,
      [m.value]: !v.value && t.align !== void 0,
      small: d.value
    }));
    return (p, g) => (f(), z(ee(e.tag), {
      class: L(["nav", s(C)])
    }, {
      default: D(() => [
        k(p.$slots, "default")
      ]),
      _: 3
    }, 8, ["class"]));
  }
}), ou = /* @__PURE__ */ P({
  __name: "BNavForm",
  props: {
    role: null,
    id: null,
    floating: { default: !1 },
    novalidate: { default: !1 },
    validated: { default: !1 }
  },
  emits: ["submit"],
  setup(e, { emit: t }) {
    const a = e, l = i(() => ({
      floating: a.floating,
      role: a.role,
      id: a.id,
      novalidate: a.novalidate,
      validated: a.validated
    })), n = (r) => t("submit", r);
    return (r, d) => (f(), z(cn, Y(s(l), {
      class: "d-flex",
      onSubmit: Xe(n, ["prevent"])
    }), {
      default: D(() => [
        k(r.$slots, "default")
      ]),
      _: 3
    }, 16, ["onSubmit"]));
  }
}), su = P({
  components: { BLink: Ve },
  props: {
    ...Ot(Je, ["event", "routerTag"])
  },
  setup(e) {
    return { disabledBoolean: u(o(e, "disabled")) };
  }
}), ru = { class: "nav-item" };
function iu(e, t, a, l, n, r) {
  const d = sl("b-link");
  return f(), y("li", ru, [
    ce(d, Y({ class: "nav-link" }, e.$props, {
      "active-class": "active",
      tabindex: e.disabledBoolean ? -1 : void 0,
      "aria-disabled": e.disabledBoolean ? !0 : void 0
    }), {
      default: D(() => [
        k(e.$slots, "default")
      ]),
      _: 3
    }, 16, ["tabindex", "aria-disabled"])
  ]);
}
const uu = /* @__PURE__ */ Te(su, [["render", iu]]), du = { class: "nav-item dropdown" }, cu = /* @__PURE__ */ P({
  __name: "BNavItemDropdown",
  props: {
    id: null,
    text: null,
    toggleClass: null,
    size: null,
    offset: null,
    autoClose: { type: [Boolean, String], default: !0 },
    dark: { type: Boolean, default: !1 },
    dropleft: { type: Boolean, default: !1 },
    dropright: { type: Boolean, default: !1 },
    dropup: { type: Boolean, default: !1 },
    right: { type: Boolean, default: !1 },
    left: { type: [Boolean, String], default: !1 },
    split: { type: Boolean, default: !1 },
    splitVariant: null,
    noCaret: { type: Boolean, default: !1 },
    variant: { default: "link" }
  },
  setup(e) {
    const t = e;
    return (a, l) => (f(), y("li", du, [
      ce(dn, Y(t, { "is-nav": "" }), ul({ _: 2 }, [
        fe(a.$slots, (n, r, d) => ({
          name: r,
          fn: D((c) => [
            k(a.$slots, r, Be(_e(c || {})))
          ])
        }))
      ]), 1040)
    ]));
  }
}), fu = { class: "navbar-text" }, vu = /* @__PURE__ */ P({
  __name: "BNavText",
  props: {
    text: null
  },
  setup(e) {
    return (t, a) => (f(), y("li", fu, [
      k(t.$slots, "default", {}, () => [
        te(W(e.text), 1)
      ])
    ]));
  }
}), mu = /* @__PURE__ */ P({
  __name: "BNavbar",
  props: {
    fixed: null,
    print: { default: !1 },
    sticky: null,
    tag: { default: "nav" },
    toggleable: { type: [Boolean, String], default: !1 },
    dark: { default: !1 },
    variant: null,
    container: { type: [String, Boolean], default: "fluid" }
  },
  setup(e) {
    const t = e, a = u(o(t, "print")), l = u(o(t, "dark")), n = i(
      () => t.tag === "nav" ? void 0 : "navigation"
    ), r = i(
      () => typeof t.toggleable == "string" ? `navbar-expand-${t.toggleable}` : t.toggleable === !1 ? "navbar-expand" : void 0
    ), d = i(
      () => t.container === !0 ? "container" : "container-fluid"
    ), c = i(() => ({
      "d-print": a.value,
      [`sticky-${t.sticky}`]: t.sticky !== void 0,
      "navbar-dark": l.value,
      [`bg-${t.variant}`]: t.variant !== void 0,
      [`fixed-${t.fixed}`]: t.fixed !== void 0,
      [`${r.value}`]: r.value !== void 0
    }));
    return (v, m) => (f(), z(ee(e.tag), {
      class: L(["navbar", s(c)]),
      role: s(n)
    }, {
      default: D(() => [
        e.container !== !1 ? (f(), y("div", {
          key: 0,
          class: L(s(d))
        }, [
          k(v.$slots, "default")
        ], 2)) : k(v.$slots, "default", { key: 1 })
      ]),
      _: 3
    }, 8, ["class", "role"]));
  }
}), ja = Ot(Je, ["event", "routerTag"]), pu = P({
  components: {
    BLink: Ve
  },
  props: {
    tag: { type: String, default: "div" },
    ...ja
  },
  setup(e) {
    const t = i(() => it(e)), a = i(
      () => t.value ? Ve : e.tag
    );
    return {
      computedLinkProps: i(
        () => t.value ? ia(e, ja) : {}
      ),
      computedTag: a
    };
  }
});
function bu(e, t, a, l, n, r) {
  return f(), z(ee(e.computedTag), Y({ class: "navbar-brand" }, e.computedLinkProps), {
    default: D(() => [
      k(e.$slots, "default")
    ]),
    _: 3
  }, 16);
}
const gu = /* @__PURE__ */ Te(pu, [["render", bu]]), hu = /* @__PURE__ */ P({
  __name: "BNavbarNav",
  props: {
    align: null,
    fill: { default: !1 },
    justified: { default: !1 },
    small: { default: !1 },
    tag: { default: "ul" }
  },
  setup(e) {
    const t = e, a = u(o(t, "fill")), l = u(o(t, "justified")), n = u(o(t, "small")), r = dt(o(t, "align")), d = i(() => ({
      "nav-fill": a.value,
      "nav-justified": l.value,
      [r.value]: t.align !== void 0,
      small: n.value
    }));
    return (c, v) => (f(), y("ul", {
      class: L(["navbar-nav", s(d)])
    }, [
      k(c.$slots, "default")
    ], 2));
  }
}), yu = /* @__PURE__ */ R("span", { class: "navbar-toggler-icon" }, null, -1), Bu = /* @__PURE__ */ P({
  __name: "BNavbarToggle",
  props: {
    disabled: { default: !1 },
    label: { default: "Toggle navigation" },
    target: null
  },
  emits: ["click"],
  setup(e, { emit: t }) {
    const a = e, l = u(o(a, "disabled")), n = i(() => ({
      disabled: l.value,
      "aria-label": a.label
    })), r = i(() => ({
      disabled: l.value
    })), d = (c) => {
      l.value || t("click", c);
    };
    return (c, v) => Ge((f(), y("button", Y({
      class: ["navbar-toggler", s(r)],
      type: "button"
    }, s(n), { onClick: d }), [
      k(c.$slots, "default", {}, () => [
        yu
      ])
    ], 16)), [
      [s(da), s(l) ? void 0 : e.target]
    ]);
  }
}), hn = /* @__PURE__ */ P({
  __name: "BOverlay",
  props: {
    bgColor: null,
    blur: { default: "2px" },
    fixed: { default: !1 },
    noCenter: { default: !1 },
    noFade: { default: !1 },
    noWrap: { default: !1 },
    opacity: { default: 0.85 },
    overlayTag: { default: "div" },
    rounded: { type: [Boolean, String], default: !1 },
    show: { default: !1 },
    spinnerSmall: { default: !1 },
    spinnerType: { default: "border" },
    spinnerVariant: null,
    noSpinner: { default: !1 },
    variant: { default: "light" },
    wrapTag: { default: "div" },
    zIndex: { default: 10 }
  },
  emits: ["click", "hidden", "shown"],
  setup(e, { emit: t }) {
    const a = e, l = { top: 0, left: 0, bottom: 0, right: 0 }, n = u(o(a, "fixed")), r = u(o(a, "noSpinner")), d = u(o(a, "noCenter")), c = u(o(a, "noWrap")), v = u(o(a, "show")), m = u(o(a, "spinnerSmall")), C = i(
      () => a.rounded === !0 || a.rounded === "" ? "rounded" : a.rounded === !1 ? "" : `rounded-${a.rounded}`
    ), p = i(
      () => a.variant && !a.bgColor ? `bg-${a.variant}` : ""
    ), g = i(() => v.value ? "true" : null), A = i(() => ({
      type: a.spinnerType || void 0,
      variant: a.spinnerVariant || void 0,
      small: m.value
    })), w = i(() => ({
      ...l,
      zIndex: a.zIndex || 10
    })), B = i(() => [
      "b-overlay",
      {
        "position-absolute": !c.value || !n.value,
        "position-fixed": c.value && n.value
      }
    ]), S = i(() => [p.value, C.value]), h = i(() => ({
      ...l,
      opacity: a.opacity,
      backgroundColor: a.bgColor || void 0,
      backdropFilter: blur ? `blur(${blur})` : void 0
    })), $ = i(
      () => d.value ? l : {
        top: "50%",
        left: "50%",
        transform: "translateX(-50%) translateY(-50%)"
      }
    );
    return (F, I) => (f(), z(ee(e.wrapTag), {
      class: "b-overlay-wrap position-relative",
      "aria-busy": s(g)
    }, {
      default: D(() => [
        k(F.$slots, "default"),
        ce(lt, {
          "no-fade": e.noFade,
          "trans-props": { enterToClass: "show" },
          name: "fade",
          onOnAfterEnter: I[1] || (I[1] = (V) => t("shown")),
          onOnAfterLeave: I[2] || (I[2] = (V) => t("hidden"))
        }, {
          default: D(() => [
            s(v) ? (f(), z(ee(e.overlayTag), {
              key: 0,
              class: L(s(B)),
              style: Fe(s(w)),
              onClick: I[0] || (I[0] = (V) => t("click", V))
            }, {
              default: D(() => [
                R("div", {
                  class: L(["position-absolute", s(S)]),
                  style: Fe(s(h))
                }, null, 6),
                R("div", {
                  class: "position-absolute",
                  style: Fe(s($))
                }, [
                  k(F.$slots, "overlay", Be(_e(s(A))), () => [
                    s(r) ? X("", !0) : (f(), z(Pt, Be(Y({ key: 0 }, s(A))), null, 16))
                  ])
                ], 4)
              ]),
              _: 3
            }, 8, ["class", "style"])) : X("", !0)
          ]),
          _: 3
        }, 8, ["no-fade"])
      ]),
      _: 3
    }, 8, ["aria-busy"]));
  }
}), $u = {
  key: 0,
  class: "offcanvas-header"
}, ku = {
  id: "offcanvasLabel",
  class: "offcanvas-title"
}, Su = { class: "offcanvas-body" }, Cu = { key: 1 }, wu = /* @__PURE__ */ P({
  __name: "BOffcanvas",
  props: {
    dismissLabel: { default: "Close" },
    modelValue: { default: !1 },
    bodyScrolling: { default: !1 },
    backdrop: { default: !0 },
    noCloseOnBackdrop: { default: !1 },
    noCloseOnEsc: { default: !1 },
    placement: { default: "start" },
    title: null,
    noHeaderClose: { default: !1 },
    noHeader: { default: !1 },
    lazy: { default: !1 },
    id: null,
    noFocus: { default: !1 },
    static: { default: !1 },
    backdropVariant: { default: "dark" }
  },
  emits: ["update:modelValue", "show", "shown", "hide", "hidden", "hide-prevented", "show-prevented", "esc", "close"],
  setup(e, { emit: t }) {
    const a = e, l = Se(), n = u(o(a, "modelValue"));
    u(o(a, "bodyScrolling"));
    const r = u(o(a, "backdrop")), d = u(o(a, "noHeaderClose")), c = u(o(a, "noHeader")), v = u(o(a, "noFocus")), m = u(o(a, "noCloseOnBackdrop")), C = u(o(a, "noCloseOnEsc")), p = u(o(a, "lazy")), g = u(o(a, "static")), A = $e(o(a, "id"), "offcanvas"), w = U(!1), B = U(null), S = U(!1), h = i(
      () => r.value === !0 && n.value === !0
    ), $ = i(
      () => p.value === !1 || p.value === !0 && S.value === !0 || p.value === !0 && n.value === !0
    ), F = i(() => !we(l.footer)), I = i(() => [
      "offcanvas",
      `offcanvas-${a.placement}`,
      {
        show: n.value && w.value === !0
      }
    ]), V = (q, K = {}) => new oa(q, {
      cancelable: !1,
      target: B.value || null,
      relatedTarget: null,
      trigger: null,
      ...K,
      componentId: A.value
    }), _ = (q = "") => {
      const K = V("hide", { cancelable: q !== "", trigger: q });
      if (q === "close" && t(q, K), q === "esc" && t(q, K), t("hide", K), K.defaultPrevented || q === "backdrop" && m.value || q === "esc" && C.value) {
        t("update:modelValue", !0), t("hide-prevented");
        return;
      }
      t("update:modelValue", !1);
    }, O = () => {
      const q = V("show", { cancelable: !0 });
      if (t("show", q), q.defaultPrevented) {
        t("update:modelValue", !1), t("show-prevented");
        return;
      }
      t("update:modelValue", !0);
    }, b = () => O(), x = () => {
      w.value = !0, t("shown", V("shown")), p.value === !0 && (S.value = !0);
    }, H = () => w.value = !1, j = () => {
      t("hidden", V("hidden")), p.value === !0 && (S.value = !1);
    };
    return ke(() => {
      n.value === !0 && (w.value = !0);
    }), ue(
      n,
      (q) => {
        q === !0 && !v.value && B.value !== null && B.value.focus();
      },
      { flush: "post" }
    ), (q, K) => (f(), z(il, {
      to: "body",
      disabled: s(g)
    }, [
      ce(lt, {
        "no-fade": !0,
        "trans-props": {
          enterToClass: "showing",
          enterFromClass: "",
          leaveToClass: "hiding show",
          leaveFromClass: "show"
        },
        onBeforeEnter: b,
        onAfterEnter: x,
        onLeave: H,
        onAfterLeave: j
      }, {
        default: D(() => [
          Ge(R("div", {
            ref_key: "element",
            ref: B,
            "aria-modal": "true",
            role: "dialog",
            class: L(s(I)),
            tabindex: "-1",
            "aria-labelledby": "offcanvasLabel",
            "data-bs-backdrop": "false",
            onKeyup: K[1] || (K[1] = yt((oe) => _("esc"), ["esc"]))
          }, [
            s($) ? (f(), y(se, { key: 0 }, [
              s(c) ? X("", !0) : (f(), y("div", $u, [
                k(q.$slots, "header", Be(_e({ visible: s(n), placement: e.placement, hide: _ })), () => [
                  R("h5", ku, [
                    k(q.$slots, "title", {}, () => [
                      te(W(e.title), 1)
                    ])
                  ]),
                  s(d) ? X("", !0) : (f(), z(nt, {
                    key: 0,
                    class: "text-reset",
                    "aria-label": e.dismissLabel,
                    onClick: K[0] || (K[0] = (oe) => _("close"))
                  }, null, 8, ["aria-label"]))
                ])
              ])),
              R("div", Su, [
                k(q.$slots, "default")
              ]),
              s(F) ? (f(), y("div", Cu, [
                k(q.$slots, "footer", Be(_e({ visible: s(n), placement: e.placement, hide: _ })))
              ])) : X("", !0)
            ], 64)) : X("", !0)
          ], 34), [
            [na, e.modelValue]
          ])
        ]),
        _: 3
      }),
      ce(hn, {
        variant: e.backdropVariant,
        show: s(h),
        fixed: !0,
        "no-wrap": "",
        "no-spinner": !0,
        onClick: K[2] || (K[2] = (oe) => _("backdrop"))
      }, null, 8, ["variant", "show"])
    ], 8, ["disabled"]));
  }
}), _u = 5, yn = 20, Bn = 0, Ee = 3, Tu = "ellipsis-text", Vu = "first-text", Au = "last-text", Ou = "next-text", xu = "page", Pu = "prev-text", qa = (e) => Math.max(je(e) || yn, 1), Ga = (e) => Math.max(je(e) || Bn, 0), Iu = (e, t) => {
  const a = je(e) || 1;
  return a > t ? t : a < 1 ? 1 : a;
}, Fu = P({
  name: "BPagination",
  props: {
    align: { type: String, default: "start" },
    ariaControls: { type: String, required: !1 },
    ariaLabel: { type: String, default: "Pagination" },
    disabled: { type: [Boolean, String], default: !1 },
    ellipsisClass: { type: [Array, String], default: () => [] },
    ellipsisText: { type: String, default: "\u2026" },
    firstClass: { type: [Array, String], default: () => [] },
    firstNumber: { type: [Boolean, String], default: !1 },
    firstText: { type: String, default: "\xAB" },
    hideEllipsis: { type: [Boolean, String], default: !1 },
    hideGotoEndButtons: { type: [Boolean, String], default: !1 },
    labelFirstPage: { type: String, default: "Go to first page" },
    labelLastPage: { type: String, default: "Go to last page" },
    labelNextPage: { type: String, default: "Go to next page" },
    labelPage: { type: String, default: "Go to page" },
    labelPrevPage: { type: String, default: "Go to previous page" },
    lastClass: { type: [Array, String], default: () => [] },
    lastNumber: { type: [Boolean, String], default: !1 },
    lastText: { type: String, default: "\xBB" },
    limit: { type: Number, default: _u },
    modelValue: { type: Number, default: 1 },
    nextClass: { type: [Array, String], default: () => [] },
    nextText: { type: String, default: "\u203A" },
    pageClass: { type: [Array, String], default: () => [] },
    perPage: { type: Number, default: yn },
    pills: { type: [Boolean, String], default: !1 },
    prevClass: { type: [Array, String], default: () => [] },
    prevText: { type: String, default: "\u2039" },
    size: { type: String, required: !1 },
    totalRows: { type: Number, default: Bn }
  },
  emits: ["update:modelValue", "page-click"],
  setup(e, { emit: t, slots: a }) {
    const l = u(o(e, "disabled")), n = u(o(e, "firstNumber")), r = u(o(e, "hideEllipsis")), d = u(o(e, "hideGotoEndButtons")), c = u(o(e, "lastNumber")), v = u(o(e, "pills")), m = i(
      () => e.align === "fill" ? "start" : e.align
    ), C = dt(o(m, "value")), p = i(
      () => Math.ceil(Ga(e.totalRows) / qa(e.perPage))
    ), g = i(() => {
      let V;
      return p.value - e.modelValue + 2 < e.limit && e.limit > Ee ? V = p.value - w.value + 1 : V = e.modelValue - Math.floor(w.value / 2), V < 1 ? V = 1 : V > p.value - w.value && (V = p.value - w.value + 1), e.limit <= Ee && c.value && p.value === V + w.value - 1 && (V = Math.max(V - 1, 1)), V;
    }), A = i(() => {
      const V = p.value - e.modelValue;
      let _ = !1;
      return V + 2 < e.limit && e.limit > Ee ? e.limit > Ee && (_ = !0) : e.limit > Ee && (_ = !!(!r.value || n.value)), g.value <= 1 && (_ = !1), _ && n.value && g.value < 4 && (_ = !1), _;
    }), w = i(() => {
      let V = e.limit;
      return p.value <= e.limit ? V = p.value : e.modelValue < e.limit - 1 && e.limit > Ee ? ((!r.value || c.value) && (V = e.limit - (n.value ? 0 : 1)), V = Math.min(V, e.limit)) : p.value - e.modelValue + 2 < e.limit && e.limit > Ee ? (!r.value || n.value) && (V = e.limit - (c.value ? 0 : 1)) : e.limit > Ee && (V = e.limit - (r.value ? 0 : 2)), V;
    }), B = i(() => {
      const V = p.value - w.value;
      let _ = !1;
      e.modelValue < e.limit - 1 && e.limit > Ee ? (!r.value || c.value) && (_ = !0) : e.limit > Ee && (_ = !!(!r.value || c.value)), g.value > V && (_ = !1);
      const O = g.value + w.value - 1;
      return _ && c.value && O > p.value - 3 && (_ = !1), _;
    }), S = Ne({
      pageSize: qa(e.perPage),
      totalRows: Ga(e.totalRows),
      numberOfPages: p.value
    }), h = (V, _) => {
      if (_ === e.modelValue)
        return;
      const { target: O } = V, b = new De("page-click", {
        cancelable: !0,
        target: O
      });
      t("page-click", b, _), !b.defaultPrevented && t("update:modelValue", _);
    }, $ = i(() => e.size ? `pagination-${e.size}` : ""), F = i(() => v.value ? "b-pagination-pills" : "");
    ue(
      () => e.modelValue,
      (V) => {
        const _ = Iu(V, p.value);
        _ !== e.modelValue && t("update:modelValue", _);
      }
    ), ue(S, (V, _) => {
      V != null && (_.pageSize !== V.pageSize && _.totalRows === V.totalRows || _.numberOfPages !== V.numberOfPages && e.modelValue > _.numberOfPages) && t("update:modelValue", 1);
    });
    const I = i(() => {
      const V = [];
      for (let _ = 0; _ < w.value; _++)
        V.push({ number: g.value + _, classes: null });
      return V;
    });
    return () => {
      const V = [], _ = I.value.map((Z) => Z.number), O = (Z) => Z === e.modelValue, b = e.modelValue < 1, x = e.align === "fill", H = (Z, ge, ae, pe, ye, he) => {
        const re = l.value || O(he) || b || Z < 1 || Z > p.value, E = Z < 1 ? 1 : Z > p.value ? p.value : Z, N = { disabled: re, page: E, index: E - 1 }, J = Pe(ae, N, a) || pe || "";
        return le(
          "li",
          {
            class: [
              "page-item",
              {
                disabled: re,
                "flex-fill": x,
                "d-flex": x && !re
              },
              ye
            ]
          },
          le(
            re ? "span" : "button",
            {
              class: ["page-link", { "flex-grow-1": !re && x }],
              "aria-label": ge,
              "aria-controls": e.ariaControls || null,
              "aria-disabled": re ? "true" : null,
              role: "menuitem",
              type: re ? null : "button",
              tabindex: re ? null : "-1",
              onClick: (Q) => {
                re || h(Q, E);
              }
            },
            J
          )
        );
      }, j = (Z) => le(
        "li",
        {
          class: [
            "page-item",
            "disabled",
            "bv-d-xs-down-none",
            x ? "flex-fill" : "",
            e.ellipsisClass
          ],
          role: "separator",
          key: `ellipsis-${Z ? "last" : "first"}`
        },
        [
          le(
            "span",
            { class: ["page-link"] },
            Pe(Tu, {}, a) || e.ellipsisText || "..."
          )
        ]
      ), q = (Z, ge) => {
        const ae = O(Z.number) && !b, pe = l.value ? null : ae || b && ge === 0 ? "0" : "-1", ye = {
          active: ae,
          disabled: l.value,
          page: Z.number,
          index: Z.number - 1,
          content: Z.number
        }, he = Pe(xu, ye, a) || Z.number, re = le(
          l.value ? "span" : "button",
          {
            class: ["page-link", { "flex-grow-1": !l.value && x }],
            "aria-controls": e.ariaControls || null,
            "aria-disabled": l.value ? "true" : null,
            "aria-label": e.labelPage ? `${e.labelPage} ${Z.number}` : null,
            role: "menuitemradio",
            type: l.value ? null : "button",
            tabindex: pe,
            onClick: (E) => {
              l.value || h(E, Z.number);
            }
          },
          he
        );
        return le(
          "li",
          {
            class: [
              "page-item",
              {
                disabled: l.value,
                active: ae,
                "flex-fill": x,
                "d-flex": x && !l.value
              },
              e.pageClass
            ],
            role: "presentation",
            key: `page-${Z.number}`
          },
          re
        );
      };
      if (!d.value && !n.value) {
        const Z = H(
          1,
          e.labelFirstPage,
          Vu,
          e.firstText,
          e.firstClass,
          1
        );
        V.push(Z);
      }
      const K = H(
        e.modelValue - 1,
        e.labelFirstPage,
        Pu,
        e.prevText,
        e.prevClass,
        1
      );
      V.push(K), n.value && _[0] !== 1 && V.push(q({ number: 1 }, 0)), A.value && V.push(j(!1)), I.value.forEach((Z, ge) => {
        const ae = A.value && n.value && _[0] !== 1 ? 1 : 0;
        V.push(q(Z, ge + ae));
      }), B.value && V.push(j(!0)), c.value && _[_.length - 1] !== p.value && V.push(q({ number: p.value }, -1));
      const oe = H(
        e.modelValue + 1,
        e.labelNextPage,
        Ou,
        e.nextText,
        e.nextClass,
        p.value
      );
      if (V.push(oe), !c.value && !d.value) {
        const Z = H(
          p.value,
          e.labelLastPage,
          Au,
          e.lastText,
          e.lastClass,
          p.value
        );
        V.push(Z);
      }
      return le(
        "ul",
        {
          class: ["pagination", $.value, C.value, F.value],
          role: "menubar",
          "aria-disabled": l.value,
          "aria-label": e.ariaLabel || null
        },
        V
      );
    };
  }
}), xe = /* @__PURE__ */ P({
  __name: "BPlaceholder",
  props: {
    tag: { default: "span" },
    width: null,
    cols: null,
    variant: null,
    size: null,
    animation: null
  },
  setup(e) {
    const t = e, a = i(
      () => t.width === void 0 ? void 0 : typeof t.width == "number" ? t.width.toString() : t.width.includes("%") ? t.width.replaceAll("%", "") : t.width
    ), l = i(
      () => t.cols === void 0 ? void 0 : typeof t.cols == "number" ? t.cols.toString() : t.cols
    ), n = i(() => ({
      [`col-${l.value}`]: l.value !== void 0 && a.value === void 0,
      [`bg-${t.variant}`]: t.variant !== void 0,
      [`placeholder-${t.size}`]: t.size !== void 0,
      [`placeholder-${t.animation}`]: t.animation !== void 0
    })), r = i(
      () => a.value === void 0 ? void 0 : `width: ${a.value}%;`
    );
    return (d, c) => (f(), z(ee(e.tag), {
      class: L(["placeholder", s(n)]),
      style: Fe(s(r))
    }, null, 8, ["class", "style"]));
  }
}), $n = /* @__PURE__ */ P({
  __name: "BPlaceholderButton",
  props: {
    tag: { default: "div" },
    width: null,
    cols: null,
    variant: { default: "primary" },
    animation: null
  },
  setup(e) {
    const t = e, a = i(() => ["btn", `btn-${t.variant}`, "disabled"]), l = i(() => ({
      animation: t.animation,
      width: t.width,
      cols: t.cols,
      tag: t.tag
    }));
    return (n, r) => (f(), z(xe, Y({ class: s(a) }, s(l)), null, 16, ["class"]));
  }
}), Eu = /* @__PURE__ */ P({
  __name: "BPlaceholderCard",
  props: {
    noHeader: { default: !1 },
    headerWidth: { default: 100 },
    headerVariant: null,
    headerAnimation: null,
    headerSize: null,
    noFooter: { default: !1 },
    footerWidth: { default: 100 },
    footerVariant: null,
    footerAnimation: null,
    footerSize: null,
    animation: null,
    size: null,
    variant: null,
    noButton: { default: !1 },
    imgBottom: { default: !1 },
    imgSrc: null,
    imgBlankColor: { default: "#868e96" },
    imgHeight: { default: 100 },
    noImg: { default: !1 }
  },
  setup(e) {
    const t = e, a = u(o(t, "noButton")), l = u(o(t, "noHeader")), n = u(o(t, "noFooter")), r = u(o(t, "noImg")), d = i(() => ({
      width: t.headerWidth,
      variant: t.headerVariant,
      animation: t.headerAnimation,
      size: t.headerSize
    })), c = i(() => ({
      width: t.footerWidth,
      animation: t.footerAnimation,
      size: a.value ? t.footerSize : void 0,
      variant: t.footerVariant
    })), v = i(() => ({
      blank: !t.imgSrc,
      blankColor: t.imgBlankColor,
      height: t.imgSrc ? void 0 : t.imgHeight,
      src: t.imgSrc,
      top: !t.imgBottom,
      bottom: t.imgBottom
    }));
    return (m, C) => (f(), z(on, { "img-bottom": e.imgBottom }, ul({
      default: D(() => [
        k(m.$slots, "default", {}, () => [
          ce(xe, { cols: "7" }),
          ce(xe, { cols: "4" }),
          ce(xe, { cols: "4" }),
          ce(xe, { cols: "6" }),
          ce(xe, { cols: "8" })
        ])
      ]),
      _: 2
    }, [
      s(r) ? void 0 : {
        name: "img",
        fn: D(() => [
          k(m.$slots, "img", {}, () => [
            ce(_t, Be(_e(s(v))), null, 16)
          ])
        ]),
        key: "0"
      },
      s(l) ? void 0 : {
        name: "header",
        fn: D(() => [
          k(m.$slots, "header", {}, () => [
            ce(xe, Be(_e(s(d))), null, 16)
          ])
        ]),
        key: "1"
      },
      s(n) ? void 0 : {
        name: "footer",
        fn: D(() => [
          k(m.$slots, "footer", {}, () => [
            s(a) ? (f(), z(xe, Be(Y({ key: 1 }, s(c))), null, 16)) : (f(), z($n, Be(Y({ key: 0 }, s(c))), null, 16))
          ])
        ]),
        key: "2"
      }
    ]), 1032, ["img-bottom"]));
  }
}), It = /* @__PURE__ */ P({
  __name: "BTableSimple",
  props: {
    bordered: { default: !1 },
    borderless: { default: !1 },
    borderVariant: null,
    captionTop: { default: !1 },
    dark: { default: !1 },
    hover: { default: !1 },
    responsive: { type: [Boolean, String], default: !1 },
    stacked: { type: [Boolean, String], default: !1 },
    striped: { default: !1 },
    small: { default: !1 },
    tableClass: null,
    tableVariant: null,
    stickyHeader: { default: !1 }
  },
  setup(e) {
    const t = e, a = u(o(t, "captionTop")), l = u(o(t, "borderless")), n = u(o(t, "bordered")), r = u(o(t, "dark")), d = u(o(t, "hover")), c = u(o(t, "small")), v = u(o(t, "striped")), m = u(o(t, "stickyHeader")), C = i(() => [
      "table",
      "b-table",
      {
        "table-bordered": n.value,
        "table-borderless": l.value,
        [`border-${t.borderVariant}`]: t.borderVariant !== void 0,
        "caption-top": a.value,
        "table-dark": r.value,
        "table-hover": d.value,
        "b-table-stacked": typeof t.stacked == "boolean" && t.stacked,
        [`b-table-stacked-${t.stacked}`]: typeof t.stacked == "string",
        "table-striped": v.value,
        "table-sm": c.value,
        [`table-${t.tableVariant}`]: t.tableVariant !== void 0
      },
      t.tableClass
    ]), p = i(() => [
      {
        "table-responsive": t.responsive === !0,
        [`table-responsive-${t.responsive}`]: typeof t.responsive == "string",
        "b-table-sticky-header": m.value
      }
    ]);
    return (g, A) => e.responsive ? (f(), y("div", {
      key: 1,
      class: L(s(p))
    }, [
      R("table", {
        role: "table",
        class: L(s(C))
      }, [
        k(g.$slots, "default")
      ], 2)
    ], 2)) : (f(), y("table", {
      key: 0,
      role: "table",
      class: L(s(C))
    }, [
      k(g.$slots, "default")
    ], 2));
  }
}), Lu = /* @__PURE__ */ P({
  __name: "BPlaceholderTable",
  props: {
    rows: { default: 3 },
    columns: { default: 5 },
    cellWidth: { default: 100 },
    size: null,
    animation: null,
    variant: null,
    headerColumns: null,
    hideHeader: { default: !1 },
    headerCellWidth: { default: 100 },
    headerSize: null,
    headerAnimation: null,
    headerVariant: null,
    footerColumns: null,
    showFooter: { default: !1 },
    footerCellWidth: { default: 100 },
    footerSize: null,
    footerAnimation: null,
    footerVariant: null
  },
  setup(e) {
    const t = e, a = i(
      () => typeof t.columns == "string" ? ot(t.columns, 5) : t.columns
    ), l = i(
      () => typeof t.rows == "string" ? ot(t.rows, 3) : t.rows
    ), n = i(
      () => t.headerColumns === void 0 ? a.value : typeof t.headerColumns == "string" ? ot(t.headerColumns, a.value) : t.headerColumns
    ), r = i(
      () => t.footerColumns === void 0 ? a.value : typeof t.footerColumns == "string" ? ot(t.footerColumns, a.value) : t.footerColumns
    ), d = i(() => ({
      size: t.size,
      variant: t.variant,
      animation: t.animation,
      width: t.cellWidth
    })), c = i(() => ({
      size: t.headerSize,
      variant: t.headerVariant,
      animation: t.headerAnimation,
      width: t.headerCellWidth
    })), v = i(() => ({
      size: t.footerSize,
      variant: t.footerVariant,
      animation: t.footerAnimation,
      width: t.footerCellWidth
    })), m = u(o(t, "hideHeader")), C = u(o(t, "showFooter"));
    return (p, g) => (f(), z(It, null, {
      default: D(() => [
        s(m) ? X("", !0) : k(p.$slots, "thead", { key: 0 }, () => [
          R("thead", null, [
            R("tr", null, [
              (f(!0), y(se, null, fe(s(n), (A, w) => (f(), y("th", { key: w }, [
                ce(xe, Be(_e(s(c))), null, 16)
              ]))), 128))
            ])
          ])
        ]),
        k(p.$slots, "default", {}, () => [
          R("tbody", null, [
            (f(!0), y(se, null, fe(s(l), (A, w) => (f(), y("tr", { key: w }, [
              (f(!0), y(se, null, fe(s(a), (B, S) => (f(), y("td", { key: S }, [
                ce(xe, Be(_e(s(d))), null, 16)
              ]))), 128))
            ]))), 128))
          ])
        ]),
        s(C) ? k(p.$slots, "tfoot", { key: 1 }, () => [
          R("tfoot", null, [
            R("tr", null, [
              (f(!0), y(se, null, fe(s(r), (A, w) => (f(), y("th", { key: w }, [
                ce(xe, Be(_e(s(v))), null, 16)
              ]))), 128))
            ])
          ])
        ]) : X("", !0)
      ]),
      _: 3
    }));
  }
}), zu = /* @__PURE__ */ P({
  __name: "BPlaceholderWrapper",
  props: {
    loading: { default: !1 }
  },
  setup(e) {
    const a = u(o(e, "loading"));
    return (l, n) => s(a) ? k(l.$slots, "loading", { key: 0 }) : k(l.$slots, "default", { key: 1 });
  }
}), Nu = P({
  props: {
    container: {
      type: [String, Object],
      default: "body"
    },
    content: { type: String },
    id: { type: String },
    customClass: { type: String, default: "" },
    noninteractive: { type: [Boolean, String], default: !1 },
    placement: { type: String, default: "right" },
    target: {
      type: [String, Object],
      default: void 0
    },
    title: { type: String },
    delay: { type: [Number, Object], default: 0 },
    triggers: { type: String, default: "click" },
    show: { type: [Boolean, String], default: !1 },
    variant: { type: String, default: void 0 },
    html: { type: [Boolean, String], default: !0 },
    sanitize: { type: [Boolean, String], default: !1 },
    offset: { type: String, default: "0" }
  },
  emits: ["show", "shown", "hide", "hidden", "inserted"],
  setup(e, { emit: t, slots: a }) {
    u(o(e, "noninteractive"));
    const l = u(o(e, "show")), n = u(o(e, "html")), r = u(o(e, "sanitize")), d = U(), c = U(), v = U(), m = U(), C = U(), p = i(() => ({
      [`b-popover-${e.variant}`]: e.variant !== void 0
    })), g = ($) => {
      if (typeof $ == "string")
        return $;
      if ($ instanceof HTMLElement)
        return $;
      if (typeof $ < "u")
        return $.$el;
    }, A = ($) => {
      if (!!$) {
        if (typeof $ == "string") {
          const F = document.getElementById($);
          return F || void 0;
        }
        return $;
      }
    }, w = [
      { event: "show.bs.popover", handler: () => t("show") },
      { event: "shown.bs.popover", handler: () => t("shown") },
      { event: "hide.bs.popover", handler: () => t("hide") },
      { event: "hidden.bs.popover", handler: () => t("hidden") },
      { event: "inserted.bs.popover", handler: () => t("inserted") }
    ], B = ($) => {
      for (const F of w)
        $.addEventListener(F.event, F.handler);
    }, S = ($) => {
      for (const F of w)
        $.removeEventListener(F.event, F.handler);
    }, h = ($) => {
      c.value = A(g($)), c.value && (B(c.value), v.value = new Mt(c.value, {
        customClass: e.customClass,
        container: g(e.container),
        trigger: e.triggers,
        placement: e.placement,
        title: e.title || a.title ? m.value : "",
        content: C.value,
        html: n.value,
        delay: e.delay,
        sanitize: r.value,
        offset: e.offset
      }));
    };
    return ue(
      () => e.target,
      ($) => {
        var F;
        (F = v.value) == null || F.dispose(), c.value instanceof HTMLElement && S(c.value), h($);
      }
    ), ue(l, ($, F) => {
      var I, V;
      $ !== F && ($ ? (I = v.value) == null || I.show() : (V = v.value) == null || V.hide());
    }), ke(() => {
      var $, F, I;
      Ie(() => {
        h(e.target);
      }), (F = ($ = d.value) == null ? void 0 : $.parentNode) == null || F.removeChild(d.value), l.value && ((I = v.value) == null || I.show());
    }), aa(() => {
      var $;
      ($ = v.value) == null || $.dispose(), c.value instanceof HTMLElement && S(c.value);
    }), {
      element: d,
      titleRef: m,
      contentRef: C,
      computedClasses: p
    };
  }
}), Du = ["id"], Hu = { ref: "titleRef" }, Mu = { ref: "contentRef" };
function Ru(e, t, a, l, n, r) {
  return f(), y("div", {
    id: e.id,
    ref: "element",
    class: L(["popover b-popover", e.computedClasses]),
    role: "tooltip",
    tabindex: "-1"
  }, [
    R("div", Hu, [
      k(e.$slots, "title", {}, () => [
        te(W(e.title), 1)
      ])
    ], 512),
    R("div", Mu, [
      k(e.$slots, "default", {}, () => [
        te(W(e.content), 1)
      ])
    ], 512)
  ], 10, Du);
}
const ju = /* @__PURE__ */ Te(Nu, [["render", Ru]]), qu = ["aria-valuenow", "aria-valuemax"], kn = /* @__PURE__ */ P({
  __name: "BProgressBar",
  props: {
    animated: { default: !1 },
    label: null,
    labelHtml: null,
    max: null,
    precision: { default: 0 },
    showProgress: { default: !1 },
    showValue: { default: !1 },
    striped: { default: !1 },
    value: { default: 0 },
    variant: null
  },
  setup(e) {
    const t = e, a = He(Tl), l = u(o(t, "animated")), n = u(o(t, "showProgress")), r = u(o(t, "showValue")), d = u(o(t, "striped")), c = i(() => ({
      "progress-bar-animated": l.value || (a == null ? void 0 : a.animated),
      "progress-bar-striped": d.value || (a == null ? void 0 : a.striped) || l.value || (a == null ? void 0 : a.animated),
      [`bg-${t.variant}`]: t.variant !== void 0
    })), v = i(
      () => typeof t.precision == "number" ? t.precision : Number.parseFloat(t.precision)
    ), m = i(
      () => typeof t.value == "number" ? t.value : Number.parseFloat(t.value)
    ), C = i(
      () => typeof t.max == "number" ? t.max : t.max === void 0 ? void 0 : Number.parseFloat(t.max)
    ), p = i(
      () => t.labelHtml !== void 0 ? t.labelHtml : r.value || (a == null ? void 0 : a.showValue) ? m.value.toFixed(v.value) : n.value || (a == null ? void 0 : a.showProgress) ? (m.value * 100 / (C.value || 100)).toFixed(v.value) : t.label !== void 0 ? t.label : ""
    ), g = i(
      () => a != null && a.max ? `${m.value * 100 / (typeof a.max == "number" ? a.max : Number.parseInt(a.max))}%` : t.max ? `${m.value * 100 / (typeof t.max == "number" ? t.max : Number.parseInt(t.max))}%` : typeof t.value == "string" ? t.value : `${t.value}%`
    );
    return (A, w) => (f(), y("div", {
      class: L(["progress-bar", s(c)]),
      role: "progressbar",
      "aria-valuenow": e.value,
      "aria-valuemin": "0",
      "aria-valuemax": e.max,
      style: Fe({ width: s(g) })
    }, [
      k(A.$slots, "default", {}, () => [
        te(W(s(p)), 1)
      ])
    ], 14, qu));
  }
}), Gu = /* @__PURE__ */ P({
  __name: "BProgress",
  props: {
    variant: null,
    max: null,
    height: null,
    animated: { default: !1 },
    precision: { default: 0 },
    showProgress: { default: !1 },
    showValue: { default: !1 },
    striped: { default: !1 },
    value: { default: 0 }
  },
  setup(e) {
    const t = e, a = u(o(t, "animated")), l = u(o(t, "showProgress")), n = u(o(t, "showValue")), r = u(o(t, "striped")), d = i(() => ({
      animated: t.animated,
      max: t.max,
      precision: t.precision,
      showProgress: t.showProgress,
      showValue: t.showValue,
      striped: t.striped,
      value: t.value,
      variant: t.variant
    }));
    return at(Tl, {
      animated: a.value,
      max: t.max,
      showProgress: l.value,
      showValue: n.value,
      striped: r.value
    }), (c, v) => (f(), y("div", {
      class: "progress",
      style: Fe({ height: e.height })
    }, [
      k(c.$slots, "default", {}, () => [
        ce(kn, Be(_e(s(d))), null, 16)
      ])
    ], 4));
  }
}), Ua = At("cols", [""], { type: [String, Number], default: null }), Uu = P({
  name: "BRow",
  props: {
    tag: { type: String, default: "div" },
    gutterX: { type: String, default: null },
    gutterY: { type: String, default: null },
    noGutters: { type: [Boolean, String], default: !1 },
    alignV: { type: String, default: null },
    alignH: { type: String, default: null },
    alignContent: { type: String, default: null },
    ...Ua
  },
  setup(e) {
    const t = u(o(e, "noGutters")), a = dt(o(e, "alignH")), l = i(() => Sl(e, Ua, "cols", "row-cols"));
    return {
      computedClasses: i(() => [
        l.value,
        {
          [`gx-${e.gutterX}`]: e.gutterX !== null,
          [`gy-${e.gutterY}`]: e.gutterY !== null,
          "g-0": t.value,
          [`align-items-${e.alignV}`]: e.alignV !== null,
          [a.value]: e.alignH !== null,
          [`align-content-${e.alignContent}`]: e.alignContent !== null
        }
      ])
    };
  }
});
function Wu(e, t, a, l, n, r) {
  return f(), z(ee(e.tag), {
    class: L(["row", e.computedClasses])
  }, {
    default: D(() => [
      k(e.$slots, "default")
    ]),
    _: 3
  }, 8, ["class"]);
}
const Ku = /* @__PURE__ */ Te(Uu, [["render", Wu]]), ht = /* @__PURE__ */ P({
  __name: "BSkeleton",
  props: {
    height: null,
    width: null,
    size: null,
    animation: { default: "wave" },
    type: { default: "text" },
    variant: null
  },
  setup(e) {
    const t = e, a = i(() => [
      `b-skeleton-${t.type}`,
      {
        [`b-skeleton-animate-${t.animation}`]: typeof t.animation == "boolean" ? !1 : t.animation,
        [`bg-${t.variant}`]: t.variant !== void 0
      }
    ]), l = i(() => ({
      width: t.size || t.width,
      height: t.size || t.height
    }));
    return (n, r) => (f(), y("div", {
      class: L(["b-skeleton", s(a)]),
      style: Fe(s(l))
    }, null, 6));
  }
}), Xu = /* @__PURE__ */ P({
  __name: "BSkeletonIcon",
  props: {
    animation: { default: "wave" }
  },
  setup(e) {
    const t = e, a = i(() => [`b-skeleton-animate-${t.animation}`]);
    return (l, n) => (f(), y("div", {
      class: L(["b-skeleton-icon-wrapper position-relative d-inline-block overflow-hidden", s(a)])
    }, [
      k(l.$slots, "default")
    ], 2));
  }
}), Ju = { key: 0 }, Qu = { key: 1 }, Yu = /* @__PURE__ */ P({
  __name: "BSkeletonTable",
  props: {
    animation: { default: "wave" },
    columns: { default: 5 },
    hideHeader: { default: !1 },
    rows: { default: 3 },
    showFooter: { default: !1 },
    tableProps: null
  },
  setup(e) {
    const t = e, a = u(o(t, "hideHeader")), l = u(o(t, "showFooter"));
    return (n, r) => (f(), z(It, Be(_e(e.tableProps)), {
      default: D(() => [
        s(a) ? X("", !0) : (f(), y("thead", Ju, [
          R("tr", null, [
            (f(!0), y(se, null, fe(e.columns, (d, c) => (f(), y("th", { key: c }, [
              ce(ht)
            ]))), 128))
          ])
        ])),
        R("tbody", null, [
          (f(!0), y(se, null, fe(e.rows, (d, c) => (f(), y("tr", { key: c }, [
            (f(!0), y(se, null, fe(e.columns, (v, m) => (f(), y("td", { key: m }, [
              ce(ht, { width: "75%" })
            ]))), 128))
          ]))), 128))
        ]),
        s(l) ? (f(), y("tfoot", Qu, [
          R("tr", null, [
            (f(!0), y(se, null, fe(e.columns, (d, c) => (f(), y("th", { key: c }, [
              ce(ht)
            ]))), 128))
          ])
        ])) : X("", !0)
      ]),
      _: 1
    }, 16));
  }
}), Zu = /* @__PURE__ */ P({
  __name: "BSkeletonWrapper",
  props: {
    loading: { default: !1 }
  },
  setup(e) {
    const a = u(o(e, "loading"));
    return (l, n) => s(a) ? k(l.$slots, "loading", { key: 0 }) : k(l.$slots, "default", { key: 1 });
  }
}), Wa = [
  "ar",
  "az",
  "ckb",
  "fa",
  "he",
  "ks",
  "lrc",
  "mzn",
  "ps",
  "sd",
  "te",
  "ug",
  "ur",
  "yi"
].map((e) => e.toLowerCase()), ed = (e) => {
  const t = Bt(e).toLowerCase().replace(Gn, "").split("-"), a = t.slice(0, 2).join("-"), l = t[0];
  return Wa.includes(a) || Wa.includes(l);
}, td = (e) => Qn ? Rt(e) ? e : { capture: !!e || !1 } : !!(Rt(e) ? e.capture : e), ad = (e, t, a, l) => {
  e && e.addEventListener && e.addEventListener(t, a, td(l));
}, ld = (e, t, a, l) => {
  e && e.removeEventListener && e.removeEventListener(t, a, l);
}, Ka = (e, t) => {
  (e ? ad : ld)(...t);
}, vt = (e, { preventDefault: t = !0, propagation: a = !0, immediatePropagation: l = !1 } = {}) => {
  t && e.preventDefault(), a && e.stopPropagation(), l && e.stopImmediatePropagation();
}, ea = "ArrowDown", Sn = "End", Cn = "Home", wn = "PageDown", _n = "PageUp", ta = "ArrowUp", Xa = 1, Ja = 100, Qa = 1, Ya = 500, Za = 100, el = 10, tl = 4, al = [ta, ea, Cn, Sn, _n, wn], nd = P({
  props: {
    ariaControls: { type: String, required: !1 },
    ariaLabel: { type: String, required: !1 },
    labelIncrement: { type: String, default: "Increment" },
    labelDecrement: { type: String, default: "Decrement" },
    modelValue: { type: Number, default: null },
    name: { type: String, default: "BFormSpinbutton" },
    disabled: { type: [Boolean, String], default: !1 },
    placeholder: { type: String, required: !1 },
    locale: { type: String, default: "locale" },
    form: { type: String, required: !1 },
    inline: { type: Boolean, default: !1 },
    size: { type: String, required: !1 },
    formatterFn: {
      type: Function
    },
    readonly: { type: Boolean, default: !1 },
    vertical: { type: Boolean, default: !1 },
    repeatDelay: {
      type: [String, Number],
      default: Ya
    },
    repeatInterval: {
      type: [String, Number],
      default: Za
    },
    repeatStepMultiplier: {
      type: [String, Number],
      default: tl
    },
    repeatThreshold: {
      type: [String, Number],
      default: el
    },
    required: { type: [Boolean, String], default: !1 },
    step: { type: [String, Number], default: Qa },
    min: { type: [String, Number], default: Xa },
    max: { type: [String, Number], default: Ja },
    wrap: { type: Boolean, default: !1 },
    state: { type: [Boolean, String], default: null }
  },
  emits: ["update:modelValue", "change"],
  setup(e, { emit: t }) {
    const a = U(!1), l = i(() => 1), n = () => {
      t("change", d.value);
    }, r = U(null), d = i({
      get() {
        return ze(e.modelValue) ? r.value : e.modelValue;
      },
      set(E) {
        ze(e.modelValue) ? r.value = E : t("update:modelValue", E);
      }
    });
    let c, v, m = !1;
    const C = i(() => rt(e.step, Qa)), p = i(() => rt(e.min, Xa)), g = i(() => {
      const E = rt(e.max, Ja), N = C.value, J = p.value;
      return Math.floor((E - J) / N) * N + J;
    }), A = i(() => {
      const E = je(e.repeatDelay, 0);
      return E > 0 ? E : Ya;
    }), w = i(() => {
      const E = je(e.repeatInterval, 0);
      return E > 0 ? E : Za;
    }), B = i(
      () => Math.max(je(e.repeatThreshold, el), 1)
    ), S = i(
      () => Math.max(je(e.repeatStepMultiplier, tl), 1)
    ), h = i(() => {
      const E = C.value;
      return Math.floor(E) === E ? 0 : (E.toString().split(".")[1] || "").length;
    }), $ = i(() => Math.pow(10, h.value || 0)), F = i(() => {
      const { value: E } = d;
      return E === null ? "" : E.toFixed(h.value);
    }), I = i(() => {
      const E = [e.locale];
      return new Intl.NumberFormat(E).resolvedOptions().locale;
    }), V = i(
      () => ed(I.value)
    ), _ = () => {
      const E = h.value;
      return new Intl.NumberFormat(I.value, {
        style: "decimal",
        useGrouping: !1,
        minimumIntegerDigits: 1,
        minimumFractionDigits: E,
        maximumFractionDigits: E,
        notation: "standard"
      }).format;
    }, O = i(
      () => e.formatterFn ? e.formatterFn : _()
    ), b = i(() => ({
      role: "group",
      lang: I.value,
      tabindex: e.disabled ? null : "-1",
      title: e.ariaLabel
    })), x = i(() => !ze(e.modelValue) || !ze(r.value)), H = i(() => ({
      dir: V.value,
      spinId: l.value,
      tabindex: e.disabled ? null : "0",
      role: "spinbutton",
      "aria-live": "off",
      "aria-label": e.ariaLabel || null,
      "aria-controls": e.ariaControls || null,
      "aria-invalid": e.state === !1 || !x.value && e.required ? "true" : null,
      "aria-required": e.required ? "true" : null,
      "aria-valuemin": p.value,
      "aria-valuemax": g.value,
      "aria-valuenow": ze(d.value) ? null : d.value,
      "aria-valuetext": ze(d.value) ? null : O.value(d.value)
    })), j = (E) => {
      let { value: N } = d;
      if (!e.disabled && !ze(N)) {
        const J = C.value * E, Q = p.value, be = g.value, ne = $.value, { wrap: ie } = e;
        N = Math.round((N - Q) / J) * J + Q + J, N = Math.round(N * ne) / ne, d.value = N > be ? ie ? Q : be : N < Q ? ie ? be : Q : N;
      }
    }, q = (E = 1) => {
      ze(d.value) ? d.value = p.value : j(1 * E);
    }, K = (E = 1) => {
      ze(d.value) ? d.value = e.wrap ? g.value : p.value : j(-1 * E);
    }, oe = (E) => {
      const { code: N, altKey: J, ctrlKey: Q, metaKey: be } = E;
      if (!(e.disabled || e.readonly || J || Q || be) && al.includes(N)) {
        if (vt(E, { propagation: !1 }), m)
          return;
        he(), [ta, ea].includes(N) ? (m = !0, N === ta ? ge(E, q) : N === ea && ge(E, K)) : N === _n ? q(S.value) : N === wn ? K(S.value) : N === Cn ? d.value = p.value : N === Sn && (d.value = g.value);
      }
    }, Z = (E) => {
      const { code: N, altKey: J, ctrlKey: Q, metaKey: be } = E;
      e.disabled || e.readonly || J || Q || be || al.includes(N) && (vt(E, { propagation: !1 }), he(), m = !1, n());
    }, ge = (E, N) => {
      const { type: J } = E || {};
      if (!e.disabled && !e.readonly) {
        if (ae(E) && J === "mousedown" && E.button)
          return;
        he(), N(1);
        const Q = B.value, be = S.value, ne = A.value, ie = w.value;
        c = setTimeout(() => {
          let Ae = 0;
          v = setInterval(() => {
            N(Ae < Q ? 1 : be), Ae++;
          }, ie);
        }, ne);
      }
    };
    function ae(E) {
      return E.type === "mouseup" || E.type === "mousedown";
    }
    const pe = (E) => {
      ae(E) && E.type === "mouseup" && E.button || (vt(E, { propagation: !1 }), he(), ye(!1), n());
    }, ye = (E) => {
      try {
        Ka(E, [document.body, "mouseup", pe, !1]), Ka(E, [document.body, "touchend", pe, !1]);
      } catch {
        return 0;
      }
    }, he = () => {
      clearTimeout(c), clearInterval(v), c = void 0, v = void 0;
    }, re = (E, N, J, Q, be, ne, ie) => {
      const Ae = le(J, {
        props: { scale: a.value ? 1.5 : 1.25 },
        attrs: { "aria-hidden": "true" }
      }), Ft = { hasFocus: a.value }, ct = (Me) => {
        !e.disabled && !e.readonly && (vt(Me, { propagation: !1 }), ye(!0), ge(Me, E));
      };
      return le(
        "button",
        {
          class: [{ "py-0": !e.vertical }, "btn", "btn-sm", "border-0", "rounded-0"],
          tabindex: "-1",
          type: "button",
          disabled: e.disabled || e.readonly || ne,
          "aria-disabled": e.disabled || e.readonly || ne ? "true" : null,
          "aria-controls": l.value,
          "aria-label": N || null,
          "aria-keyshortcuts": be || null,
          onmousedown: ct,
          ontouchstart: ct
        },
        [Pe(ie, Ft) || Ae]
      );
    };
    return () => {
      const E = re(
        q,
        e.labelIncrement,
        le(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "16",
            height: "16",
            fill: "currentColor",
            class: "bi bi-plus",
            viewBox: "0 0 16 16"
          },
          le("path", {
            d: "M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"
          })
        ),
        "inc",
        "ArrowUp",
        !1,
        "increment"
      ), N = re(
        K,
        e.labelDecrement,
        le(
          "svg",
          {
            xmlns: "http://www.w3.org/2000/svg",
            width: "16",
            height: "16",
            fill: "currentColor",
            class: "bi bi-dash",
            viewBox: "0 0 16 16"
          },
          le("path", { d: "M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z" })
        ),
        "dec",
        "ArrowDown",
        !1,
        "decrement"
      ), J = [];
      e.name && !e.disabled && J.push(
        le("input", {
          type: "hidden",
          name: e.name,
          form: e.form || null,
          value: F.value,
          key: "hidden"
        })
      );
      const Q = le(
        "output",
        {
          class: [
            { "d-flex": e.vertical },
            { "align-self-center": !e.vertical },
            { "align-items-center": e.vertical },
            { "border-top": e.vertical },
            { "border-bottom": e.vertical },
            { "border-start": !e.vertical },
            { "border-end": !e.vertical },
            "flex-grow-1"
          ],
          ...H.value,
          key: "output"
        },
        [
          le(
            "bdi",
            x.value ? O.value(d.value) : e.placeholder || ""
          )
        ]
      );
      return le(
        "div",
        {
          class: [
            "b-form-spinbutton form-control",
            { disabled: e.disabled },
            { readonly: e.readonly },
            { focus: a },
            { "d-inline-flex": e.inline || e.vertical },
            { "d-flex": !e.inline && !e.vertical },
            { "align-items-stretch": !e.vertical },
            { "flex-column": e.vertical },
            e.size ? `form-control-${e.size}` : null
          ],
          ...b.value,
          onkeydown: oe,
          onkeyup: Z
        },
        e.vertical ? [E, J, Q, N] : [N, J, Q, E]
      );
    };
  }
}), od = ["TD", "TH", "TR"], sd = [
  "a",
  "a *",
  "button",
  "button *",
  "input:not(.disabled):not([disabled])",
  "select:not(.disabled):not([disabled])",
  "textarea:not(.disabled):not([disabled])",
  '[role="link"]',
  '[role="link"] *',
  '[role="button"]',
  '[role="button"] *',
  "[tabindex]:not(.disabled):not([disabled])"
].join(","), mt = (e) => {
  if (!e || !e.target)
    return !1;
  const t = e.target;
  if ("disabled" in t && t.disabled || od.indexOf(t.tagName) !== -1)
    return !1;
  if (ga(".dropdown-menu", t))
    return !0;
  const a = t.tagName === "LABEL" ? t : ga("label", t);
  if (a) {
    const l = ra(a, "for"), n = l ? so(l) : $l("input, select, textarea", a);
    if (n && !n.disabled)
      return !0;
  }
  return kl(t, sd);
}, rd = () => {
  const e = (m, C) => {
    const p = [];
    return !(m != null && m.length) && (C == null ? void 0 : C.length) ? (Object.keys(C[0]).forEach((g) => p.push({ key: g, label: ma(g) })), p) : (Array.isArray(m) && m.forEach((g) => {
      typeof g == "string" ? p.push({ key: g, label: ma(g) }) : Rt(g) && g.key && typeof g.key == "string" && p.push({ ...g });
    }), p);
  }, t = U([]), a = (m, C, p, g) => (t.value = $t(C), "isFilterableTable" in g && g.isFilterableTable.value === !0 && p.filter && (t.value = r(t.value, p.filter, p.filterable)), "isSortable" in g && g.isSortable.value === !0 && (t.value = n(
    m,
    t.value,
    {
      key: p.sortBy,
      desc: g.sortDescBoolean.value
    },
    p.sortCompare
  )), t.value), l = U(void 0), n = (m, C, p, g) => {
    if (!p || !p.key)
      return C;
    const A = p.key;
    return C.sort((w, B) => {
      if (g !== void 0)
        return g(w, B, p.key, p.desc);
      const S = (F) => typeof F == "object" ? JSON.stringify(F) : F;
      return S(w[A]) > S(B[A]) ? p.desc ? -1 : 1 : S(B[A]) > S(w[A]) ? p.desc ? 1 : -1 : 0;
    });
  }, r = (m, C, p) => m.filter(
    (g) => Object.entries(g).filter((A) => {
      const [w, B] = A;
      return !B || w[0] === "_" || p.length > 0 && !p.includes(w) ? !1 : (typeof B == "object" ? JSON.stringify(Object.values(B)) : typeof B == "string" ? B : B.toString()).toLowerCase().includes(C.toLowerCase());
    }).length > 0
  );
  return {
    normaliseFields: e,
    mapItems: a,
    internalItems: t,
    updateInternalItems: async (m) => {
      try {
        return t.value = await qt(m), t.value;
      } catch {
        return;
      }
    },
    filterEvent: l,
    notifyFilteredItems: () => {
      l.value && l.value(t.value);
    },
    formatItem: (m, C) => {
      const p = m[C.key];
      return C.formatter && typeof C.formatter == "function" ? C.formatter(p, C.key, m) : m[C.key];
    }
  };
}, id = ["title", "abbr", "onClick"], ud = { class: "d-inline-flex flex-nowrap align-items-center gap-1" }, dd = { key: 1 }, cd = ["onClick", "onDblclick", "onMouseenter", "onMouseleave"], fd = {
  key: 0,
  class: "b-table-stacked-label"
}, vd = ["colspan"], md = ["colspan"], pd = { class: "d-flex align-items-center justify-content-center gap-2" }, bd = /* @__PURE__ */ R("strong", null, "Loading...", -1), gd = {
  key: 1,
  class: "b-table-empty-slot"
}, hd = ["colspan"], yd = { key: 0 }, Bd = ["title", "abbr", "onClick"], $d = { key: 1 }, kd = { key: 2 }, Sd = { key: 3 }, Cd = /* @__PURE__ */ P({
  __name: "BTable",
  props: {
    align: null,
    caption: null,
    captionTop: { default: !1 },
    borderless: { default: !1 },
    bordered: { default: !1 },
    borderVariant: null,
    dark: { default: !1 },
    fields: { default: () => [] },
    footClone: { default: !1 },
    hover: { default: !1 },
    items: { default: () => [] },
    provider: null,
    sortCompare: null,
    noProvider: null,
    noProviderPaging: null,
    noProviderSorting: null,
    noProviderFiltering: null,
    responsive: { type: [Boolean, String], default: !1 },
    small: { default: !1 },
    striped: { default: !1 },
    stacked: { type: [Boolean, String], default: !1 },
    labelStacked: { type: Boolean, default: !1 },
    variant: null,
    sortBy: null,
    sortDesc: { default: !1 },
    sortInternal: { default: !0 },
    selectable: { default: !1 },
    stickySelect: { default: !1 },
    selectHead: { type: [Boolean, String], default: !0 },
    selectMode: { default: "single" },
    selectionVariant: { default: "primary" },
    stickyHeader: { default: !1 },
    busy: { default: !1 },
    showEmpty: { default: !1 },
    perPage: null,
    currentPage: { default: 1 },
    filter: null,
    filterable: null,
    emptyText: { default: "There are no records to show" },
    emptyFilteredText: { default: "There are no records matching your request" }
  },
  emits: ["headClicked", "rowClicked", "rowDblClicked", "rowHovered", "rowUnhovered", "rowSelected", "rowUnselected", "selection", "update:busy", "update:sortBy", "update:sortDesc", "sorted", "filtered"],
  setup(e, { expose: t, emit: a }) {
    const l = e, n = Se(), r = rd(), d = u(o(l, "footClone")), c = u(o(l, "sortDesc")), v = u(o(l, "sortInternal")), m = u(o(l, "selectable")), C = u(o(l, "stickySelect")), p = u(o(l, "labelStacked")), g = u(o(l, "busy")), A = u(o(l, "showEmpty")), w = u(o(l, "noProviderPaging")), B = u(o(l, "noProviderSorting")), S = u(o(l, "noProviderFiltering")), h = U(g.value);
    r.filterEvent.value = async (T) => {
      if (x.value) {
        await N();
        return;
      }
      const G = await qt(T);
      a("filtered", G);
    };
    const $ = U(/* @__PURE__ */ new Set([])), F = i(() => $.value.size > 0), I = i(() => ({
      [`align-${l.align}`]: l.align !== void 0,
      "b-table-selectable": m.value,
      [`b-table-select-${l.selectMode}`]: m.value,
      "b-table-selecting user-select-none": m.value && F.value,
      "b-table-busy": h.value,
      "b-table-sortable": j.value,
      "b-table-sort-desc": j.value && c.value === !0,
      "b-table-sort-asc": j.value && c.value === !1
    })), V = i(() => ({
      bordered: l.bordered,
      borderless: l.borderless,
      borderVariant: l.borderVariant,
      captionTop: l.captionTop,
      dark: l.dark,
      hover: l.hover,
      responsive: l.responsive,
      striped: l.striped,
      stacked: l.stacked,
      small: l.small,
      tableClass: I.value,
      tableVariant: l.variant,
      stickyHeader: l.stickyHeader
    })), _ = i(() => r.normaliseFields(l.fields, l.items)), O = i(
      () => _.value.length + (m.value ? 1 : 0)
    ), b = i(() => l.filter !== void 0 && l.filter !== ""), x = i(() => l.provider !== void 0), H = i(
      () => m.value && (!!l.selectHead || n.selectHead !== void 0)
    ), j = i(
      () => l.fields.filter((T) => typeof T == "string" ? !1 : T.sortable).length > 0
    ), q = i(() => j.value && v.value === !0), K = i(() => {
      const T = x.value ? r.internalItems.value : q.value ? r.mapItems(l.fields, l.items, l, {
        isSortable: j,
        isFilterableTable: b,
        sortDescBoolean: c
      }) : l.items;
      if (l.perPage !== void 0) {
        const G = (l.currentPage - 1) * l.perPage;
        return T.splice(G, l.perPage);
      }
      return T;
    }), oe = (T) => typeof T == "string" ? pa(T) : T.label !== void 0 ? T.label : typeof T.key == "string" ? pa(T.key) : T.key, Z = (T, G, de = !1) => {
      const M = typeof T == "string" ? T : T.key;
      a("headClicked", M, T, G, de), he(T);
    }, ge = (T, G, de) => {
      a("rowClicked", T, G, de), E(T, G, de.shiftKey);
    }, ae = (T, G, de) => a("rowDblClicked", T, G, de), pe = (T, G, de) => a("rowHovered", T, G, de), ye = (T, G, de) => a("rowUnhovered", T, G, de), he = (T) => {
      if (!j.value)
        return;
      const G = typeof T == "string" ? T : T.key, de = typeof T == "string" ? !1 : T.sortable;
      if (j.value === !0 && de === !0) {
        const M = !c.value;
        G !== l.sortBy && a("update:sortBy", G), a("update:sortDesc", M), a("sorted", G, M);
      }
    }, re = () => {
      !m.value || a("selection", Array.from($.value));
    }, E = (T, G, de = !1) => {
      if (!!m.value) {
        if ($.value.has(T))
          $.value.delete(T), a("rowUnselected", T);
        else if (l.selectMode === "single" && $.value.size > 0 && ($.value.forEach((M) => a("rowUnselected", M)), $.value.clear()), l.selectMode === "range" && $.value.size > 0 && de) {
          const M = Array.from($.value).pop(), Ce = K.value.findIndex((Ue) => Ue === M), ve = Math.min(Ce, G), Et = Math.max(Ce, G);
          K.value.slice(ve, Et + 1).forEach((Ue) => {
            $.value.has(Ue) || ($.value.add(Ue), a("rowSelected", Ue));
          });
        } else
          $.value.add(T), a("rowSelected", T);
        re();
      }
    }, N = async () => {
      if (!x.value || !l.provider || h.value)
        return;
      h.value = !0;
      const T = new Proxy(
        {
          currentPage: l.currentPage,
          filter: l.filter,
          sortBy: l.sortBy,
          sortDesc: l.sortDesc,
          perPage: l.perPage
        },
        {
          get(de, M) {
            return M in de ? de[M] : void 0;
          },
          set() {
            return console.error("BTable provider context is a read-only object."), !0;
          }
        }
      ), G = l.provider(T, r.updateInternalItems);
      if (G !== void 0) {
        if (G instanceof Promise)
          try {
            const de = await G;
            return Array.isArray(de) ? await r.updateInternalItems(de) : void 0;
          } finally {
            h.value && (h.value = !1);
          }
        try {
          return await r.updateInternalItems(G);
        } finally {
          h.value && (h.value = !1);
        }
      }
    }, J = (T) => {
      T._showDetails = !T._showDetails;
    }, Q = (T) => [
      T.class,
      T.thClass,
      T.variant ? `table-${T.variant}` : void 0,
      {
        "b-table-sortable-column": j.value && T.sortable,
        "b-table-sticky-column": T.stickyColumn
      }
    ], be = (T, G) => [
      T.class,
      T.tdClass,
      T.variant ? `table-${T.variant}` : void 0,
      (G == null ? void 0 : G._cellVariants) && (G == null ? void 0 : G._cellVariants[T.key]) ? `table-${G == null ? void 0 : G._cellVariants[T.key]}` : void 0,
      {
        "b-table-sticky-column": T.stickyColumn
      }
    ], ne = (T) => [
      T._rowVariant ? `table-${T._rowVariant}` : null,
      T._rowVariant ? `table-${T._rowVariant}` : null,
      m.value && $.value.has(T) ? `selected table-${l.selectionVariant}` : null
    ], ie = () => {
      if (!m.value)
        return;
      const T = $.value.size > 0 ? Array.from($.value) : [];
      $.value = /* @__PURE__ */ new Set([...K.value]), $.value.forEach((G) => {
        T.includes(G) || a("rowSelected", G);
      }), re();
    }, Ae = () => {
      !m.value || ($.value.forEach((T) => {
        a("rowUnselected", T);
      }), $.value = /* @__PURE__ */ new Set([]), re());
    }, Ft = (T) => {
      if (!m.value)
        return;
      const G = K.value[T];
      !G || $.value.has(G) || ($.value.add(G), a("rowSelected", G), re());
    }, ct = (T) => {
      if (!m.value)
        return;
      const G = K.value[T];
      !G || !$.value.has(G) || ($.value.delete(G), a("rowUnselected", G), re());
    }, Me = async (T, G, de) => {
      if (G === de)
        return;
      const M = (Tn) => l.noProvider && l.noProvider.includes(Tn), Ce = !["currentPage", "perPage"].includes(T), ve = ["currentPage", "perPage"].includes(T) && (M("paging") || w.value === !0), Et = ["filter"].includes(T) && (M("filtering") || S.value === !0), Ue = ["sortBy", "sortDesc"].includes(T) && (M("sorting") || B.value === !0);
      ve || Et || Ue || (await N(), Ce && r.notifyFilteredItems());
    };
    return ue(
      () => l.filter,
      (T, G) => {
        T === G || x.value || T || qt(l.items).then((de) => a("filtered", de));
      }
    ), ue(
      h,
      () => h.value !== g.value && a("update:busy", h.value)
    ), ue(
      g,
      () => h.value !== g.value && (h.value = g.value)
    ), ue(
      () => l.filter,
      (T, G) => Me("filter", T, G)
    ), ue(
      () => l.currentPage,
      (T, G) => Me("currentPage", T, G)
    ), ue(
      () => l.perPage,
      (T, G) => Me("perPage", T, G)
    ), ue(
      () => l.sortBy,
      (T, G) => Me("sortBy", T, G)
    ), ue(
      () => l.sortDesc,
      (T, G) => Me("sortDesc", T, G)
    ), ke(() => {
      x.value && N();
    }), t({
      selectAllRows: ie,
      clearSelected: Ae,
      selectRow: Ft,
      unselectRow: ct
    }), (T, G) => (f(), z(It, Be(_e(s(V))), {
      default: D(() => {
        var de;
        return [
          R("thead", null, [
            T.$slots["thead-top"] ? k(T.$slots, "thead-top", { key: 0 }) : X("", !0),
            R("tr", null, [
              s(H) ? (f(), y("th", {
                key: 0,
                class: L(["b-table-selection-column", {
                  "b-table-sticky-column": s(C)
                }])
              }, [
                k(T.$slots, "select-head", {}, () => [
                  te(W(typeof e.selectHead == "boolean" ? "Selected" : e.selectHead), 1)
                ])
              ], 2)) : X("", !0),
              (f(!0), y(se, null, fe(s(_), (M) => (f(), y("th", Y({
                key: M.key,
                scope: "col",
                class: Q(M),
                title: M.headerTitle,
                abbr: M.headerAbbr,
                style: M.thStyle
              }, M.thAttr, {
                onClick: (Ce) => Z(M, Ce)
              }), [
                R("div", ud, [
                  k(T.$slots, "sort-icon", {
                    field: M,
                    sortBy: e.sortBy,
                    selected: M.key === e.sortBy,
                    isDesc: s(c),
                    direction: s(c) ? "desc" : "asc"
                  }, () => [
                    s(j) && M.sortable ? (f(), y("span", {
                      key: 0,
                      class: L(["b-table-sort-icon", {
                        sorted: M.key === e.sortBy,
                        [`sorted-${s(c) ? "desc" : "asc"}`]: M.key === e.sortBy
                      }])
                    }, null, 2)) : X("", !0)
                  ]),
                  R("div", null, [
                    T.$slots["head(" + M.key + ")"] || T.$slots["head()"] ? k(T.$slots, T.$slots["head(" + M.key + ")"] ? "head(" + M.key + ")" : "head()", {
                      key: 0,
                      label: M.label
                    }) : (f(), y(se, { key: 1 }, [
                      te(W(oe(M)), 1)
                    ], 64))
                  ])
                ])
              ], 16, id))), 128))
            ]),
            T.$slots["thead-sub"] ? (f(), y("tr", dd, [
              (f(!0), y(se, null, fe(s(_), (M) => (f(), y("td", {
                key: M.key,
                scope: "col",
                class: L([M.class, M.thClass, M.variant ? `table-${M.variant}` : ""])
              }, [
                T.$slots["thead-sub"] ? k(T.$slots, "thead-sub", Y({
                  key: 0,
                  items: s(_)
                }, M)) : (f(), y(se, { key: 1 }, [
                  te(W(M.label), 1)
                ], 64))
              ], 2))), 128))
            ])) : X("", !0)
          ]),
          R("tbody", null, [
            (f(!0), y(se, null, fe(s(K), (M, Ce) => (f(), y(se, { key: Ce }, [
              R("tr", {
                class: L(ne(M)),
                onClick: (ve) => !s(mt)(ve) && ge(M, Ce, ve),
                onDblclick: (ve) => !s(mt)(ve) && ae(M, Ce, ve),
                onMouseenter: (ve) => !s(mt)(ve) && pe(M, Ce, ve),
                onMouseleave: (ve) => !s(mt)(ve) && ye(M, Ce, ve)
              }, [
                s(H) ? (f(), y("td", {
                  key: 0,
                  class: L(["b-table-selection-column", {
                    "b-table-sticky-column": s(C)
                  }])
                }, [
                  k(T.$slots, "select-cell", {}, () => [
                    R("span", {
                      class: L($.value.has(M) ? "text-primary" : "")
                    }, "\u{1F5F9}", 2)
                  ])
                ], 2)) : X("", !0),
                (f(!0), y(se, null, fe(s(_), (ve) => (f(), y("td", Y({
                  key: ve.key
                }, ve.tdAttr, {
                  class: be(ve, M)
                }), [
                  e.stacked && s(p) ? (f(), y("label", fd, W(oe(ve)), 1)) : X("", !0),
                  T.$slots["cell(" + ve.key + ")"] || T.$slots["cell()"] ? k(T.$slots, T.$slots["cell(" + ve.key + ")"] ? "cell(" + ve.key + ")" : "cell()", {
                    key: 1,
                    value: M[ve.key],
                    index: Ce,
                    item: M,
                    field: ve,
                    items: e.items,
                    toggleDetails: () => J(M),
                    detailsShowing: M._showDetails
                  }) : (f(), y(se, { key: 2 }, [
                    te(W(s(r).formatItem(M, ve)), 1)
                  ], 64))
                ], 16))), 128))
              ], 42, cd),
              M._showDetails === !0 && T.$slots["row-details"] ? (f(), y("tr", {
                key: 0,
                class: L(ne(M))
              }, [
                R("td", { colspan: s(O) }, [
                  k(T.$slots, "row-details", {
                    item: M,
                    toggleDetails: () => J(M)
                  })
                ], 8, vd)
              ], 2)) : X("", !0)
            ], 64))), 128)),
            h.value ? (f(), y("tr", {
              key: 0,
              class: L(["b-table-busy-slot", { "b-table-static-busy": s(K).length === 0 }])
            }, [
              R("td", { colspan: s(O) }, [
                k(T.$slots, "table-busy", {}, () => [
                  R("div", pd, [
                    ce(Pt, { class: "align-middle" }),
                    bd
                  ])
                ])
              ], 8, md)
            ], 2)) : X("", !0),
            s(A) && s(K).length === 0 ? (f(), y("tr", gd, [
              R("td", { colspan: s(O) }, [
                k(T.$slots, "empty", {
                  items: s(K),
                  filtered: s(b)
                }, () => [
                  te(W(s(b) ? e.emptyFilteredText : e.emptyText), 1)
                ])
              ], 8, hd)
            ])) : X("", !0)
          ]),
          s(d) ? (f(), y("tfoot", yd, [
            R("tr", null, [
              (f(!0), y(se, null, fe(s(_), (M) => (f(), y("th", Y({
                key: M.key
              }, M.thAttr, {
                scope: "col",
                class: [M.class, M.thClass, M.variant ? `table-${M.variant}` : ""],
                title: M.headerTitle,
                abbr: M.headerAbbr,
                style: M.thStyle,
                onClick: (Ce) => Z(M, Ce, !0)
              }), W(M.label), 17, Bd))), 128))
            ])
          ])) : T.$slots["custom-foot"] ? (f(), y("tfoot", $d, [
            k(T.$slots, "custom-foot", {
              fields: s(_),
              items: e.items,
              columns: (de = s(_)) == null ? void 0 : de.length
            })
          ])) : X("", !0),
          T.$slots["table-caption"] ? (f(), y("caption", kd, [
            k(T.$slots, "table-caption")
          ])) : e.caption ? (f(), y("caption", Sd, W(e.caption), 1)) : X("", !0)
        ];
      }),
      _: 3
    }, 16));
  }
}), wd = /* @__PURE__ */ P({
  __name: "BTbody",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = i(() => ({
      [`thead-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (f(), y("tbody", {
      role: "rowgroup",
      class: L(s(a))
    }, [
      k(l.$slots, "default")
    ], 2));
  }
}), _d = ["scope", "colspan", "rowspan", "data-label"], Td = { key: 0 }, Vd = /* @__PURE__ */ P({
  __name: "BTd",
  props: {
    colspan: null,
    rowspan: null,
    stackedHeading: null,
    stickyColumn: { default: !1 },
    variant: null
  },
  setup(e) {
    const t = e, a = u(o(t, "stickyColumn")), l = i(() => ({
      [`table-${t.variant}`]: t.variant !== void 0,
      "b-table-sticky-column": a.value,
      "table-b-table-default": a.value && t.variant === void 0
    })), n = i(() => t.colspan ? "colspan" : t.rowspan ? "rowspan" : "col");
    return (r, d) => (f(), y("td", {
      role: "cell",
      scope: s(n),
      class: L(s(l)),
      colspan: e.colspan,
      rowspan: e.rowspan,
      "data-label": e.stackedHeading
    }, [
      e.stackedHeading ? (f(), y("div", Td, [
        k(r.$slots, "default")
      ])) : k(r.$slots, "default", { key: 1 })
    ], 10, _d));
  }
}), Ad = /* @__PURE__ */ P({
  __name: "BTfoot",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = i(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (f(), y("tfoot", {
      role: "rowgroup",
      class: L(s(a))
    }, [
      k(l.$slots, "default")
    ], 2));
  }
}), Od = ["scope", "colspan", "rowspan", "data-label"], xd = { key: 0 }, Pd = /* @__PURE__ */ P({
  __name: "BTh",
  props: {
    colspan: null,
    rowspan: null,
    stackedHeading: null,
    stickyColumn: { default: !1 },
    variant: null
  },
  setup(e) {
    const t = e, a = u(o(t, "stickyColumn")), l = i(() => ({
      [`table-${t.variant}`]: t.variant !== void 0,
      "b-table-sticky-column": a.value,
      "table-b-table-default": a.value && t.variant === void 0
    })), n = i(() => t.colspan ? "colspan" : t.rowspan ? "rowspan" : "col");
    return (r, d) => (f(), y("th", {
      role: "columnheader",
      scope: s(n),
      class: L(s(l)),
      colspan: e.colspan,
      rowspan: e.rowspan,
      "data-label": e.stackedHeading
    }, [
      e.stackedHeading !== void 0 ? (f(), y("div", xd, [
        k(r.$slots, "default")
      ])) : k(r.$slots, "default", { key: 1 })
    ], 10, Od));
  }
}), Id = /* @__PURE__ */ P({
  __name: "BThead",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = i(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (f(), y("thead", {
      role: "rowgroup",
      class: L(s(a))
    }, [
      k(l.$slots, "default")
    ], 2));
  }
}), Fd = /* @__PURE__ */ P({
  __name: "BTr",
  props: {
    variant: null
  },
  setup(e) {
    const t = e, a = i(() => ({
      [`table-${t.variant}`]: t.variant !== void 0
    }));
    return (l, n) => (f(), y("tr", {
      role: "row",
      class: L(s(a))
    }, [
      k(l.$slots, "default")
    ], 2));
  }
}), Ed = /* @__PURE__ */ P({
  __name: "BTab",
  props: {
    id: null,
    title: null,
    active: { default: !1 },
    buttonId: { default: void 0 },
    disabled: { default: !1 },
    lazy: { default: void 0 },
    lazyOnce: { default: void 0 },
    noBody: { type: [Boolean, String], default: !1 },
    tag: { default: "div" },
    titleItemClass: null,
    titleLinkAttributes: { default: void 0 },
    titleLinkClass: null
  },
  setup(e) {
    const t = e, a = He(wl), l = u(o(t, "active")), n = u(o(t, "disabled")), r = u(o(t, t.lazyOnce !== void 0 ? "lazyOnce" : "lazy")), d = U(!1), c = i(() => !!((a == null ? void 0 : a.lazy) || r.value)), v = i(() => t.lazyOnce !== void 0), m = i(() => l.value && !n.value), C = i(() => {
      const g = c.value && v.value && d.value;
      return m.value || !c.value || g;
    }), p = i(() => ({
      active: l.value,
      show: l.value,
      "card-body": (a == null ? void 0 : a.card) && t.noBody === !1
    }));
    return ue(C, (g) => {
      g && !d.value && (d.value = !0);
    }), (g, A) => (f(), z(ee(e.tag), {
      id: e.id,
      class: L(["tab-pane", s(p)]),
      role: "tabpanel",
      "aria-labelledby": "profile-tab"
    }, {
      default: D(() => [
        s(C) ? k(g.$slots, "default", { key: 0 }) : X("", !0)
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Ld = ["id", "data-bs-target", "aria-controls", "aria-selected", "onClick"], zd = /* @__PURE__ */ P({
  __name: "BTabs",
  props: {
    activeNavItemClass: null,
    activeTabClass: null,
    align: null,
    card: { default: !1 },
    contentClass: null,
    end: { default: !1 },
    fill: { default: !1 },
    id: null,
    justified: { default: !1 },
    lazy: { default: !1 },
    navClass: null,
    navWrapperClass: null,
    noFade: { default: !1 },
    noNavStyle: { default: !1 },
    pills: { default: !1 },
    small: { default: !1 },
    tag: { default: "div" },
    vertical: { default: !1 },
    modelValue: { default: -1 }
  },
  emits: ["update:modelValue", "activate-tab", "click"],
  setup(e, { emit: t }) {
    const a = e, l = Se(), n = u(o(a, "card")), r = u(o(a, "end")), d = u(o(a, "fill")), c = u(o(a, "justified")), v = u(o(a, "lazy")), m = u(o(a, "noFade")), C = u(o(a, "noNavStyle")), p = u(o(a, "pills")), g = u(o(a, "small")), A = u(o(a, "vertical")), w = U(a.modelValue), B = U(""), S = i({
      get: () => w.value,
      set: (b) => {
        w.value = b, h.value.length > 0 && b >= 0 && b < h.value.length ? B.value = h.value[b].buttonId : B.value = "", t("update:modelValue", b);
      }
    }), h = i(
      () => l.default === void 0 ? [] : Gt(l.default, "BTab").map((b, x) => {
        b.props || (b.props = {});
        const H = b.props["button-id"] || Re("tab"), j = b.props.id || Re(), q = S.value > -1 ? x === S.value : b.props.active === "", K = b.props["title-item-class"], oe = b.props["title-link-attributes"];
        return {
          buttonId: H,
          contentId: j,
          active: q,
          disabled: b.props.disabled === "" || b.props.disabled === !0,
          navItemClasses: [
            {
              active: q,
              disabled: b.props.disabled === "" || b.props.disabled === !0
            },
            q && a.activeNavItemClass ? a.activeNavItemClass : null,
            b.props["title-link-class"]
          ],
          tabClasses: [
            {
              fade: !m.value
            },
            q && a.activeTabClass ? a.activeTabClass : null
          ],
          target: `#${j}`,
          title: b.props.title,
          titleItemClass: K,
          titleLinkAttributes: oe,
          onClick: b.props.onClick,
          tab: b,
          tabComponent: () => Gt(l.default, "BTab")[x]
        };
      })
    ), $ = i(() => !((h == null ? void 0 : h.value) && h.value.length > 0)), F = i(() => ({
      "d-flex": A.value,
      "align-items-start": A.value
    })), I = dt(o(a, "align")), V = i(() => ({
      "nav-pills": p.value,
      "flex-column me-3": A.value,
      [I.value]: a.align !== void 0,
      "nav-fill": d.value,
      "card-header-tabs": n.value,
      "nav-justified": c.value,
      "nav-tabs": !C.value && !p.value,
      small: g.value
    })), _ = (b) => {
      let x = !1;
      if (b !== void 0 && b > -1 && b < h.value.length && !h.value[b].disabled && (S.value < 0 || h.value[b].buttonId !== B.value)) {
        const H = new De("activate-tab", { cancelable: !0 });
        t("activate-tab", b, S.value, H), H.defaultPrevented || (S.value = b, x = !0);
      }
      return !x && a.modelValue !== S.value && t("update:modelValue", S.value), x;
    }, O = (b, x) => {
      var H;
      _(x), x >= 0 && !h.value[x].disabled && ((H = h.value[x]) == null ? void 0 : H.onClick) && typeof h.value[x].onClick == "function" && h.value[x].onClick(b);
    };
    return _(w.value), ue(
      () => a.modelValue,
      (b, x) => {
        if (b === x)
          return;
        if (b = Math.max(b, -1), x = Math.max(x, -1), h.value.length <= 0) {
          S.value = -1;
          return;
        }
        const H = b > x;
        let j = b;
        const q = h.value.length - 1;
        for (; j >= 0 && j <= q && h.value[j].disabled; )
          j += H ? 1 : -1;
        if (j < 0) {
          _(0);
          return;
        }
        if (j >= h.value.length) {
          _(h.value.length - 1);
          return;
        }
        _(j);
      }
    ), ue(h, () => {
      let b = h.value.map((x) => x.active && !x.disabled).lastIndexOf(!0);
      b < 0 && (S.value >= h.value.length ? b = h.value.map((x) => !x.disabled).lastIndexOf(!0) : h.value[S.value] && !h.value[S.value].disabled && (b = S.value)), b < 0 && (b = h.value.map((x) => !x.disabled).indexOf(!0)), h.value.forEach((x, H) => x.active = H === b), _(b);
    }), ke(() => {
      if (S.value < 0 && h.value.length > 0 && !h.value.some((b) => b.active)) {
        const b = h.value.map((x) => !x.disabled).indexOf(!0);
        _(b >= 0 ? b : -1);
      }
    }), at(wl, {
      lazy: v.value,
      card: n.value
    }), (b, x) => (f(), z(ee(e.tag), {
      id: e.id,
      class: L(["tabs", s(F)])
    }, {
      default: D(() => [
        s(r) ? (f(), y("div", {
          key: 0,
          class: L(["tab-content", e.contentClass])
        }, [
          (f(!0), y(se, null, fe(s(h), ({ tabComponent: H, contentId: j, tabClasses: q, active: K }, oe) => (f(), z(ee(H()), {
            id: j,
            key: oe,
            class: L(q),
            active: K
          }, null, 8, ["id", "class", "active"]))), 128)),
          s($) ? (f(), y("div", {
            key: "bv-empty-tab",
            class: L(["tab-pane active", { "card-body": s(n) }])
          }, [
            k(b.$slots, "empty")
          ], 2)) : X("", !0)
        ], 2)) : X("", !0),
        R("div", {
          class: L([e.navWrapperClass, { "card-header": s(n), "ms-auto": e.vertical && s(r) }])
        }, [
          R("ul", {
            class: L(["nav", [s(V), e.navClass]]),
            role: "tablist"
          }, [
            k(b.$slots, "tabs-start"),
            (f(!0), y(se, null, fe(s(h), ({ tab: H, buttonId: j, contentId: q, navItemClasses: K, active: oe, target: Z }, ge) => {
              var ae, pe, ye;
              return f(), y("li", {
                key: ge,
                class: L(["nav-item", (ae = H == null ? void 0 : H.props) == null ? void 0 : ae["title-item-class"]]),
                role: "presentation"
              }, [
                R("button", Y({
                  id: j,
                  class: ["nav-link", K],
                  "data-bs-toggle": "tab",
                  "data-bs-target": Z,
                  role: "tab",
                  "aria-controls": q,
                  "aria-selected": oe
                }, (pe = H == null ? void 0 : H.props) == null ? void 0 : pe["title-link-attributes"], {
                  onClick: Xe((he) => O(he, ge), ["stop", "prevent"])
                }), [
                  H.children && H.children.title ? (f(), z(ee(H.children.title), { key: 0 })) : (f(), y(se, { key: 1 }, [
                    te(W((ye = H == null ? void 0 : H.props) == null ? void 0 : ye.title), 1)
                  ], 64))
                ], 16, Ld)
              ], 2);
            }), 128)),
            k(b.$slots, "tabs-end")
          ], 2)
        ], 2),
        s(r) ? X("", !0) : (f(), y("div", {
          key: 1,
          class: L(["tab-content", e.contentClass])
        }, [
          (f(!0), y(se, null, fe(s(h), ({ tabComponent: H, contentId: j, tabClasses: q, active: K }, oe) => (f(), z(ee(H()), {
            id: j,
            key: oe,
            class: L(q),
            active: K
          }, null, 8, ["id", "class", "active"]))), 128)),
          s($) ? (f(), y("div", {
            key: "bv-empty-tab",
            class: L(["tab-pane active", { "card-body": s(n) }])
          }, [
            k(b.$slots, "empty")
          ], 2)) : X("", !0)
        ], 2))
      ]),
      _: 3
    }, 8, ["id", "class"]));
  }
}), Nd = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BAccordion: rs,
  BAccordionItem: ks,
  BAlert: xs,
  BAvatar: Es,
  BAvatarGroup: Ls,
  BBadge: Ds,
  BBreadcrumb: qs,
  BBreadcrumbItem: Yl,
  BButton: et,
  BButtonGroup: Gs,
  BButtonToolbar: Ws,
  BCloseButton: nt,
  BCard: on,
  BCardBody: ln,
  BCardFooter: nn,
  BCardGroup: Xs,
  BCardHeader: en,
  BCardImg: _t,
  BCardSubtitle: an,
  BCardText: Js,
  BCardTitle: tn,
  BCarousel: or,
  BCarouselSlide: dr,
  BCol: st,
  BCollapse: Jl,
  BContainer: hr,
  BDropdown: dn,
  BDropdownDivider: kr,
  BDropdownForm: Tr,
  BDropdownGroup: xr,
  BDropdownHeader: Er,
  BDropdownItem: zr,
  BDropdownItemButton: Hr,
  BDropdownText: jr,
  BForm: cn,
  BFormFloatingLabel: Wr,
  BFormInvalidFeedback: Qt,
  BFormRow: gt,
  BFormText: Yt,
  BFormValidFeedback: Zt,
  BFormCheckbox: fn,
  BFormCheckboxGroup: ei,
  BFormGroup: ii,
  BFormInput: fi,
  BFormRadio: mn,
  BFormRadioGroup: hi,
  BFormSelect: ki,
  BFormSelectOption: fa,
  BFormSelectOptionGroup: pn,
  BFormTag: bn,
  BFormTags: zi,
  BFormTextarea: Mi,
  BImg: ca,
  BInputGroup: Ki,
  BInputGroupAddon: va,
  BInputGroupAppend: Xi,
  BInputGroupPrepend: Ji,
  BInputGroupText: gn,
  BLink: Ve,
  BListGroup: Qi,
  BListGroupItem: Yi,
  BModal: lu,
  BNav: nu,
  BNavForm: ou,
  BNavItem: uu,
  BNavItemDropdown: cu,
  BNavText: vu,
  BNavbar: mu,
  BNavbarBrand: gu,
  BNavbarNav: hu,
  BNavbarToggle: Bu,
  BOffcanvas: wu,
  BOverlay: hn,
  BPagination: Fu,
  BPlaceholder: xe,
  BPlaceholderButton: $n,
  BPlaceholderCard: Eu,
  BPlaceholderTable: Lu,
  BPlaceholderWrapper: zu,
  BPopover: ju,
  BProgress: Gu,
  BProgressBar: kn,
  BRow: Ku,
  BSkeleton: ht,
  BSkeletonIcon: Xu,
  BSkeletonTable: Yu,
  BSkeletonWrapper: Zu,
  BSpinner: Pt,
  BFormSpinButton: nd,
  BTable: Cd,
  BTableSimple: It,
  BTbody: wd,
  BTd: Vd,
  BTfoot: Ad,
  BTh: Pd,
  BThead: Id,
  BTr: Fd,
  BTab: Ed,
  BTabs: zd,
  BToastContainer: Jt,
  BTransition: lt,
  BToast: un,
  BToaster: Jt,
  BToastPlugin: br
}, Symbol.toStringTag, { value: "Module" })), Dd = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  vBColorMode: is,
  vBPopover: us,
  vBToggle: da,
  vBTooltip: ps,
  vBVisible: gs
}, Symbol.toStringTag, { value: "Module" })), jd = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  useBreadcrumb: Hl,
  useColorMode: os
}, Symbol.toStringTag, { value: "Module" })), qd = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null,
  BvEvent: De,
  BvTriggerableEvent: oa,
  BvCarouselEvent: cl
}, Symbol.toStringTag, { value: "Module" })), Gd = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({
  __proto__: null
}, Symbol.toStringTag, { value: "Module" })), Ud = {
  install(e, t = {}) {
    Object.entries(Nd).forEach(([a, l]) => {
      e.component(a, l);
    }), Object.entries(Dd).forEach(([a, l]) => {
      e.directive(a, l);
    }), ns(e);
  }
};
export {
  rs as BAccordion,
  ks as BAccordionItem,
  xs as BAlert,
  Es as BAvatar,
  Ls as BAvatarGroup,
  Ds as BBadge,
  qs as BBreadcrumb,
  Yl as BBreadcrumbItem,
  et as BButton,
  Gs as BButtonGroup,
  Ws as BButtonToolbar,
  on as BCard,
  ln as BCardBody,
  nn as BCardFooter,
  Xs as BCardGroup,
  en as BCardHeader,
  _t as BCardImg,
  an as BCardSubtitle,
  Js as BCardText,
  tn as BCardTitle,
  or as BCarousel,
  dr as BCarouselSlide,
  nt as BCloseButton,
  st as BCol,
  Jl as BCollapse,
  hr as BContainer,
  dn as BDropdown,
  kr as BDropdownDivider,
  Tr as BDropdownForm,
  xr as BDropdownGroup,
  Er as BDropdownHeader,
  zr as BDropdownItem,
  Hr as BDropdownItemButton,
  jr as BDropdownText,
  cn as BForm,
  fn as BFormCheckbox,
  ei as BFormCheckboxGroup,
  Wr as BFormFloatingLabel,
  ii as BFormGroup,
  fi as BFormInput,
  Qt as BFormInvalidFeedback,
  mn as BFormRadio,
  hi as BFormRadioGroup,
  gt as BFormRow,
  ki as BFormSelect,
  fa as BFormSelectOption,
  pn as BFormSelectOptionGroup,
  nd as BFormSpinButton,
  bn as BFormTag,
  zi as BFormTags,
  Yt as BFormText,
  Mi as BFormTextarea,
  Zt as BFormValidFeedback,
  ca as BImg,
  Ki as BInputGroup,
  va as BInputGroupAddon,
  Xi as BInputGroupAppend,
  Ji as BInputGroupPrepend,
  gn as BInputGroupText,
  Ve as BLink,
  Qi as BListGroup,
  Yi as BListGroupItem,
  lu as BModal,
  nu as BNav,
  ou as BNavForm,
  uu as BNavItem,
  cu as BNavItemDropdown,
  vu as BNavText,
  mu as BNavbar,
  gu as BNavbarBrand,
  hu as BNavbarNav,
  Bu as BNavbarToggle,
  wu as BOffcanvas,
  hn as BOverlay,
  Fu as BPagination,
  xe as BPlaceholder,
  $n as BPlaceholderButton,
  Eu as BPlaceholderCard,
  Lu as BPlaceholderTable,
  zu as BPlaceholderWrapper,
  ju as BPopover,
  Gu as BProgress,
  kn as BProgressBar,
  Ku as BRow,
  ht as BSkeleton,
  Xu as BSkeletonIcon,
  Yu as BSkeletonTable,
  Zu as BSkeletonWrapper,
  Pt as BSpinner,
  Ed as BTab,
  Cd as BTable,
  It as BTableSimple,
  zd as BTabs,
  wd as BTbody,
  Vd as BTd,
  Ad as BTfoot,
  Pd as BTh,
  Id as BThead,
  un as BToast,
  Jt as BToastContainer,
  br as BToastPlugin,
  Jt as BToaster,
  Fd as BTr,
  lt as BTransition,
  Ud as BootstrapVueNext,
  cl as BvCarouselEvent,
  De as BvEvent,
  oa as BvTriggerableEvent,
  Nd as Components,
  jd as Composables,
  Dd as Directives,
  Gd as Types,
  qd as Utils,
  Ud as default,
  Hl as useBreadcrumb,
  os as useColorMode,
  rn as useToast,
  is as vBColorMode,
  us as vBPopover,
  da as vBToggle,
  ps as vBTooltip,
  gs as vBVisible
};
//# sourceMappingURL=bootstrap-vue-next.es.js.map
